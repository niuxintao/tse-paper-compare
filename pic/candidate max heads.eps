%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: candidate max heads.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: niuxintao
%%CreationDate: 5/24/2013, 12:32:10 PM
%%BoundingBox: -1 0 456 536
%%HiResBoundingBox: 0 0 455.9175 535.7928
%%CropBox: 0 0 455.9175 535.7928
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 953 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-20:48:00        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2013-05-24T12:31:33-07:00"
   xmp:CreatorTool="Microsoft® Visio® 2013"
   xmp:ModifyDate="2013-05-24T12:31:33-07:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>ThinkCentre</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -535.793 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 535.793 li
455.917 535.793 li
455.917 0 li
cp
clp
[1 0 0 1 -13.4302 0 ]ct
465.75 238.613 mo
18.75 238.613 li
18.75 236.088 li
463.415 236.088 li
463.514 236.088 463.611 236.048 463.68 235.978 cv
463.75 235.909 463.79 235.812 463.79 235.713 cv
463.79 4.61302 li
465.75 4.61302 li
465.75 238.613 li
false sop
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[448.5 0 0 235.5 4.56983 296.43 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 598 
/H 314 
/M[598 0 0 -314 0 314 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 598 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 598 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 598 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 598 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&i;eH0JcLB&
JcLB&JcLB&JcLB&aoDDV\efr7Jes"TJf""p"9er/!"Y>,Je<SHJe=C_"9S`+!"eT3JeEYJJeEYJ^(UGJ
`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>
OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+
JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&
JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&
JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&
aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0
rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4g
Jes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6
Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4V
Jes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"T
Jeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"T
oG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'
";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g
#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K
!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1
h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+Q
Je<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZ
Je<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SH
Je<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SH
Je@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`
":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@
":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)
"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+
mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+
\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]b
JeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJ
JeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJ
JeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJ
WY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2
!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g
!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>
g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pH
JcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%h
JcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&
JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&
JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&
PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn
\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilX
KGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHk
Jes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"T
Jes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"T
JetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T
^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q
";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR
#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K
!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1
PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jf
Je<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:
Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SH
Je=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SH
Je?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SH
j:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6
"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k
"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=
rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"
JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PB
JeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kL
JeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJ
JeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJ
JeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r
!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS[
"U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;
"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]
JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\k
JcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6
JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&
JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&
i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9
mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsg
Jes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]g
Jes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"T
Jes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"T
Jf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"T
WYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<
";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG
#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K
!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1
aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5q
Je<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>O
Je<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SH
Je<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SH
RLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SH
cOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U
!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?
!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?
!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+
KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*a
JeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,
JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJ
JeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ
^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJ
oF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F
"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>
`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>
OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+
JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&
JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&
JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&
aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0
rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4g
Jes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6
Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4V
Jes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"T
Jeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"T
oG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'
";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g
#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K
!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1
h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+Q
Je<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZ
Je<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SH
Je<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SH
Je@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`
":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@
":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)
"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+
mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+
\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]b
JeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJ
JeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJ
JeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJ
WY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2
!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g
!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>
g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pH
JcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%h
JcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&
JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&
JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&
PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn
\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilX
KGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHk
Jes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"T
Jes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"T
JetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T
^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q
";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR
#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K
!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1
PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jf
Je<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:
Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SH
Je=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SH
Je?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SH
j:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6
"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k
"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=
rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"
JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PB
JeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kL
JeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJ
JeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJ
JeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r
!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS[
"U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;
"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]
JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\k
JcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6
JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&
JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&
i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9
mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsg
Jes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]g
Jes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"T
Jes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"T
Jf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"T
WYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<
";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG
#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K
!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1
aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5q
Je<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>O
Je<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SH
Je<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SH
RLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SH
cOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U
!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?
!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?
!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+
KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*a
JeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,
JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJ
JeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ
^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJ
oF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F
"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>
`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>
OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+
JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&
JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&
JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&
aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0
rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4g
Jes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6
Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4V
Jes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"T
Jeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"T
oG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'
";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g
#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K
!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1
h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+Q
Je<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZ
Je<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SH
Je<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SH
Je@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`
":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@
":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)
"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+
mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+
\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]b
JeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJ
JeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJ
JeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJ
WY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2
!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g
!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>
g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pH
JcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%h
JcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&
JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&
JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&
PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn
\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilX
KGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHk
Jes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"T
Jes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"T
JetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T
^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q
";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR
#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K
!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1
PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jf
Je<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:
Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SH
Je=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SH
Je?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SH
j:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6
"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k
"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=
rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"
JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PB
JeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kL
JeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJ
JeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJ
JeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r
!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS[
"U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;
"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]
JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\k
JcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6
JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&
JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&
i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9
mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsg
Jes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]g
Jes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"T
Jes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"T
Jf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"T
WYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<
";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG
#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K
!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1
aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5q
Je<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>O
Je<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SH
Je<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SH
RLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SH
cOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U
!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?
!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?
!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+
KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*a
JeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,
JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJ
JeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ
^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJ
oF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F
"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>
`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>
OoU(6JcLB&PlU4gJes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+
JcLB&JcNpn\JKi6Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&
JcLB&i;ilXKGT4VJes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&
JcM&9mMCHkJes"TJeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&
aoJsgJes"TJes"ToG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0
rr@]gJes"TJetF'";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4g
Jes"TJes"T^D@"g#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6
Jes"TJf"%q";V7K!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4V
Jes"TWYYdR#RCD1h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"T
Jeu0<";V7K!!(+QJe<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"T
oG7WG#RCD1PS&KZJe<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'
";V7K!!(jfJe<SHJe<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^D@"g
#RCD1aUs+:Je<SHJe@&U!Y>M=rr@]bJeEYJJeG'r!YGS>g]2p+JcLB&JcNpn\JKi6Jes"TJf"%q";V7K
!!&5qJe<SHJe=F`":t_?!!)F"JeEYJJeEYJ^CgS["U2pHJcLB&JcLB&i;ilXKGT4VJes"TWYYdR#RCD1
h@Y>OJe<SHJe?<@":t_?!!'PBJeEYJJeEYJoF_3;"U1%hJcLB&JcM&9mMCHkJes"TJeu0<";V7K!!(+Q
Je<SHJe<SHj:MG)"U4o+KG&kLJeEYJWY,@F"U3Z]JcLB&JcLB&aoJsgJes"TJes"ToG7WG#RCD1PS&KZ
Je<SHRLoZ6"U+l+mLk*aJeEYJJeGg2!YGS>`rL\kJcLB&JcOa0rr@]gJes"TJetF'";V7K!!(jfJe<SH
Je<SHcOg9k"U+l+\IsK,JeEYJJeI\g!YGS>OoU(6JcLB&PlU4gJes"TJes"T^)-eTrrC.QJe<SHJe<SH
it;:prr@]bJeEYJJeG$qrrq0XJcLB&JcLB&aoDDO\e9T-JeEYJJeI\g"VCe;!!!@k%>#%@%>#%X%0[.@
!<<*,mgapZJe!ABJe#O*!Y#/2`rL\kJcLB&JcOa0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&i;eH0JcLB&JcLB&JcLB&JcLB&bQ*.~>

%%EndBinary
grestore
np
18.375 235.713 mo
463.415 235.713 li
463.415 4.23297 li
18.375 4.23297 li
18.375 235.713 li
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
18.375 235.713 mo
18.375 235.338 li
463.04 235.338 li
463.04 4.60849 li
18.7503 4.60849 li
18.7504 235.713 li
18.375 235.713 li
18.375 235.338 li
18.375 235.713 li
17.9996 235.713 li
17.9996 4.23297 li
17.9996 4.13426 18.0397 4.03755 18.1095 3.96772 cv
18.1795 3.89774 18.2762 3.8577 18.375 3.8577 cv
463.415 3.8577 li
463.514 3.8577 463.611 3.89774 463.68 3.96772 cv
463.75 4.03755 463.79 4.13426 463.79 4.23297 cv
463.79 235.713 li
463.79 235.812 463.75 235.909 463.68 235.978 cv
463.611 236.048 463.514 236.088 463.415 236.088 cv
18.375 236.088 li
18.2762 236.088 18.1795 236.048 18.1095 235.978 cv
18.0397 235.909 17.9996 235.812 17.9996 235.713 cv
18.375 235.713 li
1 /0 /CSD get_res sepcs
.18 sep
f
18.375 235.713 mo
39.635 235.713 li
39.635 4.23303 li
18.375 4.23303 li
cp
ef
.75075 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.375 235.713 mo
39.635 235.713 li
39.635 4.23303 li
18.375 4.23303 li
cp
@
26.048 145.633 mo
26.209 145.643 li
26.319 145.683 li
26.38 145.743 li
26.399 145.813 li
26.399 148.363 li
28.548 148.363 li
28.548 145.953 li
28.565 145.883 li
28.621 145.823 li
28.726 145.783 li
28.895 145.773 li
29.053 145.783 li
29.161 145.823 li
29.224 145.883 li
29.246 145.953 li
29.246 148.363 li
31.878 148.363 li
31.944 148.383 li
31.993 148.453 li
32.022 148.593 li
32.034 148.823 li
32.022 149.043 li
31.993 149.183 li
31.944 149.263 li
31.878 149.283 li
26.028 149.283 li
25.901 149.283 25.813 149.243 25.762 149.173 cv
25.687 148.943 li
25.687 145.813 li
25.706 145.743 li
25.77 145.683 li
25.884 145.643 li
26.048 145.633 li
cp
31.883 143.253 mo
31.949 143.273 li
31.995 143.343 li
32.024 143.473 li
32.034 143.693 li
32.034 143.783 32.031 143.853 32.024 143.913 cv
31.995 144.043 li
31.949 144.113 li
31.883 144.133 li
27.488 144.133 li
27.425 144.113 li
27.376 144.043 li
27.347 143.913 li
27.34 143.853 27.337 143.783 27.337 143.693 cv
27.347 143.473 li
27.376 143.343 li
27.425 143.273 li
27.488 143.253 li
cp
26.004 143.143 mo
26.193 143.143 26.321 143.183 26.39 143.263 cv
26.458 143.343 26.492 143.493 26.492 143.703 cv
26.492 143.913 26.459 144.053 26.392 144.123 cv
26.325 144.203 26.199 144.243 26.014 144.243 cv
25.825 144.243 25.696 144.203 25.628 144.123 cv
25.56 144.043 25.525 143.903 25.525 143.693 cv
25.525 143.483 25.559 143.343 25.625 143.263 cv
25.692 143.183 25.818 143.143 26.004 143.143 cv
cp
27.776 139.063 mo
27.957 139.063 li
28.072 139.083 li
28.135 139.123 li
28.157 139.193 li
28.135 139.303 li
28.091 139.443 li
28.05 139.613 li
28.03 139.823 li
28.079 140.083 li
28.24 140.353 li
28.315 140.453 28.414 140.553 28.538 140.653 cv
28.662 140.763 28.813 140.873 28.992 141.003 cv
31.883 141.003 li
31.949 141.023 li
31.995 141.093 li
32.024 141.223 li
32.034 141.443 li
32.034 141.533 32.031 141.603 32.024 141.663 cv
31.995 141.793 li
31.949 141.863 li
31.883 141.883 li
27.488 141.883 li
27.422 141.873 li
27.374 141.803 li
27.344 141.683 li
27.337 141.483 li
27.344 141.283 li
27.374 141.163 li
27.422 141.103 li
27.488 141.083 li
28.128 141.083 li
27.952 140.953 27.809 140.833 27.698 140.713 cv
27.588 140.593 27.501 140.483 27.437 140.383 cv
27.374 140.273 27.33 140.173 27.305 140.073 cv
27.281 139.973 27.269 139.863 27.269 139.763 cv
27.276 139.603 li
27.303 139.423 li
27.347 139.243 li
27.396 139.133 li
27.442 139.093 li
27.498 139.073 li
27.598 139.063 li
27.776 139.063 li
cp
30.687 135.103 mo
30.911 135.103 31.111 135.143 31.287 135.233 cv
31.463 135.333 31.611 135.463 31.731 135.623 cv
31.852 135.793 31.943 135.993 32.005 136.233 cv
32.067 136.463 32.098 136.713 32.098 136.993 cv
32.098 137.173 32.085 137.333 32.061 137.493 cv
32.037 137.643 32.006 137.783 31.968 137.903 cv
31.931 138.033 31.892 138.133 31.851 138.223 cv
31.741 138.413 li
31.605 138.493 li
31.546 138.513 31.466 138.523 31.365 138.523 cv
31.209 138.513 li
31.106 138.483 li
31.05 138.443 li
31.033 138.373 li
31.099 138.193 li
31.143 138.123 31.191 138.023 31.243 137.913 cv
31.295 137.803 31.343 137.663 31.387 137.513 cv
31.431 137.363 31.453 137.183 31.453 136.983 cv
31.453 136.833 31.439 136.693 31.409 136.573 cv
31.38 136.453 31.337 136.343 31.28 136.253 cv
31.223 136.163 31.15 136.093 31.063 136.053 cv
30.975 136.003 30.87 135.973 30.75 135.973 cv
30.626 135.973 30.522 136.013 30.438 136.083 cv
30.353 136.153 30.278 136.243 30.213 136.353 cv
30.148 136.473 30.09 136.603 30.04 136.743 cv
29.989 136.883 29.936 137.033 29.881 137.183 cv
29.826 137.343 29.763 137.493 29.693 137.633 cv
29.623 137.783 29.537 137.913 29.437 138.023 cv
29.336 138.133 29.215 138.233 29.075 138.303 cv
28.935 138.373 28.768 138.403 28.572 138.403 cv
28.4 138.403 28.235 138.363 28.077 138.293 cv
27.919 138.223 27.78 138.113 27.662 137.963 cv
27.543 137.813 27.448 137.633 27.376 137.413 cv
27.304 137.193 27.269 136.933 27.269 136.643 cv
27.269 136.513 27.278 136.383 27.298 136.253 cv
27.317 136.123 27.342 136.013 27.371 135.903 cv
27.4 135.803 27.432 135.713 27.466 135.643 cv
27.557 135.473 li
27.625 135.403 li
27.691 135.373 li
27.781 135.353 li
27.913 135.353 li
28.057 135.353 li
28.157 135.383 li
28.213 135.433 li
28.23 135.483 li
28.177 135.623 li
28.141 135.693 28.103 135.763 28.062 135.863 cv
28.021 135.963 27.983 136.073 27.947 136.203 cv
27.911 136.333 27.894 136.483 27.894 136.653 cv
27.894 136.803 27.909 136.933 27.94 137.053 cv
27.971 137.163 28.015 137.263 28.072 137.333 cv
28.274 137.503 li
28.353 137.533 28.437 137.553 28.528 137.553 cv
28.655 137.553 28.762 137.523 28.848 137.453 cv
28.934 137.373 29.01 137.283 29.075 137.173 cv
29.14 137.053 29.199 136.923 29.251 136.773 cv
29.303 136.633 29.357 136.483 29.412 136.333 cv
29.467 136.173 29.529 136.023 29.598 135.873 cv
29.666 135.733 29.749 135.593 29.847 135.483 cv
29.944 135.363 30.062 135.273 30.198 135.203 cv
30.335 135.133 30.498 135.103 30.687 135.103 cv
cp
31.561 131.123 mo
31.655 131.123 31.73 131.133 31.785 131.143 cv
31.907 131.203 li
31.98 131.333 li
32.037 131.533 li
32.073 131.763 li
32.088 132.013 li
32.088 132.263 32.058 132.483 31.998 132.663 cv
31.937 132.833 31.846 132.983 31.724 133.103 cv
31.602 133.213 31.447 133.293 31.26 133.353 cv
31.073 133.403 30.853 133.423 30.599 133.423 cv
28.03 133.423 li
28.03 134.103 li
27.952 134.233 li
27.9 134.263 27.815 134.283 27.698 134.283 cv
27.542 134.263 li
27.437 134.233 li
27.378 134.173 li
27.361 134.093 li
27.361 133.423 li
26.316 133.423 li
26.253 133.403 li
26.202 133.333 li
26.17 133.203 li
26.16 132.983 li
26.17 132.763 li
26.202 132.633 li
26.253 132.563 li
26.316 132.543 li
27.361 132.543 li
27.361 131.303 li
27.378 131.223 li
27.437 131.163 li
27.542 131.133 li
27.698 131.123 li
27.815 131.123 27.9 131.143 27.952 131.173 cv
28.03 131.303 li
28.03 132.543 li
30.481 132.543 li
30.784 132.543 31.013 132.493 31.168 132.393 cv
31.322 132.293 31.399 132.113 31.399 131.863 cv
31.377 131.643 li
31.331 131.473 li
31.285 131.343 li
31.263 131.243 li
31.275 131.193 li
31.321 131.153 li
31.414 131.133 li
31.561 131.123 li
cp
31.883 126.753 mo
31.949 126.773 li
31.995 126.843 li
32.024 126.973 li
32.034 127.193 li
32.034 127.283 32.031 127.353 32.024 127.413 cv
31.995 127.543 li
31.949 127.613 li
31.883 127.633 li
27.488 127.633 li
27.425 127.613 li
27.376 127.543 li
27.347 127.413 li
27.34 127.353 27.337 127.283 27.337 127.193 cv
27.347 126.973 li
27.376 126.843 li
27.425 126.773 li
27.488 126.753 li
cp
26.004 126.643 mo
26.193 126.643 26.321 126.683 26.39 126.763 cv
26.458 126.843 26.492 126.993 26.492 127.203 cv
26.492 127.413 26.459 127.553 26.392 127.623 cv
26.325 127.703 26.199 127.743 26.014 127.743 cv
25.825 127.743 25.696 127.703 25.628 127.623 cv
25.56 127.543 25.525 127.403 25.525 127.193 cv
25.525 126.983 25.559 126.843 25.625 126.763 cv
25.692 126.683 25.818 126.643 26.004 126.643 cv
cp
31.561 122.123 mo
31.655 122.123 31.73 122.133 31.785 122.143 cv
31.907 122.203 li
31.98 122.333 li
32.037 122.533 li
32.073 122.763 li
32.088 123.013 li
32.088 123.263 32.058 123.483 31.998 123.663 cv
31.937 123.833 31.846 123.983 31.724 124.103 cv
31.602 124.213 31.447 124.293 31.26 124.353 cv
31.073 124.403 30.853 124.423 30.599 124.423 cv
28.03 124.423 li
28.03 125.103 li
27.952 125.233 li
27.9 125.263 27.815 125.283 27.698 125.283 cv
27.542 125.263 li
27.437 125.233 li
27.378 125.173 li
27.361 125.093 li
27.361 124.423 li
26.316 124.423 li
26.253 124.403 li
26.202 124.333 li
26.17 124.203 li
26.16 123.983 li
26.17 123.763 li
26.202 123.633 li
26.253 123.563 li
26.316 123.543 li
27.361 123.543 li
27.361 122.303 li
27.378 122.223 li
27.437 122.163 li
27.542 122.133 li
27.698 122.123 li
27.815 122.123 27.9 122.143 27.952 122.173 cv
28.03 122.303 li
28.03 123.543 li
30.481 123.543 li
30.784 123.543 31.013 123.493 31.168 123.393 cv
31.322 123.293 31.399 123.113 31.399 122.863 cv
31.377 122.643 li
31.331 122.473 li
31.285 122.343 li
31.263 122.243 li
31.275 122.193 li
31.321 122.153 li
31.414 122.133 li
31.561 122.123 li
cp
29.495 117.513 mo
29.622 117.513 29.712 117.543 29.766 117.613 cv
29.847 117.853 li
29.847 121.043 li
30.091 121.043 30.311 121.013 30.506 120.963 cv
30.701 120.903 30.869 120.813 31.009 120.693 cv
31.149 120.563 31.256 120.403 31.331 120.193 cv
31.406 119.993 31.443 119.753 31.443 119.463 cv
31.443 119.223 31.426 119.023 31.392 118.843 cv
31.358 118.663 31.32 118.503 31.277 118.373 cv
31.235 118.243 31.197 118.133 31.163 118.053 cv
31.111 117.863 li
31.128 117.793 li
31.18 117.743 li
31.275 117.723 li
31.424 117.713 li
31.534 117.723 li
31.617 117.733 li
31.683 117.763 li
31.739 117.813 li
31.757 117.833 31.786 117.883 31.827 117.983 cv
31.867 118.083 31.907 118.203 31.946 118.363 cv
31.985 118.513 32.02 118.693 32.051 118.893 cv
32.082 119.093 32.098 119.313 32.098 119.543 cv
32.098 119.943 32.047 120.283 31.946 120.583 cv
31.845 120.883 31.696 121.133 31.497 121.343 cv
31.299 121.543 31.05 121.703 30.75 121.803 cv
30.451 121.903 30.102 121.953 29.705 121.953 cv
29.327 121.953 28.988 121.903 28.687 121.793 cv
28.386 121.693 28.13 121.533 27.92 121.333 cv
27.71 121.133 27.549 120.883 27.437 120.603 cv
27.325 120.313 27.269 119.993 27.269 119.633 cv
27.269 119.263 27.324 118.933 27.435 118.673 cv
27.545 118.403 27.694 118.183 27.881 118.013 cv
28.069 117.843 28.288 117.713 28.541 117.633 cv
28.793 117.553 29.062 117.513 29.349 117.513 cv
cp
29.256 118.403 mo
28.833 118.393 28.501 118.493 28.26 118.713 cv
28.019 118.933 27.898 119.253 27.898 119.683 cv
27.898 119.903 27.936 120.093 28.011 120.263 cv
28.086 120.423 28.185 120.563 28.309 120.673 cv
28.432 120.793 28.576 120.873 28.741 120.933 cv
28.905 121.003 29.077 121.033 29.256 121.043 cv
cp
27.776 112.813 mo
27.957 112.813 li
28.072 112.833 li
28.135 112.873 li
28.157 112.943 li
28.135 113.053 li
28.091 113.193 li
28.05 113.363 li
28.03 113.573 li
28.079 113.833 li
28.24 114.103 li
28.315 114.203 28.414 114.303 28.538 114.403 cv
28.662 114.513 28.813 114.623 28.992 114.753 cv
31.883 114.753 li
31.949 114.773 li
31.995 114.843 li
32.024 114.973 li
32.034 115.193 li
32.034 115.283 32.031 115.353 32.024 115.413 cv
31.995 115.543 li
31.949 115.613 li
31.883 115.633 li
27.488 115.633 li
27.422 115.623 li
27.374 115.553 li
27.344 115.433 li
27.337 115.233 li
27.344 115.033 li
27.374 114.913 li
27.422 114.853 li
27.488 114.833 li
28.128 114.833 li
27.952 114.703 27.809 114.583 27.698 114.463 cv
27.588 114.343 27.501 114.233 27.437 114.133 cv
27.374 114.023 27.33 113.923 27.305 113.823 cv
27.281 113.723 27.269 113.613 27.269 113.513 cv
27.276 113.353 li
27.303 113.173 li
27.347 112.993 li
27.396 112.883 li
27.442 112.843 li
27.498 112.823 li
27.598 112.813 li
27.776 112.813 li
cp
31.888 108.243 mo
31.976 108.283 li
32.02 108.403 li
32.034 108.623 li
32.034 108.723 32.029 108.793 32.02 108.853 cv
31.976 108.973 li
31.888 109.003 li
31.448 109.003 li
31.653 109.223 31.813 109.453 31.927 109.713 cv
32.041 109.973 32.098 110.243 32.098 110.533 cv
32.098 110.793 32.068 111.023 32.007 111.223 cv
31.947 111.433 31.86 111.613 31.746 111.753 cv
31.632 111.903 31.492 112.013 31.326 112.093 cv
31.16 112.173 30.971 112.213 30.76 112.213 cv
30.512 112.213 30.298 112.153 30.115 112.043 cv
29.933 111.933 29.782 111.773 29.661 111.573 cv
29.541 111.363 29.45 111.103 29.39 110.803 cv
29.33 110.503 29.3 110.163 29.3 109.793 cv
29.3 109.123 li
28.958 109.123 li
28.789 109.123 28.639 109.143 28.509 109.183 cv
28.379 109.223 28.27 109.283 28.184 109.373 cv
28.098 109.463 28.033 109.573 27.989 109.713 cv
27.945 109.853 27.923 110.023 27.923 110.233 cv
27.923 110.453 27.946 110.643 27.994 110.823 cv
28.041 110.993 28.093 111.143 28.15 111.273 cv
28.207 111.403 28.259 111.513 28.306 111.603 cv
28.377 111.803 li
28.357 111.873 li
28.299 111.933 li
28.199 111.963 li
28.064 111.973 li
27.872 111.963 li
27.737 111.863 li
27.695 111.823 27.645 111.733 27.588 111.613 cv
27.531 111.503 27.479 111.363 27.432 111.213 cv
27.385 111.053 27.346 110.883 27.315 110.703 cv
27.284 110.523 27.269 110.333 27.269 110.153 cv
27.269 109.803 27.304 109.513 27.376 109.263 cv
27.448 109.023 27.553 108.823 27.691 108.673 cv
27.829 108.523 28.001 108.413 28.206 108.343 cv
28.411 108.283 28.65 108.243 28.924 108.243 cv
cp
29.881 109.123 mo
29.881 109.883 li
29.881 110.123 29.9 110.333 29.937 110.513 cv
29.974 110.693 30.03 110.843 30.103 110.963 cv
30.176 111.083 30.264 111.163 30.367 111.223 cv
30.469 111.273 30.587 111.303 30.721 111.303 cv
30.949 111.303 31.13 111.223 31.265 111.063 cv
31.4 110.903 31.468 110.683 31.468 110.393 cv
31.468 110.163 31.414 109.953 31.307 109.753 cv
31.199 109.553 31.035 109.343 30.814 109.123 cv
cp
31.561 104.123 mo
31.655 104.123 31.73 104.133 31.785 104.143 cv
31.907 104.203 li
31.98 104.333 li
32.037 104.533 li
32.073 104.763 li
32.088 105.013 li
32.088 105.263 32.058 105.483 31.998 105.663 cv
31.937 105.833 31.846 105.983 31.724 106.103 cv
31.602 106.213 31.447 106.293 31.26 106.353 cv
31.073 106.403 30.853 106.423 30.599 106.423 cv
28.03 106.423 li
28.03 107.103 li
27.952 107.233 li
27.9 107.263 27.815 107.283 27.698 107.283 cv
27.542 107.263 li
27.437 107.233 li
27.378 107.173 li
27.361 107.093 li
27.361 106.423 li
26.316 106.423 li
26.253 106.403 li
26.202 106.333 li
26.17 106.203 li
26.16 105.983 li
26.17 105.763 li
26.202 105.633 li
26.253 105.563 li
26.316 105.543 li
27.361 105.543 li
27.361 104.303 li
27.378 104.223 li
27.437 104.163 li
27.542 104.133 li
27.698 104.123 li
27.815 104.123 27.9 104.143 27.952 104.173 cv
28.03 104.303 li
28.03 105.543 li
30.481 105.543 li
30.784 105.543 31.013 105.493 31.168 105.393 cv
31.322 105.293 31.399 105.113 31.399 104.863 cv
31.377 104.643 li
31.331 104.473 li
31.285 104.343 li
31.263 104.243 li
31.275 104.193 li
31.321 104.153 li
31.414 104.133 li
31.561 104.123 li
cp
31.883 102.003 mo
31.949 102.023 li
31.995 102.093 li
32.024 102.223 li
32.034 102.443 li
32.034 102.533 32.031 102.603 32.024 102.663 cv
31.995 102.793 li
31.949 102.863 li
31.883 102.883 li
27.488 102.883 li
27.425 102.863 li
27.376 102.793 li
27.347 102.663 li
27.34 102.603 27.337 102.533 27.337 102.443 cv
27.347 102.223 li
27.376 102.093 li
27.425 102.023 li
27.488 102.003 li
cp
26.004 101.893 mo
26.193 101.893 26.321 101.933 26.39 102.013 cv
26.458 102.093 26.492 102.243 26.492 102.453 cv
26.492 102.663 26.459 102.803 26.392 102.873 cv
26.325 102.953 26.199 102.993 26.014 102.993 cv
25.825 102.993 25.696 102.953 25.628 102.873 cv
25.56 102.793 25.525 102.653 25.525 102.443 cv
25.525 102.233 25.559 102.093 25.625 102.013 cv
25.692 101.933 25.818 101.893 26.004 101.893 cv
cp
29.637 96.143 mo
29.995 96.143 30.324 96.193 30.626 96.293 cv
30.927 96.403 31.186 96.553 31.404 96.763 cv
31.622 96.963 31.793 97.223 31.915 97.5331 cv
32.037 97.843 32.098 98.203 32.098 98.613 cv
32.098 99.013 32.044 99.353 31.937 99.653 cv
31.829 99.943 31.673 100.193 31.468 100.393 cv
31.263 100.583 31.014 100.733 30.721 100.833 cv
30.428 100.923 30.096 100.973 29.725 100.973 cv
29.367 100.973 29.037 100.923 28.736 100.823 cv
28.435 100.723 28.175 100.563 27.957 100.363 cv
27.739 100.153 27.57 99.893 27.449 99.593 cv
27.329 99.2831 27.269 98.923 27.269 98.513 cv
27.269 98.113 27.322 97.763 27.43 97.473 cv
27.537 97.173 27.693 96.923 27.898 96.733 cv
28.104 96.5331 28.353 96.383 28.646 96.2831 cv
28.938 96.193 29.269 96.143 29.637 96.143 cv
cp
29.69 97.063 mo
29.453 97.063 29.228 97.083 29.017 97.133 cv
28.805 97.183 28.619 97.263 28.46 97.373 cv
28.3 97.483 28.174 97.633 28.082 97.833 cv
27.989 98.023 27.942 98.263 27.942 98.543 cv
27.942 98.803 27.985 99.0331 28.069 99.223 cv
28.154 99.413 28.274 99.573 28.428 99.693 cv
28.583 99.813 28.766 99.903 28.978 99.963 cv
29.189 100.023 29.42 100.053 29.671 100.053 cv
29.912 100.053 30.138 100.033 30.35 99.983 cv
30.561 99.933 30.746 99.853 30.904 99.743 cv
31.062 99.623 31.187 99.473 31.28 99.2831 cv
31.373 99.093 31.419 98.853 31.419 98.563 cv
31.419 98.303 31.377 98.083 31.292 97.883 cv
31.207 97.693 31.089 97.543 30.936 97.413 cv
30.783 97.293 30.6 97.203 30.389 97.143 cv
30.177 97.083 29.944 97.063 29.69 97.063 cv
cp
31.883 90.473 mo
31.949 90.493 li
31.995 90.563 li
32.024 90.703 li
32.034 90.913 li
32.034 91.0031 32.031 91.073 32.024 91.133 cv
31.995 91.273 li
31.949 91.333 li
31.883 91.363 li
29.31 91.363 li
29.059 91.363 28.857 91.383 28.704 91.423 cv
28.551 91.463 28.419 91.5331 28.309 91.613 cv
28.198 91.693 28.113 91.803 28.055 91.933 cv
27.996 92.063 27.967 92.213 27.967 92.383 cv
27.967 92.603 28.038 92.833 28.182 93.053 cv
28.325 93.273 28.535 93.5031 28.812 93.7531 cv
31.883 93.7531 li
31.949 93.773 li
31.995 93.843 li
32.024 93.973 li
32.034 94.193 li
32.034 94.2831 32.031 94.353 32.024 94.413 cv
31.995 94.543 li
31.949 94.613 li
31.883 94.633 li
27.488 94.633 li
27.422 94.623 li
27.374 94.553 li
27.344 94.433 li
27.337 94.233 li
27.344 94.0331 li
27.374 93.913 li
27.422 93.853 li
27.488 93.833 li
28.069 93.833 li
27.793 93.563 27.59 93.293 27.461 93.023 cv
27.333 92.7531 27.269 92.483 27.269 92.203 cv
27.269 91.883 27.318 91.613 27.417 91.393 cv
27.517 91.173 27.649 90.993 27.815 90.853 cv
27.981 90.723 28.176 90.623 28.399 90.563 cv
28.622 90.5031 28.89 90.473 29.202 90.473 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
18.375 531 mo
464.835 531 li
464.835 244.19 li
18.375 244.19 li
18.375 531 li
1 /0 /CSD get_res sepcs
0 sep
ef
18.375 531 mo
18.375 530.625 li
464.46 530.625 li
464.46 244.566 li
18.7503 244.565 li
18.7504 531 li
18.375 531 li
18.375 530.625 li
18.375 531 li
17.9996 531 li
17.9996 244.19 li
17.9996 244.091 18.0397 243.994 18.1095 243.925 cv
18.1795 243.855 18.2762 243.815 18.375 243.815 cv
464.835 243.815 li
464.934 243.815 465.03 243.855 465.1 243.925 cv
465.17 243.994 465.21 244.091 465.21 244.19 cv
465.21 531 li
465.21 531.099 465.17 531.195 465.1 531.265 cv
465.03 531.335 464.934 531.375 464.835 531.375 cv
18.375 531.375 li
18.2762 531.375 18.1795 531.335 18.1095 531.265 cv
18.0397 531.195 17.9996 531.099 17.9996 531 cv
18.375 531 li
1 /0 /CSD get_res sepcs
.18 sep
f
18.375 531 mo
39.635 531 li
39.635 244.19 li
18.375 244.19 li
cp
ef
18.375 531 mo
39.635 531 li
39.635 244.19 li
18.375 244.19 li
cp
@
30.232 419.743 mo
30.529 419.743 30.792 419.803 31.023 419.923 cv
31.255 420.043 31.451 420.203 31.612 420.413 cv
31.773 420.633 31.894 420.883 31.976 421.173 cv
32.057 421.453 32.098 421.773 32.098 422.103 cv
32.098 422.333 32.08 422.553 32.044 422.753 cv
32.008 422.943 31.964 423.123 31.912 423.283 cv
31.86 423.433 31.806 423.563 31.751 423.673 cv
31.696 423.783 31.648 423.853 31.609 423.893 cv
31.46 423.983 li
31.4 424.003 31.32 424.013 31.219 424.013 cv
31.041 424.003 li
30.926 423.973 li
30.865 423.913 li
30.848 423.843 li
30.931 423.633 li
30.986 423.543 31.046 423.423 31.111 423.273 cv
31.176 423.133 31.237 422.963 31.294 422.763 cv
31.351 422.553 31.38 422.323 31.38 422.063 cv
31.38 421.853 31.355 421.673 31.307 421.503 cv
31.258 421.343 31.189 421.203 31.099 421.083 cv
31.01 420.963 30.9 420.863 30.77 420.803 cv
30.639 420.733 30.491 420.703 30.325 420.703 cv
30.146 420.703 29.993 420.753 29.866 420.843 cv
29.739 420.933 29.628 421.043 29.532 421.193 cv
29.436 421.343 29.348 421.503 29.268 421.693 cv
29.188 421.883 29.107 422.073 29.024 422.273 cv
28.941 422.473 28.849 422.663 28.748 422.853 cv
28.647 423.033 28.528 423.203 28.392 423.343 cv
28.255 423.493 28.095 423.613 27.911 423.703 cv
27.727 423.793 27.506 423.843 27.249 423.843 cv
26.985 423.843 26.75 423.793 26.543 423.683 cv
26.337 423.573 26.163 423.433 26.023 423.243 cv
25.883 423.053 25.777 422.833 25.704 422.573 cv
25.63 422.313 25.594 422.033 25.594 421.733 cv
25.594 421.573 25.606 421.423 25.63 421.263 cv
25.655 421.113 25.687 420.963 25.728 420.823 cv
25.769 420.683 25.814 420.563 25.865 420.453 cv
25.915 420.353 25.956 420.283 25.987 420.243 cv
26.06 420.183 li
26.128 420.153 li
26.229 420.133 li
26.38 420.133 li
26.536 420.143 li
26.651 420.163 li
26.719 420.213 li
26.741 420.273 li
26.673 420.463 li
26.627 420.543 26.576 420.643 26.519 420.773 cv
26.462 420.893 26.41 421.033 26.363 421.203 cv
26.316 421.373 26.292 421.553 26.292 421.763 cv
26.292 421.953 26.316 422.123 26.363 422.263 cv
26.41 422.413 26.473 422.533 26.551 422.623 cv
26.629 422.713 26.722 422.783 26.829 422.833 cv
26.937 422.883 27.05 422.903 27.171 422.903 cv
27.347 422.903 27.498 422.853 27.625 422.763 cv
27.752 422.673 27.864 422.563 27.962 422.413 cv
28.06 422.263 28.149 422.093 28.23 421.903 cv
28.312 421.713 28.394 421.523 28.477 421.323 cv
28.56 421.123 28.651 420.933 28.751 420.743 cv
28.85 420.553 28.967 420.383 29.102 420.233 cv
29.237 420.083 29.397 419.963 29.581 419.873 cv
29.765 419.783 29.982 419.743 30.232 419.743 cv
cp
29.495 414.203 mo
29.622 414.203 29.712 414.233 29.766 414.303 cv
29.847 414.543 li
29.847 417.723 li
30.091 417.723 30.311 417.703 30.506 417.643 cv
30.701 417.593 30.869 417.503 31.009 417.373 cv
31.149 417.253 31.256 417.083 31.331 416.883 cv
31.406 416.683 31.443 416.433 31.443 416.143 cv
31.443 415.913 31.426 415.713 31.392 415.533 cv
31.358 415.353 31.32 415.193 31.277 415.063 cv
31.235 414.933 31.197 414.823 31.163 414.743 cv
31.128 414.653 31.111 414.593 31.111 414.543 cv
31.128 414.483 li
31.18 414.433 li
31.275 414.413 li
31.424 414.403 li
31.534 414.403 li
31.617 414.423 li
31.683 414.443 li
31.739 414.493 li
31.757 414.513 31.786 414.573 31.827 414.673 cv
31.867 414.763 31.907 414.893 31.946 415.043 cv
31.985 415.203 32.02 415.383 32.051 415.583 cv
32.082 415.783 32.098 416.003 32.098 416.233 cv
32.098 416.623 32.047 416.973 31.946 417.273 cv
31.845 417.573 31.696 417.823 31.497 418.023 cv
31.299 418.233 31.05 418.383 30.75 418.493 cv
30.451 418.593 30.102 418.643 29.705 418.643 cv
29.327 418.643 28.988 418.593 28.687 418.483 cv
28.386 418.373 28.13 418.223 27.92 418.023 cv
27.71 417.813 27.549 417.573 27.437 417.283 cv
27.325 417.003 27.269 416.683 27.269 416.323 cv
27.269 415.943 27.324 415.623 27.435 415.353 cv
27.545 415.093 27.694 414.873 27.881 414.693 cv
28.069 414.523 28.288 414.403 28.541 414.323 cv
28.793 414.243 29.062 414.203 29.349 414.203 cv
cp
29.256 415.093 mo
28.833 415.083 28.501 415.183 28.26 415.403 cv
28.019 415.623 27.898 415.943 27.898 416.373 cv
27.898 416.593 27.936 416.783 28.011 416.953 cv
28.086 417.113 28.185 417.253 28.309 417.363 cv
28.432 417.473 28.576 417.563 28.741 417.623 cv
28.905 417.683 29.077 417.723 29.256 417.723 cv
cp
31.214 409.603 mo
31.358 409.603 li
31.46 409.623 li
31.534 409.653 li
31.626 409.743 li
31.667 409.783 31.718 409.863 31.778 409.973 cv
31.838 410.073 31.892 410.193 31.939 410.333 cv
31.986 410.463 32.024 410.613 32.054 410.773 cv
32.083 410.923 32.098 411.093 32.098 411.253 cv
32.098 411.603 32.046 411.913 31.941 412.183 cv
31.837 412.453 31.685 412.673 31.485 412.853 cv
31.285 413.033 31.039 413.173 30.748 413.273 cv
30.456 413.363 30.12 413.413 29.739 413.413 cv
29.306 413.413 28.934 413.353 28.624 413.233 cv
28.313 413.123 28.058 412.963 27.859 412.763 cv
27.661 412.553 27.514 412.323 27.417 412.043 cv
27.321 411.773 27.273 411.473 27.273 411.153 cv
27.273 411.003 27.286 410.853 27.313 410.703 cv
27.339 410.563 27.373 410.433 27.415 410.303 cv
27.457 410.183 27.506 410.073 27.562 409.983 cv
27.617 409.883 27.664 409.823 27.703 409.773 cv
27.796 409.683 li
27.876 409.643 li
27.981 409.623 li
28.128 409.623 li
28.255 409.623 28.344 409.633 28.394 409.663 cv
28.47 409.783 li
28.389 409.973 li
28.335 410.043 28.276 410.133 28.211 410.233 cv
28.146 410.343 28.086 410.473 28.033 410.623 cv
27.979 410.783 27.952 410.963 27.952 411.163 cv
27.952 411.593 28.101 411.923 28.399 412.143 cv
28.697 412.373 29.129 412.483 29.695 412.483 cv
29.979 412.483 30.227 412.463 30.44 412.403 cv
30.653 412.343 30.831 412.253 30.975 412.143 cv
31.118 412.023 31.224 411.883 31.294 411.713 cv
31.364 411.553 31.399 411.363 31.399 411.143 cv
31.399 410.943 31.37 410.763 31.312 410.603 cv
31.253 410.453 31.189 410.323 31.119 410.203 cv
31.049 410.093 30.985 410.003 30.928 409.923 cv
30.843 409.743 li
30.862 409.683 li
30.928 409.633 li
31.045 409.603 li
31.214 409.603 li
cp
29.637 404.073 mo
29.995 404.073 30.324 404.133 30.626 404.233 cv
30.927 404.333 31.186 404.493 31.404 404.693 cv
31.622 404.903 31.793 405.163 31.915 405.473 cv
32.037 405.783 32.098 406.143 32.098 406.553 cv
32.098 406.943 32.044 407.293 31.937 407.583 cv
31.829 407.883 31.673 408.133 31.468 408.323 cv
31.263 408.523 31.014 408.673 30.721 408.763 cv
30.428 408.863 30.096 408.913 29.725 408.913 cv
29.367 408.913 29.037 408.863 28.736 408.763 cv
28.435 408.653 28.175 408.503 27.957 408.293 cv
27.739 408.093 27.57 407.833 27.449 407.523 cv
27.329 407.213 27.269 406.853 27.269 406.443 cv
27.269 406.053 27.322 405.703 27.43 405.403 cv
27.537 405.113 27.693 404.863 27.898 404.673 cv
28.104 404.473 28.353 404.323 28.646 404.223 cv
28.938 404.123 29.269 404.073 29.637 404.073 cv
cp
29.69 404.993 mo
29.453 404.993 29.228 405.023 29.017 405.073 cv
28.805 405.113 28.619 405.203 28.46 405.313 cv
28.3 405.423 28.174 405.573 28.082 405.763 cv
27.989 405.953 27.942 406.193 27.942 406.483 cv
27.942 406.743 27.985 406.973 28.069 407.163 cv
28.154 407.353 28.274 407.503 28.428 407.633 cv
28.583 407.753 28.766 407.843 28.978 407.903 cv
29.189 407.963 29.42 407.993 29.671 407.993 cv
29.912 407.993 30.138 407.973 30.35 407.923 cv
30.561 407.873 30.746 407.793 30.904 407.673 cv
31.062 407.563 31.187 407.413 31.28 407.223 cv
31.373 407.023 31.419 406.793 31.419 406.503 cv
31.419 406.243 31.377 406.013 31.292 405.823 cv
31.207 405.633 31.089 405.473 30.936 405.353 cv
30.783 405.233 30.6 405.143 30.389 405.083 cv
30.177 405.023 29.944 404.993 29.69 404.993 cv
cp
31.883 398.413 mo
31.949 398.433 li
31.995 398.503 li
32.024 398.633 li
32.034 398.853 li
32.034 398.943 32.031 399.013 32.024 399.073 cv
31.995 399.203 li
31.949 399.273 li
31.883 399.293 li
29.31 399.293 li
29.059 399.293 28.857 399.323 28.704 399.363 cv
28.551 399.403 28.419 399.463 28.309 399.553 cv
28.198 399.633 28.113 399.743 28.055 399.873 cv
27.996 400.003 27.967 400.153 27.967 400.323 cv
27.967 400.543 28.038 400.763 28.182 400.993 cv
28.325 401.213 28.535 401.443 28.812 401.683 cv
31.883 401.683 li
31.949 401.713 li
31.995 401.783 li
32.024 401.913 li
32.031 401.973 32.034 402.043 32.034 402.133 cv
32.024 402.343 li
31.995 402.483 li
31.949 402.553 li
31.883 402.573 li
27.488 402.573 li
27.422 402.553 li
27.374 402.493 li
27.344 402.373 li
27.337 402.173 li
27.344 401.973 li
27.374 401.853 li
27.422 401.793 li
27.488 401.773 li
28.069 401.773 li
27.793 401.503 27.59 401.233 27.461 400.963 cv
27.333 400.693 27.269 400.413 27.269 400.143 cv
27.269 399.813 27.318 399.543 27.417 399.323 cv
27.517 399.103 27.649 398.923 27.815 398.793 cv
27.981 398.653 28.176 398.563 28.399 398.503 cv
28.622 398.443 28.89 398.413 29.202 398.413 cv
cp
31.883 392.433 mo
31.951 392.453 li
31.998 392.513 li
32.024 392.633 li
32.034 392.823 li
32.024 393.003 li
31.998 393.133 li
31.951 393.203 li
31.883 393.223 li
31.302 393.223 li
31.552 393.473 31.748 393.743 31.888 394.013 cv
32.028 394.283 32.098 394.583 32.098 394.913 cv
32.098 395.263 32.035 395.573 31.91 395.823 cv
31.784 396.073 31.615 396.273 31.402 396.433 cv
31.189 396.583 30.938 396.703 30.65 396.773 cv
30.362 396.843 30.058 396.883 29.739 396.883 cv
29.362 396.883 29.021 396.833 28.716 396.743 cv
28.412 396.653 28.152 396.523 27.938 396.343 cv
27.723 396.173 27.557 395.953 27.442 395.693 cv
27.326 395.433 27.269 395.133 27.269 394.793 cv
27.269 394.513 27.325 394.253 27.437 394.023 cv
27.549 393.783 27.715 393.553 27.933 393.323 cv
25.379 393.323 li
25.313 393.303 li
25.264 393.233 li
25.235 393.093 li
25.223 392.883 li
25.223 392.793 25.227 392.723 25.235 392.663 cv
25.264 392.533 li
25.313 392.453 li
25.379 392.433 li
cp
28.792 393.323 mo
28.522 393.563 28.316 393.793 28.174 394.023 cv
28.033 394.243 27.962 394.473 27.962 394.723 cv
27.962 394.943 28.011 395.133 28.108 395.293 cv
28.206 395.453 28.335 395.583 28.494 395.683 cv
28.654 395.773 28.834 395.853 29.036 395.893 cv
29.238 395.943 29.443 395.963 29.651 395.963 cv
29.873 395.963 30.089 395.943 30.301 395.903 cv
30.512 395.863 30.7 395.803 30.865 395.713 cv
31.029 395.613 31.161 395.493 31.26 395.333 cv
31.36 395.183 31.409 394.993 31.409 394.753 cv
31.409 394.643 31.395 394.523 31.365 394.413 cv
31.336 394.303 31.287 394.193 31.219 394.083 cv
31.15 393.963 31.062 393.843 30.953 393.723 cv
30.844 393.593 30.709 393.463 30.55 393.323 cv
cp
31.883 387.433 mo
31.949 387.463 li
31.995 387.533 li
32.024 387.663 li
32.031 387.723 32.034 387.793 32.034 387.883 cv
32.024 388.093 li
31.995 388.233 li
31.949 388.303 li
31.883 388.323 li
27.488 388.323 li
27.425 388.303 li
27.376 388.233 li
27.347 388.093 li
27.337 387.883 li
27.337 387.793 27.34 387.723 27.347 387.663 cv
27.376 387.533 li
27.425 387.463 li
27.488 387.433 li
cp
26.004 387.333 mo
26.193 387.333 26.321 387.373 26.39 387.453 cv
26.458 387.533 26.492 387.673 26.492 387.893 cv
26.492 388.093 26.459 388.243 26.392 388.313 cv
26.325 388.393 26.199 388.433 26.014 388.433 cv
25.825 388.433 25.696 388.393 25.628 388.313 cv
25.56 388.233 25.525 388.093 25.525 387.873 cv
25.525 387.673 25.559 387.523 25.625 387.453 cv
25.692 387.373 25.818 387.333 26.004 387.333 cv
cp
31.561 383.563 mo
31.655 383.563 31.73 383.563 31.785 383.583 cv
31.907 383.643 li
31.98 383.773 li
32.037 383.973 li
32.073 384.203 li
32.088 384.453 li
32.088 384.703 32.058 384.913 31.998 385.093 cv
31.937 385.273 31.846 385.423 31.724 385.533 cv
31.602 385.653 31.447 385.733 31.26 385.783 cv
31.073 385.833 30.853 385.863 30.599 385.863 cv
28.03 385.863 li
28.03 386.543 li
27.952 386.673 li
27.9 386.703 27.815 386.713 27.698 386.713 cv
27.542 386.703 li
27.437 386.673 li
27.378 386.613 li
27.361 386.533 li
27.361 385.863 li
26.316 385.863 li
26.253 385.843 li
26.202 385.773 li
26.17 385.643 li
26.16 385.423 li
26.17 385.203 li
26.202 385.073 li
26.253 385.003 li
26.316 384.973 li
27.361 384.973 li
27.361 383.733 li
27.378 383.663 li
27.437 383.603 li
27.542 383.573 li
27.698 383.563 li
27.815 383.563 27.9 383.573 27.952 383.603 cv
28.03 383.733 li
28.03 384.973 li
30.481 384.973 li
30.784 384.973 31.013 384.933 31.168 384.833 cv
31.322 384.733 31.399 384.553 31.399 384.303 cv
31.377 384.083 li
31.331 383.913 li
31.285 383.783 li
31.263 383.683 li
31.275 383.633 li
31.321 383.593 li
31.414 383.573 li
31.561 383.563 li
cp
29.495 378.203 mo
29.622 378.203 29.712 378.233 29.766 378.303 cv
29.847 378.543 li
29.847 381.723 li
30.091 381.723 30.311 381.703 30.506 381.643 cv
30.701 381.593 30.869 381.503 31.009 381.373 cv
31.149 381.253 31.256 381.083 31.331 380.883 cv
31.406 380.683 31.443 380.433 31.443 380.143 cv
31.443 379.913 31.426 379.713 31.392 379.533 cv
31.358 379.353 31.32 379.193 31.277 379.063 cv
31.235 378.933 31.197 378.823 31.163 378.743 cv
31.128 378.653 31.111 378.593 31.111 378.543 cv
31.128 378.483 li
31.18 378.433 li
31.275 378.413 li
31.424 378.403 li
31.534 378.403 li
31.617 378.423 li
31.683 378.443 li
31.739 378.493 li
31.757 378.513 31.786 378.573 31.827 378.673 cv
31.867 378.763 31.907 378.893 31.946 379.043 cv
31.985 379.203 32.02 379.383 32.051 379.583 cv
32.082 379.783 32.098 380.003 32.098 380.233 cv
32.098 380.623 32.047 380.973 31.946 381.273 cv
31.845 381.573 31.696 381.823 31.497 382.023 cv
31.299 382.233 31.05 382.383 30.75 382.493 cv
30.451 382.593 30.102 382.643 29.705 382.643 cv
29.327 382.643 28.988 382.593 28.687 382.483 cv
28.386 382.373 28.13 382.223 27.92 382.023 cv
27.71 381.813 27.549 381.573 27.437 381.283 cv
27.325 381.003 27.269 380.683 27.269 380.323 cv
27.269 379.943 27.324 379.623 27.435 379.353 cv
27.545 379.093 27.694 378.873 27.881 378.693 cv
28.069 378.523 28.288 378.403 28.541 378.323 cv
28.793 378.243 29.062 378.203 29.349 378.203 cv
cp
29.256 379.093 mo
28.833 379.083 28.501 379.183 28.26 379.403 cv
28.019 379.623 27.898 379.943 27.898 380.373 cv
27.898 380.593 27.936 380.783 28.011 380.953 cv
28.086 381.113 28.185 381.253 28.309 381.363 cv
28.432 381.473 28.576 381.563 28.741 381.623 cv
28.905 381.683 29.077 381.723 29.256 381.723 cv
cp
27.776 374.243 mo
27.957 374.253 li
28.072 374.273 li
28.135 374.313 li
28.157 374.383 li
28.135 374.483 li
28.091 374.623 li
28.05 374.803 li
28.03 375.013 li
28.079 375.273 li
28.24 375.543 li
28.315 375.643 28.414 375.743 28.538 375.843 cv
28.662 375.943 28.813 376.063 28.992 376.183 cv
31.883 376.183 li
31.949 376.213 li
31.995 376.283 li
32.024 376.413 li
32.031 376.473 32.034 376.543 32.034 376.633 cv
32.024 376.843 li
31.995 376.983 li
31.949 377.053 li
31.883 377.073 li
27.488 377.073 li
27.422 377.053 li
27.374 376.993 li
27.344 376.873 li
27.337 376.673 li
27.344 376.473 li
27.374 376.353 li
27.422 376.293 li
27.488 376.273 li
28.128 376.273 li
27.952 376.143 27.809 376.013 27.698 375.903 cv
27.588 375.783 27.501 375.673 27.437 375.573 cv
27.374 375.463 27.33 375.363 27.305 375.263 cv
27.281 375.163 27.269 375.053 27.269 374.953 cv
27.276 374.793 li
27.303 374.603 li
27.347 374.433 li
27.396 374.323 li
27.442 374.283 li
27.498 374.263 li
27.598 374.253 li
27.776 374.243 li
cp
31.888 369.683 mo
31.976 369.723 li
32.02 369.843 li
32.029 369.893 32.034 369.963 32.034 370.063 cv
32.02 370.283 li
31.976 370.403 li
31.888 370.443 li
31.448 370.443 li
31.653 370.653 31.813 370.893 31.927 371.153 cv
32.041 371.413 32.098 371.683 32.098 371.973 cv
32.098 372.233 32.068 372.463 32.007 372.663 cv
31.947 372.873 31.86 373.043 31.746 373.193 cv
31.632 373.333 31.492 373.453 31.326 373.533 cv
31.16 373.613 30.971 373.653 30.76 373.653 cv
30.512 373.653 30.298 373.593 30.115 373.483 cv
29.933 373.373 29.782 373.213 29.661 373.003 cv
29.541 372.803 29.45 372.543 29.39 372.243 cv
29.33 371.943 29.3 371.603 29.3 371.233 cv
29.3 370.563 li
28.958 370.563 li
28.789 370.563 28.639 370.583 28.509 370.623 cv
28.379 370.663 28.27 370.723 28.184 370.813 cv
28.098 370.903 28.033 371.013 27.989 371.153 cv
27.945 371.293 27.923 371.463 27.923 371.673 cv
27.923 371.883 27.946 372.083 27.994 372.253 cv
28.041 372.433 28.093 372.583 28.15 372.713 cv
28.207 372.843 28.259 372.953 28.306 373.043 cv
28.353 373.133 28.377 373.193 28.377 373.233 cv
28.357 373.313 li
28.299 373.373 li
28.199 373.403 li
28.064 373.413 li
27.872 373.393 li
27.737 373.303 li
27.695 373.253 27.645 373.173 27.588 373.053 cv
27.531 372.933 27.479 372.803 27.432 372.643 cv
27.385 372.493 27.346 372.323 27.315 372.143 cv
27.284 371.963 27.269 371.773 27.269 371.593 cv
27.269 371.243 27.304 370.943 27.376 370.703 cv
27.448 370.463 27.553 370.263 27.691 370.113 cv
27.829 369.963 28.001 369.853 28.206 369.783 cv
28.411 369.713 28.65 369.683 28.924 369.683 cv
cp
29.881 370.563 mo
29.881 371.323 li
29.881 371.563 29.9 371.773 29.937 371.953 cv
29.974 372.133 30.03 372.283 30.103 372.403 cv
30.176 372.513 30.264 372.603 30.367 372.663 cv
30.469 372.713 30.587 372.743 30.721 372.743 cv
30.949 372.743 31.13 372.663 31.265 372.503 cv
31.4 372.343 31.468 372.123 31.468 371.833 cv
31.468 371.603 31.414 371.383 31.307 371.193 cv
31.199 370.993 31.035 370.783 30.814 370.563 cv
cp
31.561 365.563 mo
31.655 365.563 31.73 365.563 31.785 365.583 cv
31.907 365.643 li
31.98 365.773 li
32.037 365.973 li
32.073 366.203 li
32.088 366.453 li
32.088 366.703 32.058 366.913 31.998 367.093 cv
31.937 367.273 31.846 367.423 31.724 367.533 cv
31.602 367.653 31.447 367.733 31.26 367.783 cv
31.073 367.833 30.853 367.863 30.599 367.863 cv
28.03 367.863 li
28.03 368.543 li
27.952 368.673 li
27.9 368.703 27.815 368.713 27.698 368.713 cv
27.542 368.703 li
27.437 368.673 li
27.378 368.613 li
27.361 368.533 li
27.361 367.863 li
26.316 367.863 li
26.253 367.843 li
26.202 367.773 li
26.17 367.643 li
26.16 367.423 li
26.17 367.203 li
26.202 367.073 li
26.253 367.003 li
26.316 366.973 li
27.361 366.973 li
27.361 365.733 li
27.378 365.663 li
27.437 365.603 li
27.542 365.573 li
27.698 365.563 li
27.815 365.563 27.9 365.573 27.952 365.603 cv
28.03 365.733 li
28.03 366.973 li
30.481 366.973 li
30.784 366.973 31.013 366.933 31.168 366.833 cv
31.322 366.733 31.399 366.553 31.399 366.303 cv
31.377 366.083 li
31.331 365.913 li
31.285 365.783 li
31.263 365.683 li
31.275 365.633 li
31.321 365.593 li
31.414 365.573 li
31.561 365.563 li
cp
31.883 363.433 mo
31.949 363.463 li
31.995 363.533 li
32.024 363.663 li
32.031 363.723 32.034 363.793 32.034 363.883 cv
32.024 364.093 li
31.995 364.233 li
31.949 364.303 li
31.883 364.323 li
27.488 364.323 li
27.425 364.303 li
27.376 364.233 li
27.347 364.093 li
27.337 363.883 li
27.337 363.793 27.34 363.723 27.347 363.663 cv
27.376 363.533 li
27.425 363.463 li
27.488 363.433 li
cp
26.004 363.333 mo
26.193 363.333 26.321 363.373 26.39 363.453 cv
26.458 363.533 26.492 363.673 26.492 363.893 cv
26.492 364.093 26.459 364.243 26.392 364.313 cv
26.325 364.393 26.199 364.433 26.014 364.433 cv
25.825 364.433 25.696 364.393 25.628 364.313 cv
25.56 364.233 25.525 364.093 25.525 363.873 cv
25.525 363.673 25.559 363.523 25.625 363.453 cv
25.692 363.373 25.818 363.333 26.004 363.333 cv
cp
29.637 356.823 mo
29.995 356.823 30.324 356.883 30.626 356.983 cv
30.927 357.083 31.186 357.243 31.404 357.443 cv
31.622 357.653 31.793 357.913 31.915 358.223 cv
32.037 358.533 32.098 358.893 32.098 359.303 cv
32.098 359.693 32.044 360.043 31.937 360.333 cv
31.829 360.633 31.673 360.883 31.468 361.073 cv
31.263 361.273 31.014 361.423 30.721 361.513 cv
30.428 361.613 30.096 361.663 29.725 361.663 cv
29.367 361.663 29.037 361.613 28.736 361.513 cv
28.435 361.403 28.175 361.253 27.957 361.043 cv
27.739 360.843 27.57 360.583 27.449 360.273 cv
27.329 359.963 27.269 359.603 27.269 359.193 cv
27.269 358.803 27.322 358.453 27.43 358.153 cv
27.537 357.863 27.693 357.613 27.898 357.423 cv
28.104 357.223 28.353 357.073 28.646 356.973 cv
28.938 356.873 29.269 356.823 29.637 356.823 cv
cp
29.69 357.743 mo
29.453 357.743 29.228 357.773 29.017 357.823 cv
28.805 357.863 28.619 357.953 28.46 358.063 cv
28.3 358.173 28.174 358.323 28.082 358.513 cv
27.989 358.703 27.942 358.943 27.942 359.233 cv
27.942 359.493 27.985 359.723 28.069 359.913 cv
28.154 360.103 28.274 360.253 28.428 360.383 cv
28.583 360.503 28.766 360.593 28.978 360.653 cv
29.189 360.713 29.42 360.743 29.671 360.743 cv
29.912 360.743 30.138 360.723 30.35 360.673 cv
30.561 360.623 30.746 360.543 30.904 360.423 cv
31.062 360.313 31.187 360.163 31.28 359.973 cv
31.373 359.773 31.419 359.543 31.419 359.253 cv
31.419 358.993 31.377 358.763 31.292 358.573 cv
31.207 358.383 31.089 358.223 30.936 358.103 cv
30.783 357.983 30.6 357.893 30.389 357.833 cv
30.177 357.773 29.944 357.743 29.69 357.743 cv
cp
31.883 351.913 mo
31.949 351.933 li
31.995 352.003 li
32.024 352.133 li
32.034 352.353 li
32.034 352.443 32.031 352.513 32.024 352.573 cv
31.995 352.703 li
31.949 352.773 li
31.883 352.793 li
29.31 352.793 li
29.059 352.793 28.857 352.823 28.704 352.863 cv
28.551 352.903 28.419 352.963 28.309 353.053 cv
28.198 353.133 28.113 353.243 28.055 353.373 cv
27.996 353.503 27.967 353.653 27.967 353.823 cv
27.967 354.043 28.038 354.263 28.182 354.493 cv
28.325 354.713 28.535 354.943 28.812 355.183 cv
31.883 355.183 li
31.949 355.213 li
31.995 355.283 li
32.024 355.413 li
32.031 355.473 32.034 355.543 32.034 355.633 cv
32.024 355.843 li
31.995 355.983 li
31.949 356.053 li
31.883 356.073 li
27.488 356.073 li
27.422 356.053 li
27.374 355.993 li
27.344 355.873 li
27.337 355.673 li
27.344 355.473 li
27.374 355.353 li
27.422 355.293 li
27.488 355.273 li
28.069 355.273 li
27.793 355.003 27.59 354.733 27.461 354.463 cv
27.333 354.193 27.269 353.913 27.269 353.643 cv
27.269 353.313 27.318 353.043 27.417 352.823 cv
27.517 352.603 27.649 352.423 27.815 352.293 cv
27.981 352.153 28.176 352.063 28.399 352.003 cv
28.622 351.943 28.89 351.913 29.202 351.913 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
111.75 165.113 mo
59.9999 165.113 li
59.9999 123.113 li
111.75 123.113 li
111.75 165.113 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[53.25 0 0 43.5 45.8198 369.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 71 
/H 58 
/M[71 0 0 -58 0 58 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 71 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&ZiC.2"UX/q!XJr2oDn4X!WrN/iWfMg!s.9Z!WrN/iWfGe!<W@l!!*64rY=l<o+qQG'bqDi
"Q]Ua!t"r;i=Q&$rXT#7!p'C_!t"r<rY"9)"VD:W%gN04!;lfu#8J!+(BP<a"mH!g"V2-r&HWIP"8r5e
!!3<8&D.Ts&.Sf]!8mhY"VVX#(BP<_!UTjg!tGk/&a0f-%h.e)!WrrEe.Mcn%-.E+!!*B@ckc]t"n_lm
!!*97ck-9h"7H3j"q]/p!YQ%HW;lr/(#Khs(BG6WnGiRs&'baf%gMP(!=BD+'&aH(&-f08!##/Fd2)fu
$M+5t%Ef=a%gVt3q#CC)b7Xge#K$Q-!!!JM(BG6To`+sui">5d!=o>+!!!>I&ciOHiW.7(!='C](BG6P
pAb3t&H39b&HNCCpAb3t&]bRc&-9$9!<Eqb(\8FC'__S-&&o1]&,-&(&E=Da&c`HI!!!Q"(Y'<&'aXU8
!"6aX!=oA0!!*H?`Y&:`"ht'1!!*3;`"rCgq>^Nt&(_E]&HE@<!!*-4`"E%]h#Q%,!"m*b!>Z%A!<)ru
%)WYX&-r(4!"I0cpC[K=#IOO4!>aH,k8++2qZ$U-_@ZbWqZ$U.lOqh_!"QC:!='A9(WdHo('4@6!<j"N
&HEC?!!*67_@ch\aoLc.!"cs_!>Yt>!!!Gb&`XH(&-`"4!"?[V!>,M"!6tQE'u1Uc%fHA-&,d*Y&HE1:
!!!SL')W@B$FTr`([W"=&cD^E&HE7<!9+XJ&c`BN!<3)i(XElt'`A$H&HE@?!!!YI&c`H\!;-<n!Wj+P
(BkNR!!**2fFd?["V1S5!<EbI&c`L&!7q2P"U,XV(BkNR!!<<6p(>I["V1S5!s9+M&ciOD\Gu[7"Vo8u
oG7ZG!!!*'&&8b\%fcS3!ta6#jUqP)\,ZR6"Vp>>ee\K)!!!*'&&8b\%fcS3!tb;A`tA@`]`@s1!X/`B
^_[.h!!!*'&()!Y&Hr[F!!<<7^_-VYgAp(1!X/`B^_[.h!!!*'&+:+Y&Hr[F!!<<7^_-VYq#J21!X/`B
`Y\Lg"Vh";!s9(L&Hr[F!!<<7eIq3]!"cX?!X/`Bj;6Vg"Vh";!s9(L&HWIC!!36)&ASnY&B=eA!!3<-
'u1Uh'`\49!tX,ujq.b-!!!*'&ASnY&ENoA!!3<-'u1Uh'`\49!tY2>a:SRd!!!*'&A\t[&eMPQ!X/`B
ckl3g"Vh";!s9(L&Hr[F!!<<7h\+o]!"cX?!X/`BmMF=g"Vh";!s9(L&Hr[F!!<<7r=[$]!"cpGq#CI"
"Vnfh"Vh";!s9(`&a^/6%fcS3!t`6\!"duegAh9Y"Vnfh"Vh";!s9))&^M$m%fcS3!t`6\!"f&.]`8*;
"Vo,qp_O)K!!!*'&&8b\%fcS3!ta)tkn3t-\,ZR6"Vp2:g(so-!!!*'&&8b\%fcS3!tb/=b7Xdd\Gu^3
!Wj.Q(BkNR!!**3bn9R["V1S5!<EeJ&c`Kp!8mjl(B>-I!9t0I&HE=>!5B-H&+oq>!5THQ(Dd\^!5B*G
%/g1Q'(?M6%CQ6:']9ed(B=pC!!!PF&HE.9!!!Pu'%.Bm$+9g6%K70^(BG6Ur;Zg(`Y&+\!=oA4!!!>A
&ciOIciE5/!<j4T(B>6K!!*04jUp>]!"f&.!<WnM&c`OC!4Mq.(<mZh(B>'E!!!SI&HE7:!!!Vd''Bl-
%C?*8%I4h`(BG6SqZ$U&_[un["8`&u$2P:W&ciOG])_[-!<EqR(B>0F!!!PX&b?S7&,?2*&B#1]&(gm:
!!*EB`YSXj"o/-!#8$D;ee%on"8Mot#8+rg!>#A,!5&:3(!%0m(DdYW!!!PL&HE76!!!S^'(?M6%'T^4
";^/:iYMS/p&G*p&BGF`&,#u(!YP,=dh2WkYlOb'!='C_(BG6Po`,!r&C(md&HNCCo`,!r&]t^e&-:)W
hZ*Zb(!IHp('a@1!=05'&`=6%&-VS)!=07\&ciRIli=g$!=9Ld(BG6Rq>g9j!<s([&HNCDnGiRo&C_?i
&ciOFW;lr&($$2!(BP?c!Ug!h!tWck!>#b/!!*05o+Kpn!>,j>!!302("=$#'aj7,!=B@e&HNCIqZ--d
!=BCf&ciOK_Z8Wq!s0&M(>9Q,'c%5Zkl:ed$kO!;&ag54%hK'2!!<62&J<_0!Y>qMhZ1Im"9Ac?(DbpD
!uDa`#ODHc!!<B5&J3k2!tc+P"lfRb"Uu(Vi",u'&deg>!1s5k!TaL_"ks%8"5<hJ"762g!:Kmf!T4.9
!8mtX!8de7"2t9#!.Y~>

%%EndBinary
grestore
np
94.91 162.693 mo
102.74 162.693 109.08 156.353 109.08 148.523 cv
109.08 137.183 li
109.08 129.353 102.74 123.013 94.91 123.013 cv
73.651 123.013 li
65.823 123.013 59.477 129.353 59.477 137.183 cv
59.477 148.523 li
59.477 156.353 65.823 162.693 73.651 162.693 cv
94.91 162.693 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [84.281 348.98 84.281 428.35 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
84.281 348.98 84.281 428.35 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
94.91 162.693 mo
102.74 162.693 109.08 156.353 109.08 148.523 cv
109.08 137.183 li
109.08 129.353 102.74 123.013 94.91 123.013 cv
73.651 123.013 li
65.823 123.013 59.477 129.353 59.477 137.183 cv
59.477 148.523 li
59.477 156.353 65.823 162.693 73.651 162.693 cv
94.91 162.693 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd85b000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79663580d43400008f540000542668656164ecde32e000000f640000
0036686865610dad0c0400000f9c00000024686d7478714a293500000fc0
00002fd26c6f636171ec5c7c00003f9400001e4e6d6178702136254d0000
5de4000000206e616d6519aa717b00005e0400000d3e707265706baf02fe
00006b4400002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
20830600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852b89bc5215f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008c3040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000044400610000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
0000000000000000000000000000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac052a00ac0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000003cb006d00000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000035000a10000000000000000000000000000
000000000000047800a1000000000000000001ec00a10000000000000000
000000000000000000000000000000000000000001ec0011000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000060600a1049100a100000000000000000000
0000000000000000000004aa006600000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a1000000000000000000000000034f0049
00000000000000000000000000000000000000000359001c000000000000
000000000000048d009f0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
0000000000000000000000000000076f005a000000000601005a00000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
0000000001d6009900000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
0000000000000000000000000000000005ae005100000000000000000000
000002ae0021000000000000000000000000000000000475002100000000
000000000000000000000000000000000000000000000000000000000475
0021051300210000000006d9002100000000000000000000000000000000
0000000000000000000000000000000006d9002104340094000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002ac004400000000024e
004402e5004802b80047000000000000000002e9006c0163006100000000
00000000000000000456006c02e6006c02e6004502e5006c0000000001f6
006c0230004201e3002302e9006c00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001d6000001ce000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450273004500000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002cb002303ec0062
03ec00510000000000000000000000000000000000000000000000000000
0000040e00ae040e0072040e006700000000000000000000000000000000
000000000000000000000000028d00190381005c03730059000000000000
00000000000000000000000000000000000000000000039f008d039f0065
039f00620000000000000000000000000000000000000000000000000000
000002cb002303ec006203ec005100000000000000000000000000000000
000000000000000000000000040e00ae040e0072040e0067000000000000
0000000000000000000000000000000000000000000001f8002302b0004b
02ad00410000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f8002302b0004b
02ad00410000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f500310252003c
0249002d0000000000000000000000000000000000000000000000000000
000001f500310252003c0249002d00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000306005a0000
000000000000028c008e000000000000000001a6008e0000000000000000
00000000046d008e0375008d000000000000000000000000000000000280
004600000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001a6008e00000000000000000000
0000046d008e0375008d0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a100a100a1011e011e011e
011e011e011e011e011e011e011e011e011e011e011e011e011e011e011e
011e011e01870187018701870187018701870187018701d201d201d201d2
01d201d201d201d201d201d201d201d201d201d201d201d201d201d201d2
01d201d2027f031a031a031a031a031a031a031a031a031a031a031a031a
031a031a031a031a031a031a031a031a031a031a031a031a031a03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec03ec
03ec03ec03ec03ec03ec0452045204520452045204520452045204520452
045204520452045204b804b804b804b804b804b804fa04fa04fa04fa0553
05530553055305530553055305530553055305a005a005a005a005a005a0
05fe05fe05fe062a062a062a062a062a062a062a062a0635063506350635
06350635063506350635063506350635063506ab07170717071707170717
071707650765076507650765076507650765076507650765076507bc07bc
07bc083608360836083608bc08bc08bc08bc08bc08bc08fd08fd08fd08fd
094d094d094d094d094d094d094d094d094d094d094d094d094d094d094d
094d094d094d094d094d094d094d094d094d094d094d094d09fc09fc09fc
09fc09fc09fc09fc09fc09fc09fc09fc09fc09fc09fc0a880a880a880a88
0a880a880b5c0b5c0c3b0c3b0cd20cd20cd20cd20d730d730d730d730d73
0d730d730d730d730d730d730d730d730d730d730d730d730d730d730d73
0d730d730d730d730d730d730d730d730d730d730d730d730d730d730d73
0d730d730d730d730d730d730d730d730d730d730d730d730d730d730d73
0d730d730d730d730d730d730d730d730d730d730df70df70df70e700e70
0e700e700e700e700e700e700e700e9c0e9c0e9c0e9c0e9c0e9c0e9c0e9c
0e9c0e9c0e9c0e9c0e9c0e9c0e9c0f7d100e100e100e100e100e100e100e
109c109c109c109c109c109c109c109c109c109c109c109c113311331133
11ac11ac11ac11ac127212721272127212721272137113711371137113ed
13ed13ed13ed13ed13f913f913f913f913f913f913f913f913f9146f1521
1521152d152d152d152d152d152d152d152d152d15ec167c167c167c167c
167c167c167c167c167c167c167c167c167c167c167c167c167c167c167c
167c167c167c167c167c167c167c167c167c167c167c16f216f2174817ae
181218121812186f18b318b318b318b31933198919d21a3d1a3d1a901b08
1b621bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb
1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb
1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb
1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb1bbb
1bbb1bbb1bbb1bdf1c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c031c031c031c03
1c031c031c031c031c031c031c031c031c031c031c031c481c481c481c48
1c481c481c481c961c961c961c961c961c961c961c961c961c961c961c96
1c961c961c961c961c961c961c961c961c961c961c961c961c961c961c96
1c961c961c961c961c961c961cb91cc21cc21cc21cc21cc21cc21cc21cc2
1cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc2
1cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21cc21d081d08
1d081d081d081d081d081d081d081d081d081d081d081d081d081d081d08
1d081d081d081d081d081d081d081d081d081d081d081d081d081d081d08
1d081d081d081d081d4b1dc21e611e611e611e611e611e611e611e611ebd
1f2b1fc71fc71fc71fc71fc71fc71fc71fc7200a207c2116211621162116
2116211621162116216f2177217f217f217f217f217f217f217f217f21c1
223922d622d622d622d622d622d622d622d6238d242d2521252125212521
2521252125212521252a2533253c253c253c253c253c253c253c253c253c
253c253c253c253c257f25e1266e266e266e266e266e266e266e266e266e
266e266e266e266e26b0271727af27af27af27af27af27af27af27af27b8
27c127ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca
27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca27ca282d282d282d
286d286d286d2875287528752875287d2885288528852885288529042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
290429042904290429042904290429042904290429042904290429042904
2904290429042904290429042904290429042904293229322932293229a3
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a132a132a132a132a132a132a132a132a132a132a132a132a132a13
2a132a130000000100000f26009300050078000300020010002f00650000
11902410000200010000002d022200000003000000000064000000000003
00000001000e00640000000300000002000e030400000003000000030024
03120000000300000004000e006400000003000000050018033600000003
00000006000e006400000003000000070076034e0000000300000008002a
000e0000000300000009002003c4000000030000000a02a0006400000003
0000000b005603e4000000030000000c002a043a000000030000000d0298
0464000000030000000e006c06fc00010000000000000032076800010000
000000010007079a0001000000000002000708ea00010000000000030012
08f100010000000000040007079a0001000000000005000c090300010000
000000060007079a0001000000000007003b090f00010000000000080015
076f00010000000000090010094a000100000000000a0150079a00010000
0000000b002b095a000100000000000c00150985000100000000000d014c
099a000100000000000e00360ae600030001040900000064000000030001
04090001000e00640003000104090002000e030400030001040900030024
03120003000104090004000e006400030001040900050018033600030001
04090006000e006400030001040900070076034e0003000104090008002a
000e0003000104090009002003c4000300010409000a02a0006400030001
0409000b005603e4000300010409000c002a043a000300010409000d0298
0464000300010409000e006c06fc00a9002000320030003100320020004d
006900630072006f0073006f0066007400200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e00430061006c
0069006200720069002000690073002000610020006d006f006400650072
006e002000730061006e0073002000730065007200690066002000660061
006d0069006c00790020007700690074006800200073007500620074006c
006500200072006f0075006e00640069006e006700730020006f006e0020
007300740065006d007300200061006e006400200063006f0072006e0065
00720073002e002000490074002000660065006100740075007200650073
0020007200650061006c0020006900740061006c006900630073002c0020
0073006d0061006c006c00200063006100700073002c00200061006e0064
0020006d0075006c007400690070006c00650020006e0075006d00650072
0061006c00200073006500740073002e0020004900740073002000700072
006f0070006f007200740069006f006e007300200061006c006c006f0077
0020006800690067006800200069006d007000610063007400200069006e
002000740069006700680074006c007900200073006500740020006c0069
006e006500730020006f0066002000620069006700200061006e00640020
0073006d0061006c006c0020007400650078007400200061006c0069006b
0065002e002000430061006c0069006200720069002700730020006d0061
006e0079002000630075007200760065007300200061006e006400200074
006800650020006e00650077002000720061007300740065007200690073
006500720020007400650061006d00200075007000200069006e00200062
00690067006700650072002000730069007a0065007300200074006f0020
00720065007600650061006c002000610020007700610072006d00200061
006e006400200073006f0066007400200063006800610072006100630074
00650072002e0052006500670075006c00610072004d006900630072006f
0073006f00660074003a002000430061006c006900620072006900560065
007200730069006f006e00200035002e0037003200430061006c00690062
0072006900200069007300200061002000740072006100640065006d0061
0072006b0020006f006600200074006800650020004d006900630072006f
0073006f00660074002000670072006f007500700020006f006600200063
006f006d00700061006e006900650073002e004c00750063002800610073
0029002000640065002000470072006f006f00740068007400740070003a
002f002f007700770077002e006d006900630072006f0073006f00660074
002e0063006f006d002f007400790070006f006700720061007000680079
002f006300740066006f006e007400730068007400740070003a002f002f
0066006f006e007400660061006200720069006b002e0063006f006d0059
006f00750020006d00610079002000750073006500200074006800690073
00200066006f006e00740020006100730020007000650072006d00690074
0074006500640020006200790020007400680065002000450055004c0041
00200066006f00720020007400680065002000700072006f006400750063
007400200069006e00200077006800690063006800200074006800690073
00200066006f006e007400200069007300200069006e0063006c00750064
0065006400200074006f00200064006900730070006c0061007900200061
006e00640020007000720069006e007400200063006f006e00740065006e
0074002e00200059006f00750020006d006100790020006f006e006c0079
002000280069002900200065006d00620065006400200074006800690073
00200066006f006e007400200069006e00200063006f006e00740065006e
00740020006100730020007000650072006d006900740074006500640020
00620079002000740068006500200065006d00620065006400640069006e
00670020007200650073007400720069006300740069006f006e00730020
0069006e0063006c007500640065006400200069006e0020007400680069
007300200066006f006e0074003b00200061006e00640020002800690069
0029002000740065006d0070006f0072006100720069006c007900200064
006f0077006e006c006f006100640020007400680069007300200066006f
006e007400200074006f002000610020007000720069006e007400650072
0020006f00720020006f00740068006500720020006f0075007400700075
0074002000640065007600690063006500200074006f002000680065006c
00700020007000720069006e007400200063006f006e00740065006e0074
002e0068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f0066006f006e00740073002f00640065
006600610075006c0074002e0061007300700078a92032303132204d6963
726f736f667420436f72706f726174696f6e2e20416c6c20526967687473
2052657365727665642e43616c696272692069732061206d6f6465726e20
73616e732073657269662066616d696c79207769746820737562746c6520
726f756e64696e6773206f6e207374656d7320616e6420636f726e657273
2e204974206665617475726573207265616c206974616c6963732c20736d
616c6c20636170732c20616e64206d756c7469706c65206e756d6572616c
20736574732e204974732070726f706f7274696f6e7320616c6c6f772068
69676820696d7061637420696e2074696768746c7920736574206c696e65
73206f662062696720616e6420736d616c6c207465787420616c696b652e
2043616c696272692773206d616e792063757276657320616e6420746865
206e65772072617374657269736572207465616d20757020696e20626967
6765722073697a657320746f2072657665616c2061207761726d20616e64
20736f6674206368617261637465722e526567756c61724d6963726f736f
66743a2043616c6962726956657273696f6e20352e373243616c69627269
20697320612074726164656d61726b206f6620746865204d6963726f736f
66742067726f7570206f6620636f6d70616e6965732e4c75632861732920
64652047726f6f74687474703a2f2f7777772e6d6963726f736f66742e63
6f6d2f7479706f6772617068792f6374666f6e7473687474703a2f2f666f
6e7466616272696b2e636f6d596f75206d61792075736520746869732066
6f6e74206173207065726d6974746564206279207468652045554c412066
6f72207468652070726f6475637420696e20776869636820746869732066
6f6e7420697320696e636c7564656420746f20646973706c617920616e64
207072696e7420636f6e74656e742e20596f75206d6179206f6e6c792028
692920656d626564207468697320666f6e7420696e20636f6e74656e7420
6173207065726d69747465642062792074686520656d62656464696e6720
7265737472696374696f6e7320696e636c7564656420696e207468697320
666f6e743b20616e6420286969292074656d706f726172696c7920646f77
6e6c6f6164207468697320666f6e7420746f2061207072696e746572206f
72206f74686572206f75747075742064657669636520746f2068656c7020
7072696e7420636f6e74656e742e687474703a2f2f7777772e6d6963726f
736f66742e636f6d2f7479706f6772617068792f666f6e74732f64656661
756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[15237 6307 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+Calibri AddT42Char 
3 2600 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>PBAAAA+Calibri AddT42Char 
3 2966 1006 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>PBAAAA+Calibri AddT42Char 
3 3286 1007 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>PBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
/one 1005 def
/two 1006 def
/three 1007 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
dup 49 /one put
dup 50 /two put
dup 51 /three put
pop
end
%ADOEndSubsetFont
/AWLUJA+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one /two /three 204{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
68.15 146.663 mo
(2 2 3 1)
[6.00052 2.98218 6.00052 2.24865 6.75809 2.24865 0 ]xsh
182.25 96.113 mo
132 96.113 li
132 83.3284 li
133.803 89.3138 139.36 93.6781 145.93 93.6785 cv
165.78 93.6785 li
173.808 93.678 180.325 87.1607 180.325 79.133 cv
180.325 66.313 li
180.325 62.0826 178.515 58.2719 175.628 55.6131 cv
182.25 55.6131 li
182.25 96.113 li
132 62.1177 mo
132 52.613 li
141.036 52.613 li
136.712 54.1596 133.332 57.6961 132 62.1177 cv
171 52.7342 mo
170.892 52.6924 170.783 52.6522 170.674 52.613 cv
171 52.613 li
171 52.7342 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 117.82 438.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`;fuD%MBK9(BY9_$3K8g"TSN)$4RO+&H`IO#6Efa!s8l?&*"9)%Lr^Emf9Wn!sB/O(#9Z.
'bq)Wr;c0a!s/lC&)@g!%hAs/!!<92&eNt6rXo8D&.#'3!W`iIkSNb*!YuLXl2Uhn&(hHq&.]$2!!*K>
o+L0u!YGtKVZ6`((&Sm$(BP?d!q$$h"qT2q!Y>kCnc8Ug!<s+b&crXU!Or.$!!*QEd2)fu#4MTn$4k`#
q[ii>"RlBl$4tSt!>#C[!8dbW!><Zo!>Pq3!!!Jo&`aN)%gMS)!"R9e!>#It!6G3A&f/_.!>Ph2!!*N?
bn0se"S;Zp%M?qu!>#D4!42_,%2R>-q\K8J!qlTp#nY8l!=o5)!!*B<g_0)h!>#:;!!*9=jqm(p!>PY1
!!*35aUnL`pAb3s&FgCd&c`KK!!!c2(X3`r%JTo'&'#7^$2af%!!!SN&c`6T!:p0k$5UYu!>P\4!!*<9
f+INb!=o5-!!*<:`tACa!SIJ0!!**8`>8Ldq>^L+lk.q`!"A](!"d*^!"JAsa8c5J(<%'j('4=5!!`K8
`=W(]qZ$X%&]bUa&c`OC!4`(0'?_3g(BG9Wqu?^,`"<"]"oJ?#&(VB^&ciRJ\,ZO2(?$(i(B>'G!!**3
_[ukWr;Zj!&aU._&c`BN!!*?@pD;'j"r74?!!!06_[uk[r;Zg$!"m*]!"m'JpAb1#_A<@j!Wi?%#LX4S
&Hr[G!<<*)_@cn]!<LmSi;`if_A<@j"U+l+$Kr)V&Hr[I!rr<._@cn]!sA#mb5_MT_A<@k#RCD1%K6sY
&Hr^L"TSN4`"E1c&eP9N\c;^EcPQ3i"Vq@L!!!PH&Hr^L"TSN5g(NW_!YGS>\c;^FjVQbi"Vq@L!!!PH
&Hr^L"TSN6n.O1_!YGS>\c;^Fq\R<i"Vq@L!!!PH&HE@F"U+l+&Af%]&Hr?[!:g*i'uCaj('k0G!"[Zn
lk'C4"U+l+&Af%]&Hr?q!8IPS'uCaj('k0G!"\H/ee&&s"U+l+&Af%]&Hr@2!6,!='uCah('k0G!<<YI
&Hr^L"TSN6aV+F_!YGS>\c;^Fe/.Qi"Vq@L!!!PH&Hr^L"TSN6h\+u_!YGS>\c;^Fl5/+i"Vq@L!!!PH
&Hr^L"TSN6ob,O_!YGS>\c;aG(W.$m('k0G!"[']r=K)B"U+r-!"d![!YGS>`rP`3!#<?e"Vq@L!!!P[
&ag57&-W4;!"d![!YGS>h#Q:3!#<?e"Vq@L!!!Pq&_I[!&-W4;!"d![!YGS>o)Qi3!#<?e"Vq@L!!!PH
&Hr^L"TSN6`tJ:_!YGS>\c;^FdMMEi"Vq@L!!!PH&Hr^L"TSN6h%Ji_!YGS>\c;^FkSMti"Vq@L!!!PH
&Hr^L"TSN6o+KC_!YGS>\c;^FrYNNi"Vq@L!!!PJ&I/m[&-W4;!"d![!YGS>bQ.)3!#<?e"Vq@L!!!P`
&a9l2&-W4;!"d![!YGS>iW.X3!#<?e"Vq@L!!!Q!&^q<q&-W4;!"d![!YGS>p]/23!#39d!#>\C#QOi8
_@Zq_"U+l+&'P[\&crXK"hF[6&_@ic(BkNY#64`4_@Zq^"U+l+%H8#Z&crUJ"hF[6%db(`(BkNW"TSN0
_@Zq^!s8N'$MY7W&crUH"1nO6!"-RZ"Vq.@!!!8G&c*(C&-2e3!!g@R!YGG6d/`G3!=0IY(B>6L!!*67
i">#^!"f)/!<j(Q&c`O*!7UuL!>`Qh!"f&.!"ei9c4L$bqu?^/_\)qXqZ+;0!#!<grYGYO#64c'!!!JH
&HNCGqu?^,b7aXa!>#FD!!*?@f,*ll!>Y_6!!*67`=W(]qZ$X#&`OGa&c`NO!!!c$(YKT)%Jg&)&&f+\
$2OW%&GQm`&c`6H!!3-+(<73l('473!<j%W&cN@B&GZ;,"VJcf!"mBSkl:\ta;4jm$MXT$&)\&a&HNFJ
p](:)a:\Lc#N5[3!!*6<aVOpipAb3r&,-[b&HE:7!!*05aV"R`p&M`*!=0F`(BG3Np&G*s&'GOb&+oo'
"VB/rp_!Q;Y5eS4(>p"s(BG6SoDemu&Btdf%g2G(!=9A('&sT*&-K'8!=]h=(YKT*'a=..!=9=`&HNCE
nc/Xr!"mNi!>#@B!;6Bn#8Y]'!>GV)!!*67e.MZl!=o5#!!*68d1QHj!R(Q$!!39;(=a3%'b9U2!WilD
lk/Lp!=oP)!!334&_.Kp&.7=q`rH/H'c,I=!Yl=Nl2Ukh%hRD+!Y5_Al2Ukh&/!S.!Y>hCo`2/q!sfJT
(>fo1'bq2^rW)0_!sK)F&Dn'%%hB!Ljo>Je%2'95')`FF&.f0NT)\ro#RV%1'(ce<$46sp!!3</$0)Hr
#6t@h!!3</$2Y4s%KZk?".]FD!.k4I!.k3&!:'W8~>

%%EndBinary
grestore
np
165.78 92.9277 mo
145.93 92.9277 li
142.123 92.9276 138.676 91.3829 136.178 88.8851 cv
133.68 86.3868 132.136 82.9404 132.135 79.133 cv
132.135 66.313 li
132.136 62.5057 133.68 59.0593 136.178 56.561 cv
138.676 54.0632 142.123 52.5185 145.93 52.5184 cv
165.78 52.5184 li
167.627 52.5185 169.39 52.8823 171 53.5419 cv
171 55.6131 li
174.482 55.6131 li
174.848 55.9111 175.199 56.2276 175.532 56.561 cv
178.03 59.0593 179.574 62.5057 179.575 66.313 cv
179.575 79.133 li
179.574 82.9404 178.03 86.3868 175.532 88.8851 cv
173.034 91.3829 169.587 92.9276 165.78 92.9277 cv
165.78 92.9277 li
level3{
gsave
clp
[1 0 0 -1 0 551.363 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [155.86 458.06 155.86 499.22 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$3pe9$3pe9$3pe9$3pe9$3pe9
$3pe9#mLS6#mLS6#mLS6#mLS6#R(A3#R(A3#R(A3#6b82#6b82#6b82"p>&/"p>&/"Tni,"Tni,"Tni,
"Tni,"Tni,"9JW)"9JW)"9JW)!s/N(!s/N(!W`<%!W`<%!W`<%!W`<%!<<*"!<<*"!<<*"zzzzzzzzzz
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$47+I$47+I$47+I$47+I$47+I$47+I$47+I$4."F#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE
#mgnE#mgkC#RC\A#RC\A#RC\A#RCY?#6tJ=#6tJ=#6tG;"pP89"pP89"pP57"U,&5"U,#3"9\i1"9\i1
"9\i1"9\i1"9\i0!s8W-!s8W-!s8W,!WiE)!WiE(!<E3%!<E3%!<E3%!<E3$zzzzzzzzzzzzzzzzzzz!
!!!!~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP57"U,&5"U,&5"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8T+!WiE)!WiE)
!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%!<E3$zzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89
"pP89"pP57"U,&5"U,&5"U,&5"U,#3"9\i1"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-!s8T+!WiE)!WiE)
!WiE)!WiE)!WiE(!<E3%!<E3%!<E3%!<E3%!<E3$zzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
155.86 458.06 155.86 499.22 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
165.78 93.303 mo
165.78 92.9277 li
169.587 92.9276 173.034 91.3829 175.532 88.8851 cv
178.03 86.3868 179.574 82.9404 179.575 79.133 cv
179.575 66.313 li
179.574 62.5057 178.03 59.0593 175.532 56.561 cv
173.034 54.0632 169.587 52.5187 165.78 52.5184 cv
145.93 52.5184 li
142.123 52.5185 138.676 54.0632 136.178 56.561 cv
133.68 59.0593 132.136 62.5057 132.135 66.313 cv
132.135 79.133 li
132.136 82.9404 133.68 86.3868 136.178 88.8851 cv
138.676 91.3829 142.123 92.9276 145.93 92.9277 cv
165.78 92.9277 li
165.78 93.303 li
165.78 93.6785 li
145.93 93.6785 li
137.902 93.678 131.385 87.1608 131.385 79.133 cv
131.385 66.313 li
131.385 58.2854 137.902 51.7681 145.93 51.7677 cv
165.78 51.7677 li
173.808 51.7681 180.325 58.2854 180.325 66.313 cv
180.325 79.133 li
180.325 87.1607 173.808 93.678 165.78 93.6785 cv
165.78 93.303 li
1 /0 /CSD get_res sepcs
.749 sep
f
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
142.25 76.443 mo
(2 )
[6.00002 0 ]xsh
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 14636 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/hyphen 882 def
end
PBAAAA+Calibri /Encoding get
dup 45 /hyphen put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
204{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
151.05 76.443 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
154.75 76.443 mo
( )sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
157.45 76.443 mo
(3 )
[6.02502 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
166.28 76.443 mo
(-)sh
276 113.363 mo
225.75 113.363 li
225.75 69.863 li
276 69.863 li
276 113.363 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 211.57 421.68 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`W-,B#S@[aj;.q6&ePBMj8]>`!!Nc?&*+<)%h/pNi;`r`%1Ws1&d&[T%0c/"Z2at1&f2>?
(BYEg&dS=7li7+i%1s0.&H`RU%0bnp!s9#G&`=9*&eYcg%L&X.!X05PkSNb*!YlCQlMptg%M.2(!Y5eD
lMptg%hS=Fjq7_,%g/^0!=fkB(YKT*'bKa4!=B@e&HNCNnGrLf!=BCf&ciOP[fH%#!<Ek\(BG3On,NFu
ee.ck!=o5#!!!PV&ciLDcN)i&!<a._(BG6Ro)Jdm&*jhg&HNCDo)Jdm&C(mh&-CtoaoDGD'[.?o'a"%.
!W`fDbn0se!VHEn!>!Be!>#;1!42_+'@7Qm(BG3Np&G(&aq4Uao`+t&gCiug!"Z=7!"\0-jVIq5'))A+
$crt]&.S@6!"89/g(FDu%^Q-9";UeMc5-Kr"o/-!!Y<?a!=o;1!<)s!!YEEc!>#@M!:p0j'ZLph(&7h0
&(V?_&HE@;!!!PL&c`Kq!8[\V"Vo#n!>Z%>!!*04lk.ta!>#M5!!*05`Y&:a#O_Z6!!!YM(B>3I!!!JH
&HE@=!!!ML')iLD&H2[@!!!&B(]"pK'a":5_[un[!W2rJ'(6G6&-99@!=0J"(ZQ;3$N0r*"VAQ`!!iH&
!<j)%'%dfs#Ija6&b[$c(B>0J!!!GE&HE@?!!!JF&c`HZ!;?Hn'>bOc(&\+4%aksZ&HE@?!!!PH&c`Kq
!9!nX'u:^b!!!Pn&_[iq!!!SH'(,bC!5THS('4O;!<!MK&HiXG!<<,;&d/g[&HMpF!!30%(=*fh(BkQU
!WW33_@Zq_!<E0#&_[l^&crXG!PAC6!Wj/!(Z#r3('4O<!>**[!"f)0!"n]5dh2]o!<Kh5!WiE=q\R<i
"Vq.@!<EbK&HEC@!<<_K&crXG!Qb?6!!33'(;^jk('4O<!>*iplk'4/r;cm1_@cn^!<M'Xh>dTY!Z&Wh
"Vq.@!<Ec!&_7No&H)V0&],.^&HMq*!6>-A!Wj.S(BYES!W`<&&Af"Z&H)V0&]k[^&crXG!PAC6!Wj.e
([i.D('4O<!>**[!"f)0!"n*$j:VM+!<Kh5!WiE=l5/+i"Vq.@!<EbK&HEC@!<<`)'$_*k&HMpF!!<9(
()Ok)"Vq.@!<EbO&cE:C&-2e5!<EeL&crXG!QP36!!33'(;^jk('4O<!>*cnmL]F1r;cm1_@cn^!<M!V
huEf[!Z&Wh"Vq.@!<Ebt&_IZq&H)V0&],.^&HMq(!6P9C!Wj.S(BkQU!W`<5_@ZbZr;cm1`tJ:_!YGG6
]Dr!7!Z'3#nJ;?E!WiB'&Af"Z&H)V0&`")^&crXG!PAC6!Wj/$(Y]`0('4O<!>**[!"f)0!"nf8ck6Bl
!<Kh5!WiE=rYNNi"Vq.@!<EbM&HWOV&H)V0&],.^&HMpV!:^$j!Wj.S(BkQU!W`<5g(EQ]!"f)0!"m'\
!YGG6iW.^5!WiE=_A<@k!WiB'&F^:\&HEC@!<<_K&crXG!VcZ6!<3)9(B>6N!ri8:&HiXG!<<,C')*"?
&HMpD!7htQ(BbKS!<<,9&HEC@!9"RL&c`NR!!!c$(Y'?#!!!PG&cD\0&GQm\'"IuC!#!-b!#>G4!"I$^
q@N]<r;Zg-_@ch[cN*51!"Qj^!##51!".Tqj:MA$r;Zg)_@chYjT*d1!<j4V(BG9Wr;Zj#&,$U]&HNFH
r;Zj#&B#1^&I&%3]`8$J`u"^k!u:n;!<)ru&B#.\&GlG-&^(g`&c`NP!!!S]([i.?'Dhb0%)`_X%f65+
%,hi[&c`HN!!*3;m2+Im!>Pe8!!*-3`Xr4^"8`'!!YG,>cOp6i"1A11!"d-d!#,/.!"?s]rXf,?q#CC'
`Y&7^b5gf-!<EqV(BG6Rp](:)i">2c!=o8,!!!SO&ciOFi;h=,!=9L`(BG9\pAb3u&,-[c&HNFLpAb3u
&BYUd&IJ.2]DqpBaqk'j!;6Bm$d'%]%.sT#$e#a`&c`BE!!!\i([`(?'*7_*!"R3b!"ST#!"\?-it;>&
XoJJ'')!-p(BG0Mnc/Y!c4L$dnGiP!c4U*f[K-"$!=]gm(BG6\mf3@p&C_9o&J5N\mf3@p&^h9m&.6S\
hZ*]_'c,=9!>Pq.!!3<7&F:"o&HNCHm/R1k&/!G*!>#In!6>-A!=]dr(BP<\!U9Xc#nPZ#!=oM$!!*B;
fFe2r$1n5%!!<6/'GfOA!u;RX!r`2a!!3B9&De!$&.]!Hjo>Gf%h[e6r=T2E%gN--!!<9/$4u\>ob%?<
$4-dm!!<6+#7TZ&!t5D=!T="\!<rc;q[Vm$!t5D=!M'4B!.k4I!.k3&!:'W8~>

%%EndBinary
grestore
np
259.32 110.533 mo
267.15 110.533 273.49 104.193 273.49 96.363 cv
273.49 83.553 li
273.49 75.723 267.15 69.383 259.32 69.383 cv
239.48 69.383 li
231.65 69.383 225.3 75.723 225.3 83.553 cv
225.3 96.363 li
225.3 104.193 231.65 110.533 239.48 110.533 cv
259.32 110.533 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [249.4 399.67 249.4 481.98 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
249.4 399.67 249.4 481.98 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
259.32 110.533 mo
267.15 110.533 273.49 104.193 273.49 96.363 cv
273.49 83.553 li
273.49 75.723 267.15 69.383 259.32 69.383 cv
239.48 69.383 li
231.65 69.383 225.3 75.723 225.3 83.553 cv
225.3 96.363 li
225.3 104.193 231.65 110.533 239.48 110.533 cv
259.32 110.533 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
234.72 93.713 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
238.43 93.713 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
241.13 93.713 mo
(2 3 1)
[6.02405 2.98798 6.02405 2.25598 0 ]xsh
276 231.113 mo
225.75 231.113 li
225.75 187.613 li
276 187.613 li
276 231.113 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 211.57 303.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_uKoD"UYSKkRn"1$46q?iW/rX"9S`2#7Tf*":PM?!s@E\"9S`2#7]l,":YS@!s@ojYlFn1
%MoipiYM_4'c.>bqZ,p^"9SuC%hIY3":l"T$3fMk"9SuD&.mh6":u+W$3d.(!X0;Rknin,!YlFUkl:be
%hIA+!Y5eFkl:be&.nIHk7Rh-&-\p2!X'/Or>40(!YuIRm/R1h%M.,&!Y>kEnGrLf!WilDee/#r%g09@
o)Jdr(=F!"'aa=/!<j%d&c<4A%gMJ&!<j(`&ciOJc2c]$!=]gk(BG6\nGiRr&F:"j&HNCLnGiRr&^V-k
&.7M!aT)>O(<mWq&+]c%$4tGo!"8Au!=BF`&c`=;!42_,#o1i(r"fAL%J9]%"qSoi!>#S1!!*98g_0,i
!>,XC!!*6<jqm+q!>Yq7!!*04aq4Xc"nqut!tau8g(FDu"gS+.(&Jfm(BG6Op](:)a:SC_qZ-Qp!"d3a
!"csHo)Jb"`YSUeq#CC$ee.Ea!"AZ'!"$XX!"IQ\h>dQW'uh$j'a4@5!"\E.gCXGs!r;ls&B5=`&-D;#
a8c2L`"rCcqZ$U&`";tXqZ$U&`tJ@a!"Jo-\GuUEb8:!k!>Y_6!!!PJ&HEC>!!!S]'(6G5&[q`@"Vou4
j;.h3#Q4W'!tW<^!=oA4!!*05lk7ta!>#FE!!!E#(X3`r&H)S/#f7/R%/g/+#f72S%)N#=!!!YK(B>3K
!!!JV&b-G5&,cJ.%`/hY&D.!A!!!_L(]==6&*OVZ&cD\0&&AnH!6YAX(]OO9!<!MJ&cD^I')iNR!6uDQ
(BbKT!WW5:&HiXG!<<,Q''U#1&HMpF!!33'(?H@h(BkQU!W`<5_@ZbZr;cm1n.O1_!YGG6]Dr!7!Z(YL
a;5!q!WiB'&Af"Z&H)V0&],.^&HMpS!;$6m!Wj.S(BkQU!W`<5f+I?]!"f)0!"m'\!YGG6hZ2L5!WiE=
_A<@k!WiB'&FC(\&HEC@!<<_K&crXG!VHH6!!33'(;^ji('4O<!<EbK&HEC@!<<_R')E4B&HMpF!!33'
(=X/h(BkQU!W`<5_@ZbZr;cm1h\+u_!YGG6]Dr!7!Z(&;fbXf-!WiB'&Af"Z&H)V0&bQd^&crXG!PAC7
!Wj,R_\WIl!WiB'&B5=\&HWLE!<N9&&],.^&HMpQ!;6Bo!Wj.S(BkQU!W`<5eIh3]!"f)0!"m'\!YGG6
h#Q@5!WiE=_A<@k!WiB'&F0q\&HEC@!<<_K&crXG!V6<6!!33'(;^jk('4O<!>**[!"f)0!"m6ar"9&C
!<Kh5!WiE=dMMEi"Vq.@!<EbK&HEC@!<<_f''9f.&HMpF!!33'(?cRh(BkQU!W`<5_@ZbZr;cm1o+KC_
!YGG6]Dr!7!Z(bO`>8[n!WiB'&B#.^&J5TQ!<<_K&crXG!R(Q6!!33'(;^jk('4O<!>*rskn*n,r;cm1
_@cn^!<M0[gAh9V!Z&Wh"Vq.@!<Ec$&^q<l&H)V0&],.^&HMq-!6"p>!Wj.S(B>3R!WiB'&Af"Z&H)V0
&^1m^&crXG!P/9^([Mq@('4O;!5T6M&-2e3!9"RL&crXG!P/72($ugf(]==6&&AkV!!!T*'$:it!!*'6
_&*%M!"[0`q%<Q*!"ZmYcN*51!"m'a!#5A3!"@`sj:MA&r;Zg,_@chZjT*d1!"$LY!"8`*!!`*.c4L$^
r;Zg%_@chSqZ+>1!<O%W(]G3Q'a4R;!rr<%&B#.]%g2b1!<EeU')E4A&-KBA!#*p"mhYs=qZ$U+`";t[
qZ$U,i=b2a!"cR=!=BV0(YKT)%Jp,+#8"id!"&N&!='53'$_*i$+9g7!#3Eh!>PY3!!!PO&cN@B&,?2*
&&o4^&Bb(=!!*6<a;4jm$MaZ&!tX<%kn*q-#Pe?#!t`Nd!>,Rq!7LoJ'$(jh'__S-%JCC_&HE@9!!!MM
&c`I9!5/@5!>NZm!>P\0!!!PP&HNCCp&G('dh;Eg!>#::!!*6<h\Y\s!>Pe2!!*04bRjjd"8)Wp!ta`1
it;A("0V\*#8QqKfbXZ($1e,t"V8lj!=oD+!!*67c4U-h#.FU,!!*6<ckc]t"n;Qn!tWimrXf/A"7Z?l
!t`fl!>#@W!8mhY!>?6u(BP?d!q$$h%M7q<l4F(/%fu(u!=odl&crXU!T=%"!!3KB(>'E)()72B!!!6)
%hRA*!Y>kIlMptk&/!P-!YGtKo`25s!s&cE(#0T/'c.;[!!)9a!XK;Ig^sSu&IIV#!XK>Ki=c&$!Y>tN
TE#)u%2BZqn.kU2";_jh%0bbl"9Sr@&J=(7";)4V#m92f"9SrA&eb'Ql4=(2&eG?OScJZgj9=3:j9+WH
nGqVPY5nD!m/Z2Nf`:(8p]0:Rj9**rlMuG~>

%%EndBinary
grestore
np
259.32 228.633 mo
267.15 228.633 273.49 222.283 273.49 214.453 cv
273.49 201.643 li
273.49 193.813 267.15 187.473 259.32 187.473 cv
239.48 187.473 li
231.65 187.473 225.3 193.813 225.3 201.643 cv
225.3 214.453 li
225.3 222.283 231.65 228.633 239.48 228.633 cv
259.32 228.633 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [249.4 281.58 249.4 363.89 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
249.4 281.58 249.4 363.89 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
259.32 228.633 mo
267.15 228.633 273.49 222.283 273.49 214.453 cv
273.49 201.643 li
273.49 193.813 267.15 187.473 259.32 187.473 cv
239.48 187.473 li
231.65 187.473 225.3 193.813 225.3 201.643 cv
225.3 214.453 li
225.3 222.283 231.65 228.633 239.48 228.633 cv
259.32 228.633 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
234.72 211.963 mo
(2 2 )
[6.02405 2.98798 6.02405 0 ]xsh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
252.35 211.963 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
256.02 211.963 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
258.75 211.963 mo
(1)sh
1 lw
109.08 142.853 mo
188.45 142.853 li
188.45 142.853 mo
188.45 208.053 li
225.3 208.053 li
188.45 142.853 mo
188.45 89.953 li
225.3 89.953 li
1 /0 /CSD get_res sepcs
.749 sep
@
136.77 147.653 mo
160.758 147.653 li
160.758 138.053 li
136.77 138.053 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 4762 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PBAAAA+Calibri AddT42Char 
2 7480 373 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
>PBAAAA+Calibri AddT42Char 
2 7930 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+Calibri AddT42Char 
2 9954 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+Calibri AddT42Char 
2 11224 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/a 258 def
/m 373 def
/n 374 def
/t 410 def
/u 437 def
end
PBAAAA+Calibri /Encoding get
dup 97 /a put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
45{/.notdef}rp /a 11{/.notdef}rp /m /n 5{/.notdef}rp /t /u 
138{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [8.275 0 0 -8.275 0 0 ]msf
137 145.463 mo
(mutant)
[6.74409 3.74852 2.99561 3.74861 3.74852 0 ]xsh
155.86 93.303 mo
139.29 137.853 li
1 /0 /CSD get_res sepcs
.749 sep
@
137.43 142.853 mo
143.18 137.483 li
140.72 137.743 138.28 136.833 136.58 135.023 cv
137.43 142.853 li
cp
ef
376.96 153.053 mo
323.1 153.053 li
323.1 153.053 mo
323.1 89.953 li
273.49 89.953 li
323.1 153.053 mo
323.1 208.053 li
273.49 208.053 li
@
334.42 157.853 mo
365.642 157.853 li
365.642 148.253 li
334.42 148.253 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 5112 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+Calibri AddT42Char 
2 6564 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+Calibri AddT42Char 
2 8220 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+Calibri AddT42Char 
2 8504 393 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c00>PBAAAA+Calibri AddT42Char 
2 8806 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+Calibri AddT42Char 
2 9048 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/c 272 def
/e 286 def
/o 381 def
/p 393 def
/r 396 def
/s 400 def
end
PBAAAA+Calibri /Encoding get
dup 99 /c put
dup 101 /e put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
45{/.notdef}rp /a /.notdef /c /.notdef /e 7{/.notdef}rp /m 
/n /o /p /.notdef /r /s /t /u 
138{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
334.93 155.693 mo
(compress)
[3.77029 3.77844 6.76495 3.77844 3.0195 3.7785 3.0278 0 ]xsh
376.96 152.553 mo
379.79 152.553 li
380.066 152.553 380.29 152.777 380.29 153.053 cv
380.29 153.329 380.066 153.553 379.79 153.553 cv
376.96 153.553 li
376.684 153.553 376.46 153.329 376.46 153.053 cv
376.46 152.777 376.684 152.553 376.96 152.553 cv
380.29 153.053 mo
380.29 210.183 li
393.97 210.183 li
394.246 210.183 394.47 210.407 394.47 210.683 cv
394.47 210.959 394.246 211.183 393.97 211.183 cv
379.79 211.183 li
379.658 211.183 379.529 211.13 379.436 211.037 cv
379.343 210.944 379.29 210.815 379.29 210.683 cv
379.29 153.053 li
379.29 152.777 379.514 152.553 379.79 152.553 cv
380.066 152.553 380.29 152.777 380.29 153.053 cv
379.29 153.053 mo
379.29 90.693 li
379.29 90.5613 379.343 90.4326 379.436 90.3395 cv
379.529 90.2463 379.658 90.193 379.79 90.193 cv
393.97 90.193 li
394.246 90.193 394.47 90.4169 394.47 90.693 cv
394.47 90.9692 394.246 91.1931 393.97 91.1931 cv
380.29 91.1931 li
380.29 153.053 li
380.29 153.329 380.066 153.553 379.79 153.553 cv
379.514 153.553 379.29 153.329 379.29 153.053 cv
1 /0 /CSD get_res sepcs
.749 sep
f
444.75 114.863 mo
394.5 114.863 li
394.5 71.363 li
444.75 71.363 li
444.75 114.863 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 380.32 420.18 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`;fuA#mq:*&d&UN#Q`rc"TSN'"pYRt%0?kA"lK@_!<rc<j:24u#6jJpZ2at.%29Q7(BbKh
'F=g<!:0[f!=98Ih[or%&.]!-!!<6.%hRY3";2:Y%gJd/!W`cHkSNb*!>Z(-!!*E<fF\,q#jD<i$5)kB
jq7\,#c7S&#o<FTg(sf+'aF%*!<s+c&HWLS"RuKj!!*99eIhoq&-THBo)Je&("*m!'asI1!=TLj&c<4A
%g_V(!=TOf&ciOLc2c`%!<Nt](BG9`nc/[k&*jhh&HNFOnc/[k&'kjh&Imh%aoDGC(!IHo'(Z)(%h[%u
!"JN"!"d?e!"So,ZiC(=cklQq!"JT$!"I'_!"&;u!"R`rn.G^-YlFb5jVR"p!>Pq8!!!>I&HNCHpAb1"
n.OFf!>#IA!!*3;q\RNo!>PY2!!*-3a:SC_qZ-Tq!<NhR&c`KZ!:p0j'?1gg&GZ;+%b;6^&HE78!!!PL
&c`?m!8[\V"Vo#n!>Pb7!!*04lk.ta!=o8/!!*05`Y&:`!q--1!!!\N(B>$D!!!MI&HE7:!!!PM')iLD
%/p7<!!*-:b8:!k!#GJ4!<EbM&HEC?!!**4ee7Ea!"l[?!=0J"(ZZA5'a=O9!<j%Q&HNCEr;Zj%&aU.`
&ciOG\,ZLAp(tsi!"Sr-!"HdW!"/Z)!"QjY!"-RCpAb1._A<1br;Zg.dLl!]!"Jl,!"d![!"RW]i;g\1
!#>G4k7QG\!"]#._%H_ZmJtK3!W`<;_&*%M!"f,A`"DqJ!"m-^rXudB!X&W@cPQ0h"98E'!Y<*Z"98E'
!YF&ukRtH,!X/`BjVQ_h"98E(!tW3["98E(!tar7dLs+k!X/`Bq\R9h"98E(!tW3["98E(!t`9]`rP`3
!X/`B_&!4S!!<<6f+I<\"98E(!t`9]h#Q:3!X/`B_&!4S!!<<6m1Ik\"98E(!t`9]o)Qi3!X/`B_&!.Q
!!<6(&&Ah\!!!*'&BPR\'"S&E"U,Xj([`(B!!!*'&&Ah\!!!*'&Dn,\'"S&E"U,Y+(YBN,!!!*'&&Ah\
!!!*'&G6[\'"S&F"U,VW_A<=T!!<<6`Y&+\rr<*&!t`9]`;oT3!X/`B_&!4S!!<<6eIh0\"98E(!t`9]
gAp.3!X/`B_&!4S!!<<6lOh_\"98E(!t`9]nGp]3!X/`B_&!4S!!<<6_%?eM!!<<7`tJ7^\c;d8"VoH%
n.u3-!!<<6_%?eM!!<<7h%Jf^\c;d8"Vp5;g(skl!!<<6_%?eM!!<<7o+K@^\c;d8"Vq"Q`"rOV!!<<6
`"Dt\"98E(!t`9]aoLr3!X/`B_&!4S!!<<6g(EN\"98E(!t`9]huML3!X/`B_&!4S!!<<6n.F(\"98E(
!t`9]p&N&3!X/`B_&!4S!!<<6_%?eM!!<<7bS'U^\c;d5!Z'B(lPB[(!!**3_%?eM!!**4iY(/^\,bk3
ee\<$r;aYG!"]#.pCbX^!"c[@!<<kO(B>-I!!!PO&c*(>%fHA-&Af%[&'k7@!!!\L(B>$F!!!Md&`aN(
%/g/+&&JqZ%-7K=!!!AD(BG6Ur;Zg&ob#L^!=oA4!!!8A&ciOIqZ+>1!<O"V(]G3Q('+C8!rr<%&&]%[
&GuM/!>*Eeq@Wc?[K$:Aeedck!"o).!"[![!"A`)!"\$$j:VG%[K$=8(@;pl(BG6SqZ$X%&B5:_%g2\/
!='53'$h0k&-K?@!<<hR(B>'C!!!PO&cN@B%/Bl'&&o4^%Eeb:!!*6<a;4jl"Si#u!tX<%kn*q,!r2fs
!t`Nd!>#=k!7LoJ&]bag%JKi&%/(:^&HE.3!!!JL&c`73!5/@5!>N]n!YuCKp&G('b7Oad%J9]$&(;0e
&ciRSYQ+\*(#Khq(BG3No`,!n&'PUc&+fi&!>+N/it;>&XoJJ+(%rHt(BP?d!qQBm!tW]i!Y>kCo)Jdn
&C1sj&J"oO!;?Ho!Yiut!>5G'!!**2dh2Qk!"JDt!<E_X&c`Eb!8mhY!>-'r(BG6[m/R.q&*jhm&HNCK
m/R.r&C_<n&..7pa8c8F'Gf=;!Yl=NlMpne!=oao&HWIP!p]gf!tQ!r&crUS!qcPt!!<K@()GaC!u2Ua
"o\Me!!<B8&.m\1!tPtP"6TXd"V21WiY)2&!tZ(S"/#Vr!=08MmhbX5";MO\#6Efa!X/uAit2A(%1EF!
!!3<5%f-h'&d&[T$jE1%JcLB&q>c*IJcP*:J,~>

%%EndBinary
grestore
np
427.98 112.213 mo
435.81 112.213 442.15 105.863 442.15 98.0331 cv
442.15 85.223 li
442.15 77.393 435.81 71.053 427.98 71.053 cv
408.14 71.053 li
400.31 71.053 393.97 77.393 393.97 85.223 cv
393.97 98.0331 li
393.97 105.863 400.31 112.213 408.14 112.213 cv
427.98 112.213 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [418.06 397.99 418.06 480.31 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
418.06 397.99 418.06 480.31 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.75075 lw
427.98 112.213 mo
435.81 112.213 442.15 105.863 442.15 98.0331 cv
442.15 85.223 li
442.15 77.393 435.81 71.053 427.98 71.053 cv
408.14 71.053 li
400.31 71.053 393.97 77.393 393.97 85.223 cv
393.97 98.0331 li
393.97 105.863 400.31 112.213 408.14 112.213 cv
427.98 112.213 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
403.65 95.383 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
407.33 95.383 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
410.05 95.383 mo
(2 3 1)
[6.00003 2.98798 6.00006 2.25598 0 ]xsh
444.75 228.113 mo
394.5 228.113 li
394.5 184.613 li
444.75 184.613 li
444.75 228.113 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 380.32 306.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`;g#A"UYSHjq7b*$4-mq!<)s#!s]&<jp_D!#6k:f!!<<.#7BT'!so2:"76)o!!E<.&Jl2?
(BYBg&-r(4lMq"j$kX$.&H`OU$jG_m!sK,H&E+6)&eGZa"ektu$5F?@(\/@D'bpu<!!3B9&D@]t%hAj.
!!3B:&bH_!&crUU"f;8$"VhgO(YTZ,'bgi=!!365&CqEp%hAd4!;um!!tZ'q&crUT"1J:%!!*HBdMDp!
#O_Wn#S5N!r"/r?"n)El#S>Ds!>#F[!8dbX!>-*o(BG9\nGiRu&F:"j&HNFLnGiS!&^V-k&IIP!aT);S
bngBr%eBZ$%M?tu!>#V0!!!PS&ciROquF)(!"R?lr"fAK$2"8u$Hj"^%gM\,!".HnnIbj6#-e./#o2S=
jVIq4"nqut"qSig!=o;,!!*98nIjOg!>#@>!!*-9q\RNo!>PY2!!**2a:SC_qZ-Tq!<EbQ&c`KZ!:p0j
&]PUe%J]u(%+Z$\&HE.5!!!JJ&c`6j!8[\V";Som!>PY4!!*-3lk.ta!"\o+!<NhP&c`L2!6>-?&]>Ic
%Jp,*%)`_X$2X]&%EB+\&c`7;!4i.2!>`ipqA0,HqZ$U-`";t[qZ$U.ee7Ea!"cU>!=0J"(ZZA5'a=O9
!<j%Q&HNCEr;Zj%&aU.`&ciOG\,ZL?p(tsi!"8`*!"?^V!!rN'!"?^W!!pFApAb1._A<1br;Zg.dLl!]
!"Jl,!"d![!"RW]i;g\1!#5A3k7QG\!"]#._%H_YmJtK3rrKnOr;cd.`"DqJ_\2q]\c;d5!Ys#to+qN0
!!**2_%?eM!!**3g(NT^\c;d8"Vp,8h%p1o!!<<6_%?eM!!<<7n.O.^\c;d8"VpnN`tnjY!!<<6_%?eM
!!<<7_%OcgoDepr"Vnii"98E(!tWuqlOa7"!!<<7_%PQ(h>dT\"Vnii"98E(!tXc2eI_oa!!<<7_%Q>>
a8c8F"Vnii!WW3&!<WkK&Hi(6!s9+V')<0O!!3<-("=&f(Ba^<!s9(M&Hi(6!s9+l'&sV9!!3<-($ZUf
(Ba^<!s9(M&Hi(6!s9,-'$V'#!!<B.'c4_'"98E(!tWB`r"8r/!WrN9_%O]ep&G-t"Vnii"98E(!tWoo
m1BI$!!<<7_%PK&huEf^"Vnii"98E(!tX]0f+A,c!!<<7_%Q8<aoDJH"Vnii"98E(!tW3["98E(!t`Kc
q\$I?!X/`BdMMBh"98E(!tW3["98E(!ta9$jV#-)!X/`BkSMqh"98E(!tW3["98E(!tb&:cP!eh!X/`B
rYNKh"98E(!tW<^rXf85!!<<7_%OljnGiUo"Vnii"98E(!tX)tkRdpt!!<<7_%PZ+gAh9Y"Vnii"98E(
!tXl5dLcT^!!<<7_%QGA`;frC"Vnii"98E(!tW3["98E(!t`Zhp(Fq:!WiE=f,*`h"98E&!>*'Z"98E&
!>4<(i"EO"lke4h!#>G4_%?YXr;cR)b7Xdd\GuX1'uCae'E%n2&'5F[&HE=>!!!SI&c`Hg!9sOa'Z(Xd
&cD\0&)Ru[&HE7<!!!PH&c`C&!7UuK$c<b]('sj=!!r60cOg0h"oSE$#f@8U&I&%3^&S0;'uq-i(BYER
!!!*$!!<bM&HEC?!!*05b7aXa!"lX>!#='$mhYs;qZ$U,`";tZqZ$U-i=b2a!"ZL<!=]h3(YTZ+('sd;
!=9=W&HNFHqZ$X'&bm!b&ciRJ[K$=.'uh$i'_q_/&'5F_&HE@;!!!SM&c`Hc!9sOb$5U]!!>Pe6!!*<9
i">2c!=o;.!!*<:a:\Lb"5s7/!!!_S(B>'A!!!Q'&^q<l%/0`%&',@`%JBe8!!*-9aqk'm!VZQp!>!<b
!"\c'!<Eb\')3(>&$Q$7"Voo2mM>m=!qcNo!tWTf!=o5(!!*05l4W+i!>#:8!!*B@p(uBu!>Pb/!!*97
c4L'f!qQBm"q]&m!>#=A!;?Ho"VoB#!>GV*!!*04dh2Qk!=o5$!!*05ck6?i!R(Q%!!339(=X-%'bLK8
!!303&F0qn&HNCNmJm:h%h[;(!>#^u!6>-A$5F?/(BP?d"mZ-g#6>>HfF\/r%g2+t!XB8KfFe5t%g2J)
YlFk,$PaE3(BP<c$N:%j!!3E:&)7`u%hAp.!!3E;&E+9"&crUT#G;&#":Yt[(DcNUp(dQC!YPe@irB5a
#n7IY&EXN&&HWCG!TO.`!XT>L&eY$QlOa%.!Y,D8ScJZg!!;9d!!1aQ!!23akQ(,Q!!23aXoS:um/R+f
jok_cf`2!Qjob>XiW&rZjo`9slMuG~>

%%EndBinary
grestore
np
427.98 225.593 mo
435.81 225.593 442.15 219.253 442.15 211.423 cv
442.15 198.613 li
442.15 190.783 435.81 184.433 427.98 184.433 cv
408.14 184.433 li
400.31 184.433 393.97 190.783 393.97 198.613 cv
393.97 211.423 li
393.97 219.253 400.31 225.593 408.14 225.593 cv
427.98 225.593 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [418.06 284.61 418.06 366.93 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
418.06 284.61 418.06 366.93 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
427.98 225.593 mo
435.81 225.593 442.15 219.253 442.15 211.423 cv
442.15 198.613 li
442.15 190.783 435.81 184.433 427.98 184.433 cv
408.14 184.433 li
400.31 184.433 393.97 190.783 393.97 198.613 cv
393.97 211.423 li
393.97 219.253 400.31 225.593 408.14 225.593 cv
427.98 225.593 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
403.65 208.913 mo
(2 2 )
[6.02457 2.98218 6.02457 0 ]xsh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
421.28 208.913 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
424.95 208.913 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
427.67 208.913 mo
(1)sh
187.5 55.6131 mo
182.25 55.6131 li
182.25 52.613 li
171 52.613 li
171 34.6131 li
187.5 34.6131 li
187.5 55.6131 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[18 0 0 22.5 156.82 479.43 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 24 
/H 30 
/M[24 0 0 -30 0 30 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 24 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li7"dU&Y/op].Aq!=K2!!!*?/nGrFd!=/kY!!*66lMpqf$gRcn!t4>nli7(g&cq>!!<EYq!!**1df9C\
"o//i!!*K1lMpqp"4R>N$L7]l#Oqfk!<3;R!!*68lMpqf%-mlo!tFJpli7(f&cq:u!"J2n!"RHX!>,M2
!:p0k$j5eq!=].\!<3Dl!<3;o!;ccr#Li_S"VL&#!<Wbr!!*02klC&M!W`r8lMpnpl2Uepdf9CZ"o//i
!!*H0lMpqn"4R;O#n-&!!<ri"!;c`s"pi]Y!<j)$!!*01lMpqf%I!lZ!!306!p]ge%0>bp!=f.[!!*T6
q#L!d!=K"q!!*H0e,TLU$gRcn"pj`!qZ$X$#h/hT!YXf!!<EYq!!**1klC#L!>5J"!!*N0lMpqq!Rq)M
%1)b0o)Jdt"mZ-h#mJfY!=0/#!!*60nGrFd!<ieZ!!*-6lMpqd%I3up!=n>olMpqu!p]ge%0>bp!=f.[
!!*N7q#L!d!=8qq!!*B0e,TLQ&*j2r!t4W!qZ$X!$e#(V&-;(s!"A,m!"A)lJcMhOJ,~>

%%EndBinary
grestore
np
182.25 55.6131 mo
175.628 55.6131 li
174.292 54.3825 172.725 53.3985 171 52.7342 cv
171 52.613 li
182.25 52.613 li
182.25 55.6131 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[11.7811 0 0 3.36464 157.279 480.055 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 49 
/H 14 
/M[49 0 0 -14 0 14 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 49 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
p&P()rW:XNrXJi-ec>[ZrW2Zl[/g.7rWq*UrsA]3rWUmRr<`H,\,bstr=/`3f)YaUrWUmRr<`H,r;`ht
r=/`3huNNPr<`H,f)YaUrWU1>lMpnlrW<'&r=@W_!!iK(rWE*,gAh3YrW3!#r<oV*!"/],rWW62kQ(5T
!!iK(rWE*,gAh3YrW3!#r<pdKhuE`arW<'&r=@W_!!iK(rWE*,hZ3TT!!iK(rWE*,WW3#:rYPPVr=Al.
p&O=W!##8CrYbYBgAh3frY#2Kr<q0VeGoRerYPPVr=Al.h>dNgrXo,Ir<qljnc/Y(rY#2Kr<oV*!#bbP
rZM.MrW1jU!##8CrYbYBgAh3frY#2Kr<qQaaoM8Sr>,AIrX.Taq@WZ;rX\u5qZ,dZq@``=rXf&6YQ4Y=
r>5DJrY>D>i;i]dr=Jr=rWhB^q@``=rXf&6nc6E)qA9)GrY>D>i;i]dr=Ar>rt#)6i;i]er=T#?rWfq5
q#L"&rYGJIrW;6_o+Cs5rX\u/k5b)drXo,?!!3*#[K(g~>

%%EndBinary
grestore
np
174.482 55.6131 mo
171 55.6131 li
171 53.5419 li
172.266 54.0604 173.437 54.7616 174.482 55.6131 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[5.25 0 0 3.75 156.82 479.43 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 5 
/M[7 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!03#QOi)!!Nl5!!!!!&-2b2!!!!!!!!!!!!!!!!!!!~>
<~!!!*-"TSN&!!<T/!!!!!$ig8-!!!!!!!!!!!!!!!!!!!~>
<~!!!*-"TSN&!!<T/!!!!!$ig8-!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175.628 55.6131 mo
174.482 55.6131 li
173.437 54.7616 172.266 54.0604 171 53.5419 cv
171 52.7342 li
172.725 53.3985 174.292 54.3825 175.628 55.6131 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[6 0 0 4.5 156.82 479.43 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 6 
/M[8 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~ZEgd@O0,^nZEgd)V6[D4ZEgBoZEgdAZ*BS!ZEgdAZEgdAZEgdAZEgdAZEgdA~>
<~U8"BVH(1P&U8"B8P+n\FU8!m'U8"BVU8!.1U8"BVU8"BVU8"BVU8"BVU8"BV~>
<~T:_aJGaY1rT:_a.OIr/;T:_6rT:_aJT:^S(T:_aJT:_aJT:_aJT:_aJT:_aJ~>
<~S"#n6,'o`JS"#m*=IYeLS"!b=S"#n:Q^9:dS"#n:S"#n:S"#n:S"#n:S"#n:~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
184.61 34.0031 mo
170.53 52.963 li
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 322 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>PBAAAA+Calibri AddT42Char 
2 572 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>PBAAAA+Calibri AddT42Char 
2 782 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>PBAAAA+Calibri AddT42Char 
2 932 68 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>PBAAAA+Calibri AddT42Char 
2 1278 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>PBAAAA+Calibri AddT42Char 
2 1588 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PBAAAA+Calibri AddT42Char 
2 7150 349 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/C 18 def
/F 38 def
/I 47 def
/M 68 def
/N 69 def
/S 94 def
/i 349 def
end
PBAAAA+Calibri /Encoding get
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 83 /S put
dup 105 /i put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
15{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 
/N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef 
/e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o /p 
/.notdef /r /s /t /u 138{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [9.775 0 0 -9.775 0 0 ]msf
167.33 25.713 mo
(First CMINFS)
[4.48672 2.2482 3.7536 3.75366 3.74388 2.23846 5.23944 8.25006 2.24823 6.74472 4.48672 0 
]xsh
105 119.363 mo
94.5001 119.363 li
94.5001 104.363 li
105 104.363 li
105 119.363 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[12 0 0 16.5 80.3198 415.68 ]ct
snap_to_device
<<
/T 1
/W 16 
/H 22 
/M[16 0 0 -22 0 22 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!EH/!!!!!!!!!!!!!!!!"o>7
!!!!!!!!!!!!!!!$4-\4!!!!!!!!!!!!!!&&HDe2!!!!!!!!!!!!!!3!WW3#!!!!!!!!!!!!!?4!!!!!
!!!!!!!!!!!!Nr7!!!!!!!!!!!!!!!!"o>5!!!!!!!!!!!!!!!$4-\4!!!!!!!!!!!!!!%&c_n3!!!!!
!!!!!!!!!2"98E%!!!!!!!!!!!!!?5!!!!!!!!!!!!!!!!!El6!!!!!!!!!!!!!!!!"f>6!!!!!!!!!!
!!!!!$46b5!!!!!!!!!!!!!!%&HDe2!!!!!!!!!!!!!!2"98E%!!!!!!!!!!!!!0/!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!36)!!!!!!!!!!!!!!!!"Ar0
!!!!!!!!!!!!!!!#6k/.!!!!!!!!!!!!!!$$ig8-!!!!!!!!!!!!!!.!<<*"!!!!!!!!!!!!!6.!!!!!
!!!!!!!!!!!!<W0!!!!!!!!!!!!!!!!"Ar/!!!!!!!!!!!!!!!#6k/.!!!!!!!!!!!!!!#%0-A.!!!!!
!!!!!!!!!-!WW3#!!!!!!!!!!!!!6/!!!!!!!!!!!!!!!!!3Q/!!!!!!!!!!!!!!!!"8o/!!!!!!!!!!
!!!!!#6t5/!!!!!!!!!!!!!!#$ig8-!!!!!!!!!!!!!!-!WW3#!!!!!!!!!!!!!**!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!36)!!!!!!!!!!!!!!!!"K#1
!!!!!!!!!!!!!!!#6k/.!!!!!!!!!!!!!!$%0-A.!!!!!!!!!!!!!!/!<<*"!!!!!!!!!!!!!6.!!!!!
!!!!!!!!!!!!<Z1!!!!!!!!!!!!!!!!"K#0!!!!!!!!!!!!!!!#6k/.!!!!!!!!!!!!!!#%KHJ/!!!!!
!!!!!!!!!.!WW3#!!!!!!!!!!!!!6/!!!!!!!!!!!!!!!!!3T0!!!!!!!!!!!!!!!!"Au0!!!!!!!!!!
!!!!!#6t5/!!!!!!!!!!!!!!#%0-A.!!!!!!!!!!!!!!.!WW3#!!!!!!!!!!!!!**!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
102.77 104.163 mo
94.542 116.633 li
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 6886 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/h 346 def
end
PBAAAA+Calibri /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
15{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 
/N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef 
/e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [9.75 0 0 -9.75 0 0 ]msf
85.325 96.693 mo
(rootSchema)
[3.74399 5.23568 5.23568 3.00307 4.47525 4.51428 5.23569 5.23576 7.49771 0 ]xsh
263.25 356.363 mo
213 356.363 li
213 333.471 li
213.032 333.405 213.05 333.331 213.05 333.253 cv
213.05 333.175 213.032 333.101 213 333.035 cv
213 312.863 li
263.25 312.863 li
263.25 356.363 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 198.82 178.68 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_uKlC#mq.(&d&RM#mK;grW!$&"pYIs%0HnA"p<`_!s8`4$0D^"#mUY:m/XBk!sfGR(#Tl2
'c.Gf!W2r`!!<B5&.d\2!tPtP"m#^d"UktSi=Z8+&/#EUU&Y6#'c-$MneV?C'aj1*!X0)Gg(=At%gV>!
!X0,IoFg="!YGtKV>pZ$'GgW`g(sf+'a<t)!WrrEee%rp%g2>%r;Zm$%h[A*!YGtG[fH""!=9Lh(BG6W
mf3@m&(_Ek&HNCHmf3@m&CM0l&-gD[h>dQd(!m`t'bKm8!=BA(&`jT*%h.t.!=BCb&ciOPjT*C&!"mEk
!#"l'!=TRb&HE:3!!!JP&c`F>!42_,$5Lr)q\K5Ao`,!t&'GOb$2"9!#8#Z'n.G^-YlFe/($6=o(BG6V
pAb3s&'>Ib%gD\-!<`u('&!s!&-]B?!<Er4(X<ft'a".1!"[-_!=o5/!;ult&BGIb&-9WJo)Jb"`YSUe
q#CC$ee.Ea!"AZ'!"$XX!"IQ\h>dQW'uh$j'a4@5!"\E.gCXGs!r;ls&B5=`&-D;#a8c2M`"rCcqZ$U'
`";tXqZ$U'`tJ@a!"Jo-\GuUEb8:!k!>Y_6!!!PJ&HEC>!!!S]'(6G5&[q`@"Vou4j;.h4#lO`(!tW<^
!>#G5!!*05lk7ta!>,LF!!!E#(X3`r&H)S/#f7/R%/g/+#f72S%)N#=!!!YK(B>3K!!!JV&b-G5&,cJ.
%`/hY&D.!A!!!_L(]==6&*OVZ&cD\0&&AnH!6YAX(]OO9!<!MJ&cD^I')iNR!6uDQ(BbKT!WW5:&HiXG
!<<,Q''U#1&HMpF!!33'(?H@h(BkQU!W`<5_@ZbZr;cm1n.O1_!YGG6]Dr!7!Z(YLa;5!q!WiB'&Af"Z
&H)V0&],.^&HMpS!;$6m!Wj.S(BkQU!W`<5f+I?]!"f)0!"m'\!YGG6hZ2L5!WiE=_A<@k!WiB'&FC(\
&HEC@!<<_K&crXG!VHH6!!33'(;^ji('4O<!<EbK&HEC@!<<_R')E4B&HMpF!!33'(=X/h(BkQU!W`<5
_@ZbZr;cm1h\+u_!YGG6]Dr!7!Z(&;fbXf-!WiB'&Af"Z&H)V0&bQd^&crXG!PAC7!Wj,R_\WIl!WiB'
&B5=\&HWLE!<N9&&],.^&HMpQ!;6Bo!Wj.S(BkQU!W`<5eIh3]!"f)0!"m'\!YGG6h#Q@5!WiE=_A<@k
!WiB'&F0q\&HEC@!<<_K&crXG!V6<6!!33'(;^jk('4O<!>**[!"f)0!"m6ar"9&C!<Kh5!WiE=dMMEi
"Vq.@!<EbK&HEC@!<<_f''9f.&HMpF!!33'(?cRh(BkQU!W`<5_@ZbZr;cm1o+KC_!YGG6]Dr!7!Z(bO
`>8[n!WiB'&B#.^&J5TQ!<<_K&crXG!R(Q6!!33'(;^jk('4O<!>*rskn*n,r;cm1_@cn^!<M0[gAh9V
!Z&Wh"Vq.@!<Ec$&^q<l&H)V0&],.^&HMq-!6"p>!<EtQ(B>3R!Wi?%&Af"_&-2e3!"mEfpC[N>!<Kb3
eedZh";V%?!!'hI":tS7!!(sji=Z2(!<Kb3!#=l;eJJ/a!"ZmXr;Zg/p_(^^\GuX1'>bOc(&\+4%`o=Z
&HE@?!!!PH&c`Kh!9sOa&],=a'`A"3%,VZX&HE@?!!!JF&c`I(!7UuL#St;o!"8`*!<j&.&^Csg#lO`(
"VJWb!!rH%^&S07(<76j(BYBU!!)uu!"d'\!=o;1!!!VS')E4A&-KBA!#*p"mhYs=qZ$U+`";t[qZ$U,
i=b2a!"cR=!=0J.(YTZ+((L-@!<j%S&HNFLqZ$X#&bm!b&ciRN[K$=.'ZLph(&7h0&'5F_&HE@;!!!PL
&c`Kd!9sOb"Vo)p!>Z%<!!*04i">2c!>#M3!!*05a:\Lc#N5[3!!*]JaVOpjpAb4'&GHdc&HE=8!!*QA
aV"Rap&Mc+!<EqX(BG3Op&G('aq4Xb!VQKn&CV9e&ciLDYlFe+(#Khq(BG6So`,!n&'PUd%g2J)!<Ebs
'&sT*&-K*9!<s>5(YKT*'aF70!<`tZ&HNCFo)Jdo&^D!i&-THBpAb3s(!m`t'a=+-!<Ne\&cN@C%g2>%
!<NhZ&ciOGbQ-Q$!W`oKe/&0%'*7M$!=]S*&aBr/&.\(-!=f[j&ciRThuLgu!XBGUfG=T)'aX+*!!NB6
&D.Qr&.\s1!!3<8&_I]t&J,-=!3cG)$5F<2(BP<d$iU.k!!3B9&)7`u%hAs/!!3B:&E+9"&crUU#bV/$
!X]PV(DcNUp([`H(Dd\k"QKIc!='&G&J4(8"V;7X%0lsp!!NB.%MBBdr"/0*"VD@[%L3',!;lfs!TjOc
!S@D7"6]aS!9OBd!;Z]_!!!&^"TSSU!9OCX!9!q?"2+^#!.Y~>

%%EndBinary
grestore
np
246.56 353.833 mo
254.39 353.833 260.74 347.493 260.74 339.663 cv
260.74 326.853 li
260.74 319.023 254.39 312.673 246.56 312.673 cv
226.72 312.673 li
218.89 312.673 212.55 319.023 212.55 326.853 cv
212.55 339.663 li
212.55 347.493 218.89 353.833 226.72 353.833 cv
246.56 353.833 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [236.64 156.37 236.64 279.85 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzz!<<*"!W`<%!s&E&"9JW)"Tni,"Tni,"p>&/#6b82#R(A3#mLS6$3pe9$3pe9$3pe9$O@"<$O@"
<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9#mLS6#R(A3#6b82"p>&/"Tni,"Tni,"9JW)!W`<%!W`<%!<<*
"zzzzzzzzzzz!<<*"!W`<%!W`<%"9JW)"Tni,"Tni,"p>&/#6b82#R(A3#mLS6$3pe9$3pe9$3pe9$O@
"<$O@"<$O@"<~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<N<(!WrN,!sA`0"9\i1"9er4"U5/8"pYA<#7(S@#RLeD#mgnE#mgnE#mgqG$47+I$47+
I$47+I$47+I$47+I$47(G#mgnE#mgnE#mgkC#RCY?#6tG;"pP57"U,#3"9\i1"9\i0!s/N)!<E3%!<E3
$zzzzzzzzzzzz!<E3%!<E3%!WiH+"9\i1"9\i1"U,&5"pP89#6tJ=#RC\A#mgnE#mgnE#mgnE$47+I$4
7+I$47+I~>
<~zzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9er4"U5/8"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6
tJ=#6tJ=#6tG;"pP89"pP89"pP57"U,#3"9\i1"9\f/!s8T+!WiE)!WiE(!<E3$zzzzzzzzzzzzzzzz!
<E3%!WiE)!WiE)!s8W-"9\i1"9\i1"U,&5"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=~>
<~zzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9er4"U5/8"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6
tJ=#6tJ=#6tG;"pP89"pP89"pP57"U,#3"9\i1"9\f/!s8T+!WiE)!WiE(!<E3$zzzzzzzzzzzzzzzz!
<E3%!WiE)!WiE)!s8W-"9\i1"9\i1"U,&5"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=~>
0 ]
>>
236.64 156.37 236.64 279.85 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
246.56 353.833 mo
254.39 353.833 260.74 347.493 260.74 339.663 cv
260.74 326.853 li
260.74 319.023 254.39 312.673 246.56 312.673 cv
226.72 312.673 li
218.89 312.673 212.55 319.023 212.55 326.853 cv
212.55 339.663 li
212.55 347.493 218.89 353.833 226.72 353.833 cv
246.56 353.833 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
223.18 337.333 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
226.85 337.333 mo
( )sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
229.55 337.333 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
233.25 337.333 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
235.95 337.333 mo
(3 1)
[6.02405 2.98798 0 ]xsh
263.25 413.363 mo
213 413.363 li
213 390.171 li
213.032 390.105 213.05 390.031 213.05 389.953 cv
213.05 389.875 213.032 389.801 213 389.735 cv
213 369.863 li
263.25 369.863 li
263.25 413.363 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 198.82 121.68 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`W-,B#S@[aj;.q6&ePBMj8]>`!!Nc?&*+<)%h/pNi;`r`%1Ws1&d&[T%0c/"Z2at1&f2>?
(BYEg&dS=7li7+i%1s0.&H`RU%0bnp!s9#G&`=9*&eYcg%L&X.!X05PkSNb*!YlCQlMptg%M.2(!Y5eD
lMptg%hS=Fjq7_,%g/^0!=fkB(YKT*'bKa4!=B@e&HNCNnGrLf!=BCf&ciOP[fH%#!<Ek\(BG3On,NFu
ee.ck!=o5#!!!PV&ciLDcN)i&!<a._(BG6Ro)Jdm&*jhg&HNCDo)Jdm&C(mh&-CtoaoDGD'[.?o'a"%.
!W`fDbn0se!VHEn!>!Be!>#;1!42_+'@7Qm(BG3Np&G(&aq4Uao`+t&gCiug!"Z=7!"\0-jVIq5'))A+
$crt]&.S@6!"89/g(FDu%^Q-9";UeMc5-Kr"o/-!!Y<?a!=o;1!<)s!!YEEc!>#@M!:p0j'ZLph(&7h0
&(V?_&HE@;!!!PL&c`Kq!8[\V"Vo#n!>Z%>!!*04lk.ta!>#M5!!*05`Y&:a#O_Z6!!!YM(B>3I!!!JH
&HE@=!!!ML')iLD&H2[@!!!&B(]"pK'a":5_[un[!W2rJ'(6G6&-99@!=0J"(ZQ;3$N0r*"VAQ`!!iH&
!<j)%'%dfs#Ija6&b[$c(B>0J!!!GE&HE@?!!!JF&c`HZ!;?Hn'>bOc(&\+4%aksZ&HE@?!!!PH&c`Kq
!9!nX'u:^b!!!Pn&_[iq!!!SH'(,bC!5THS('4O;!<!MK&HiXG!<<,;&d/g[&HMpF!!30%(=*fh(BkQU
!WW33_@Zq_!<E0#&_[l^&crXG!PAC6!Wj/!(Z#r3('4O<!>**[!"f)0!"n]5dh2]o!<Kh5!WiE=q\R<i
"Vq.@!<EbK&HEC@!<<_K&crXG!Qb?6!!33'(;^jk('4O<!>*iplk'4/r;cm1_@cn^!<M'Xh>dTY!Z&Wh
"Vq.@!<Ec!&_7No&H)V0&],.^&HMq*!6>-A!Wj.S(BYES!W`<&&Af"Z&H)V0&]k[^&crXG!PAC6!Wj.e
([i.D('4O<!>**[!"f)0!"n*$j:VM+!<Kh5!WiE=l5/+i"Vq.@!<EbK&HEC@!<<`)'$_*k&HMpF!!<9(
()Ok)"Vq.@!<EbO&cE:C&-2e5!<EeL&crXG!QP36!!33'(;^jk('4O<!>*cnmL]F1r;cm1_@cn^!<M!V
huEf[!Z&Wh"Vq.@!<Ebt&_IZq&H)V0&],.^&HMq(!6P9C!Wj.S(BkQU!W`<5_@ZbZr;cm1`tJ:_!YGG6
]Dr!7!Z'3#nJ;?E!WiB'&Af"Z&H)V0&`")^&crXG!PAC6!Wj/$(Y]`0('4O<!>**[!"f)0!"nf8ck6Bl
!<Kh5!WiE=rYNNi"Vq.@!<EbM&HWOV&H)V0&],.^&HMpV!:^$j!Wj.S(BkQU!W`<5g(EQ]!"f)0!"m'\
!YGG6iW.^5!WiE=_A<@k!WiB'&F^:\&HEC@!<<_K&crXG!VcZ6!<3)9(B>6N!ri8:&HiXG!<<,C')*"?
&HMpD!7htQ(BbKS!<<,9&HEC@!9"RL&c`NR!!!c$(Y'?#!!!PG&cD\0&GQm\'"IuC!#!-b!#>G4!"I$^
q@N]<r;Zg-_@ch[cN*51!"Hd]!"o/0!"%Npj:MA#r;Zg(_@chXjT*d1!<j4V(BG9Wr;Zj#&,$U]&HNFH
r;Zj#&B#1^&I&%3]`8$J`u"^k!u:n;!<)ru&B#.\&GlG-&^(g`&c`NP!!!M[([i.?')MY/$H*MV%Jp,*
$K2WY&c`EM!!*3;m2+Im!>Pe8!!*-3`Xr4^"8`'!!YG,>cOp6i"1A11!"Hpa!"o#,!"$aZrXf,=q#CC$
`Y&7\b5gf-!<EqV(BG6Rp](:)i">2c!=o8,!!!SO&ciOFi;h=,!=0F_(BG6XpAb3t&,-[c&HNCIpAb3t
&BYUd&-qn/]Dqp@aqk'i!;6Bm$-Eh[%.sT#$.BO^&c`?D!!!Yh([`(>'Cu2(%EoCa%eBZ#%dF\e&c`HF
!!**4p(uBu!>5G(!!!GQ&HE:1!!!JR&c`EM!;6Bn%2RA.!>Q+5!!*B;e.Dcp&J#6;!!*B<dLlQl$HiG,
!!3B?(=a3%'aa7-!X0)Glk/Lp!=oD%!!3<8&_.Kp&-h%ma8c8B%2IM3!Yl.Fl2Uhk&(hHp%ghJ#!=9=i
&ciOMoDl)q!s&`C(>]i0().)WrW)0_!XB5Ih@Ti$%gN-t!!3B9&`OH%&d&^V#6CFs!s/c9&F^>*&d&[P
#m0&c!s&T2%-.j"$jQt;i;`r\"pYS6%dFN+$jQt;SH+6AJcPWIJcLB&lMuG~>

%%EndBinary
grestore
np
246.56 410.523 mo
254.39 410.523 260.74 404.183 260.74 396.353 cv
260.74 383.543 li
260.74 375.713 254.39 369.373 246.56 369.373 cv
226.72 369.373 li
218.89 369.373 212.55 375.713 212.55 383.543 cv
212.55 396.353 li
212.55 404.183 218.89 410.523 226.72 410.523 cv
246.56 410.523 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [236.64 140.84 236.64 223.15 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$3pe9#mLS6#mLS6#R(A3#6b82#6b82"p>&/"Tni,
"Tni,"9JW)"9JW)!s/N(!W`<%!W`<%!<<*"zzzzzzzzzzzzzzzzzz!<<*"!W`<%!W`<%!s/N("9JW)"9
JW)"Tni,"Tni,"p>&/#6b82#6b82#R(A3#mLS6#mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O
@"<$O@"<~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$47+I$47+I$47+I$47+I$4."F#mgnE#mgnE#mgnE#mgnE#m^eB#RC\A#R:S>#6kA:"pP89"pG/6"U"r2
"9\i1"9\f/!s8W-!s8T+!WiB'!<E3%!<E0#zzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE*!s8W-!s
8W."9\i1"9\i1"U,&5"pP89"pP89#6tJ=#RC\A#RC\A#mgnE#mgnE#mgnE#mgnE#mgnE$47+I$47+I$4
7+I$47+I~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pG/6"U,&5"U"r2"9\i1"9\i1"9S`.!s/N*
!WiE)!WiB'!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3&!WiE)!WiE)!s8
W-"9\i1"9\i1"9\i1"U,&5"U,&5"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pG/6"U,&5"U"r2"9\i1"9\i1"9S`.!s/N*
!WiE)!WiB'!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3&!WiE)!WiE)!s8
W-"9\i1"9\i1"9\i1"U,&5"U,&5"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=~>
0 ]
>>
236.64 140.84 236.64 223.15 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
246.56 410.523 mo
254.39 410.523 260.74 404.183 260.74 396.353 cv
260.74 383.543 li
260.74 375.713 254.39 369.373 246.56 369.373 cv
226.72 369.373 li
218.89 369.373 212.55 375.713 212.55 383.543 cv
212.55 396.353 li
212.55 404.183 218.89 410.523 226.72 410.523 cv
246.56 410.523 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
223.18 394.093 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
226.85 394.093 mo
( )sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
229.55 394.093 mo
(2 )
[6.02502 0 ]xsh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
238.38 394.093 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
242.05 394.093 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
244.77 394.093 mo
(1)sh
263.25 469.613 mo
213 469.613 li
213 446.861 li
213.032 446.795 213.05 446.721 213.05 446.643 cv
213.05 446.565 213.032 446.491 213 446.425 cv
213 426.113 li
263.25 426.113 li
263.25 469.613 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 198.82 65.4297 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_uKi?"U3ro!X/`/iW/rX!W`B*j9G_g!s.9Z!W`B*j9G_g!s.chYlFq/$5=6j($$/7'bqJu
$3^5+lMq(h#7h@V&*+<+%hB3^#6Nue"T\i=&J,N7&c`IG&.oEX!hoYr"VMR7(\/@D'b^c8!!363&)%Ts
%h8^+!!364&G-Uu&crUT"/Z&"!>-(F(YTZ,'bLN6!!*K=ee%ro$j#kuqu?a,&CqHq&.JZL!:p0k"W#N&
!>Ph-!!*05f+Iom!=o>%!!*06dLlQl"O7#(!!*B@ckc]t$h42t"qU&4jUhM(#k7lq"q],o!>#Ou!6G3A
%2I/)!>Z1:!!*B:c4L'g$M+5u#nYAp!>,\:!42_,#Sk`'r"fAK$2"9!"V8fh!=oD-!!*67g_0,i!>#I?
!!*6<jqm+q!>Ph5!!*04aq4Xb"SVls!tau8g(FDt"L8"-(&Jfm(BG9Pp](:)a:SC`qZ-Qp!"d3a!"m$I
o)Jdu(<73k%J]u)#8#K!nIYa-q#CF#&]YLa$.o77!!**9`YSXk"Sr)u&F:"`&HNFEq>^L-`Y&:a!q--1
!!!DF(B>$D!!!;C&HE7:!!!;F')iLD%/p7;!!!bW(]"pJ(Ae(3&&]%[&GlG-&CqK_&c`NQ!!*6<i>:Pk
!>Pe:!!*04`"<"\"8r3#!taf3fb+;s"1S=2$MG:\(B=sD!!!8@&HE1:!!!8@&c`9U!;?Hn'#GFb(&\+4
%FPjY&HE@?!!!MG&c`Kq!9!nX'YtUa!!!Pn&_[iq!!!PG'(,bC!5KEN!WN/u&]>:[!5fHK'"@qe(\ALH
('4O;!5T6M&-2e3!8/"L&crXG!PAC6!Wj/!(Z#r3('4O<!>**[!"f)0!"n]5dh2]o!<Kh5!WiE=q\R<i
"Vq.@!<EbK&HEC@!<<_K&crXG!Qb?6!!33'(;^jk('4O<!>*iplk'4/r;cm1_@cn^!<M'Xh>dTY!Z&Wh
"Vq.@!<Ec!&_7No&H)V0&],.^&HMq*!6>-A!Wj.S(BYES!W`<&&Af"Z&H)V0&]k[^&crXG!PAC6!Wj.e
([i.D('4O<!>**[!"f)0!"n*$j:VM+!<Kh5!WiE=l5/+i"Vq.@!<EbK&HEC@!<<`)'$_*k&HMpF!!<9(
()Ok)"Vq.@!<EbO&cE:C&-2e5!<EeL&crXG!QP36!!33'(;^jk('4O<!>*cnmL]F1r;cm1_@cn^!<M!V
huEf[!Z&Wh"Vq.@!<Ebt&_IZq&H)V0&],.^&HMq(!6P9C!Wj.S(BkQU!W`<5_@ZbZr;cm1`tJ:_!YGG6
]Dr!7!Z'3#nJ;?E!WiB'&Af"Z&H)V0&`")^&crXG!PAC6!Wj/$(Y]`0('4O<!>**[!"f)0!"nf8ck6Bl
!<Kh5!WiE=rYNNi"Vq.@!<EbM&HWOV&H)V0&],.^&HMpV!:^$j!Wj.S(BkQU!W`<5g(EQ]!"f)0!"m'\
!YGG6iW.^5!WiE=_A<@k!WiB'&F^:\&HEC@!<<_K&crXG!VcZ6!!33'(;^jf('F[?!<EbK&HEC@!<<_U
')*"?&HMpD!7htQ(BbKT!WW5:&HiXG!<<,Y'&aH)&HMpD!!!c$(Y'?#!!!PG&cD\0&GQm\'"IuC!#36c
r;Zg.aV"=\r;Zg._%P&ol2Uer_A<1dr;Zg+h\"o]!"]#.!"HdX!"\/ke,TLV(;gpg%K-8-#8$S@c4L$_
r;Zj'&]54]$2X_:!!*-9`u"^k!u1t>!!<3$!>!*\!=o;2!!**3b7aXa!>#@B!!!_a([i.?(Ae(3&&]%[
&GlG-&)e/^&c`NP!!*EBm2+Fl!"Jf*!='1T&HE.7!!*<:p_(jb!"$(6!<<kS(BG6Oq>^L+aV"La!"\l*
!"d-_!"d<Rl2Uhl(<73k%J]u)#8#f*kRde$q#CF#&]YLa$/km5!!!_S(B>3E!!!Q'&^q<l&,-&(&',@`
&G?+;!!*-9aqk'n"nqut!>!<b!=o;,!!**3dh;Eg!>#@<!!*9=h\Y\s!>Yq5!!*35bRjje"n_ir";'i2
it;A)"g7n,$5W=OfbXZ)$hF?!#8#/m!>#P.!!*<:c4U-i#e'g.!!*<?ckc]u#Oqcp"VB,prXf/B"n;Qn
"VK)o!>,LZ!8mhY";M^$(BG6Rmf3Cj%hS%=kn*q,!q-*j!Y>sm&ciOFi;gt"!W``Fee\B'%0>eq!!rW9
ee%oo$0qQl#nYZ#!>,Y2!3lM+!>$%_g_U,0((gTJ!9sOc$kX'+&H`RU$j#Pl!Xo\Ri=c&$!tc+S!MTPs
!=08R([i+2'a,<h&I8Eu!!<B5&J="5!tc+R"lfRb"Uu(Wq@Mm&!tl4U"eG_n!!!&Z"TSSY!9++G!:g-L
"0_e%!:Kmf!TF7_!Sd\7"8MrW!9+*q!:'W8~>

%%EndBinary
grestore
np
246.56 467.221 mo
254.39 467.221 260.74 460.875 260.74 453.048 cv
260.74 440.233 li
260.74 432.403 254.39 426.063 246.56 426.063 cv
226.72 426.063 li
218.89 426.063 212.55 432.403 212.55 440.233 cv
212.55 453.048 li
212.55 460.875 218.89 467.221 226.72 467.221 cv
246.56 467.221 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [236.64 42.983 236.64 125.3 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /8 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
236.64 42.983 236.64 125.3 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
246.56 467.221 mo
254.39 467.221 260.74 460.875 260.74 453.048 cv
260.74 440.233 li
260.74 432.403 254.39 426.063 246.56 426.063 cv
226.72 426.063 li
218.89 426.063 212.55 432.403 212.55 440.233 cv
212.55 453.048 li
212.55 460.875 218.89 467.221 226.72 467.221 cv
246.56 467.221 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
223.18 450.863 mo
(2 )
[6.00002 0 ]xsh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
231.97 450.863 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
235.65 450.863 mo
( )sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
238.38 450.863 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
242.05 450.863 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
244.77 450.863 mo
(1)sh
263.25 526.613 mo
213 526.613 li
213 503.552 li
213.032 503.486 213.05 503.412 213.05 503.334 cv
213.05 503.256 213.032 503.182 213 503.116 cv
213 483.113 li
263.25 483.113 li
263.25 526.613 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 198.82 8.42969 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&`;g#D#n7L[jqe.5&e,0NirB8`!!3?2%1VG3":YeH#6Nia"9Jc6%M%V6":bnJ#6O;nZ2at.
%2BW7(BYBe%0ZS/li7+g#nIR'&H`OS#m08i!s&]>&E"0)&eY`e#m-n&!W``FkSNb*!Yl1Gl2Uhk&(hHp
%gqP$!=9>/''9f-&.597!=9P>(YKT*'aa7-!<s+b&HNCHnGrLf!<s.c&ciOJ[fH""!>$!o(BG6^mf3@s
&(_Ek&HNCNmf3@s&CM0l&.HhahZ*ZY'[@Kq'E[k+!<E_s&`aN)%fu8%!<E_V&ciLDjoEL'!#3Wn!>PY-
!!*TBbn0pdo)Jb$bRsmequF)(!"mQoq\K5Fo`+t#aq4U_o`+t$gCiug!"Q76!=BS((ZZA4%JKi'#7nog
!"&B"!='2+'%mlt$*sU4!YtSKc5-Kr"o/-!!>!6`!=o;1!<)s!!>*<b!>#@M!:p0j&]PUe'_q_/%+Z$\
&HE@;!!!JJ&c`Hp!8[\V";Som!>Pe8!!*-3lk.ta!=o;0!!*-4`Y&:`"7H62!!!VL(B>-G!!!GG&HE=<
!!!JK')iLD&,lR>!!!eX(]"pK('=C6!"d'\!>#;0!!!V^'(6G6&HTBA!<j4s(ZQ;3$2ji)!tW9]!!`B%
!<Wo"'%dfs#.OX5%e^^`(B>*H!!!AC&HE:=!!!AC&c`EY!;?Hn'#GFb(&\+4%FPjY&HE@?!!!MG&c`Kq
!9!nX'u:^b!!!Pn&_[iq!!!SH'(,bC!5THS('+F9!<!MK&HEC@!5fEN&eYef!<3)F(\ALH('4O;!5T6M
&-2e3!8/"L&crXG!PAC6!Wj/!(Z#r3('4O<!>**[!"f)0!"n]5dh2]o!<Kh5!WiE=q\R<i"Vq.@!<EbK
&HEC@!<<_K&crXG!Qb?6!!33'(;^jk('4O<!>*iplk'4/r;cm1_@cn^!<M'Xh>dTY!Z&Wh"Vq.@!<Ec!
&_7No&H)V0&],.^&HMq*!6>-A!Wj.S(BYES!W`<&&Af"Z&H)V0&]k[^&crXG!PAC6!Wj.e([i.D('4O<
!>**[!"f)0!"n*$j:VM+!<Kh5!WiE=l5/+i"Vq.@!<EbK&HEC@!<<`)'$_*k&HMpF!!<9(()Ok)"Vq.@
!<EbO&cE:C&-2e5!<EeL&crXG!QP36!!33'(;^jk('4O<!>*cnmL]F1r;cm1_@cn^!<M!VhuEf[!Z&Wh
"Vq.@!<Ebt&_IZq&H)V0&],.^&HMq(!6P9C!Wj.S(BkQU!W`<5_@ZbZr;cm1`tJ:_!YGG6]Dr!7!Z'3#
nJ;?E!WiB'&Af"Z&H)V0&`")^&crXG!PAC6!Wj/$(Y]`0('4O<!>**[!"f)0!"nf8ck6Bl!<Kh5!WiE=
rYNNi"Vq.@!<EbM&HWOV&H)V0&],.^&HMpV!:^$j!Wj.S(BkQU!W`<5g(EQ]!"f)0!"m'\!YGG6iW.^5
!WiE=_A<@k!WiB'&F^:\&HEC@!<<_K&crXG!VcZ6!<3)9(B>6N!ri8:&HiXG!<<,C')*"?&HMpD!7htQ
(BbKS!<<,9&HEC@!9"RL&c`NR!!!c$(Y'?#!!!PG&cD\0&GQm\'"IuC!#!-b!#>G4!"I$^q@N]<r;Zg-
_@ch[cN*51!"d!`!##51!"@`sj:MA$r;Zg+_@chYjT*d1!='@X(BG9Yr;Zj%&,$U]&HNFJr;Zj%&B#1^
&I815]`8$J`u"^k!u:q<!<)ru&B#.]&-;\/!"mBeq@Wf@!Oi%/&_7ce(B>0H!!!GG&HE@=!!!Je'''Z*
&%2H="VpD@g(sc)#l=T&!tWB`!=oA2!!*05p_(mc!>#FC!!*'3`YSUhq#CC'aV"La!"\l*!"Hp\!"[6Q
l2Uhf(!%0l'a=C5!<Nei&a9l.%g2V-!<NhR&ciOGi;h=,!=]gd(B>!?!!*B;pCYjd!"8N$!=9@[&c`=5
!5&:4&f/Y,!>>J,!!*N?b7O^ao`,"&&_%Hg&c`HH!!**8h\Y\s!>GS,!!!PR&HE@5!!!Sq'&sT)&$>m6
!YcFE(YKT*'a!t,!W`fCcOg0g!V69l!=o/BcOp6i!Oi('!!306(=<p!&cqJ%!=]Ui&cN@B%IX8t%M@)$
!"R0PhZ*Zd("=$#'b9U2!=9;&&aBr/%gq\(!=9=e&ciONhuLgu!X')MfG=T(&d7M#!!300&(hHq%h/U+
!!332&D.Ts&.Sd7!3cG*"V;FahA68/((g`L!9sOd!t5_Oh@Ti#&.A[(!!<<3&J3q7r=T2D&Iei7!!<B7
&ea[MobR]C&e50*!!<<1%1VA1!t>\H"lTF`!t#MJq\&0,!tGeJ"e>XF!.k4I!.k3&!:'W8~>

%%EndBinary
grestore
np
246.56 523.914 mo
254.39 523.914 260.74 517.568 260.74 509.74 cv
260.74 496.928 li
260.74 489.1 254.39 482.755 246.56 482.755 cv
226.72 482.755 li
218.89 482.755 212.55 489.1 212.55 496.928 cv
212.55 509.74 li
212.55 517.568 218.89 523.914 226.72 523.914 cv
246.56 523.914 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [236.64 -13.71 236.64 68.608 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /9 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
236.64 -13.71 236.64 68.608 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
246.56 523.914 mo
254.39 523.914 260.74 517.568 260.74 509.74 cv
260.74 496.928 li
260.74 489.1 254.39 482.755 246.56 482.755 cv
226.72 482.755 li
218.89 482.755 212.55 489.1 212.55 496.928 cv
212.55 509.74 li
212.55 517.568 218.89 523.914 226.72 523.914 cv
246.56 523.914 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
221.95 507.638 mo
(2 2 )
[6.02457 2.98218 6.02457 0 ]xsh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
239.58 507.638 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
243.25 507.638 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
245.97 507.638 mo
(1)sh
171 336.113 mo
120.75 336.113 li
120.75 323.57 li
122.642 329.41 128.129 333.628 134.6 333.628 cv
154.44 333.628 li
162.477 333.628 168.985 327.12 168.985 319.083 cv
168.985 306.273 li
168.985 300.697 165.853 295.852 161.25 293.408 cv
161.25 292.613 li
171 292.613 li
171 336.113 li
120.75 301.785 mo
120.75 292.613 li
129.564 292.613 li
125.396 294.151 122.125 297.541 120.75 301.785 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[51.75 0 0 45 106.57 198.93 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 69 
/H 60 
/M[69 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 69 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
li7"ek69H;!!26bpAj.P!!26b]`?U`!!;<ef)PdOo)nXff)PdOk6'05`W-2D#S@[c(Dc0K"W%si&ded&
!!`K("UkhP&J4+9"VD=W%0lso!!NN8%MBBdk7@e0&eGNX!q-,p!!<B;(DbgC!u2OY!W<#b!!<<4&J3b1
!Y5eIk5YSd%MBB3')iLF&.f,C!!399($HJ((BP?e$L7Zn!Y#[m&HWLS#O;?k!Y,e5''9f.&J,2F!!*ND
r"n$&!YuIOmJm7o&(D0m&.\g4!;ulu#nYT!!YGqD\,c.$!W`lKd2)fu"n2Km$kV#&q[ii>"7Q9k%2$u#
!>#@Z!8dbW!Y`iq!>Pq4!!**1lOi1i!=oD+!!**2c4U-h#3Gp-!!!_W(BG6SoDen&&^:mg%g2G(!"[9d
!>#A3!42_+&C;6j(BG6Pp&G($aq4Xb!VQKn%,2Ea&ciOEZ2an4($6=n(B>0D!!*<8aUnL`pAb4!&FgCd
&c`HK!!**8q\RNo!>Z%;!!!PN&HNFJquHZq!"d3a!>,RR!:p0j&]PUf'`n.2!"@EjnIYa3q#CC(`Y&7_
fDsb.!<a.V(B=pA!!*-3lk.q`!"&N&!<NhO&c`7,!6>-?%`B.`(Ae(3$H*MV&GlG-$HEeY&c`OC!4`*P
(]"pK'a=L8_[un["8i/L'(6G6&-KEB!<j4s(ZQ;3%fHA.!tW9]!"/Z)!<Wo"'%dfs$Fg'9%JCU^(]==6
$,I5P!!!>A'#FYC!!!SH(]==6%+5aW&cD\0%)ES/!9!nX'#GFg('4O;!"J-(gCXT#!<E0#%`/h[&HMq%
!6Y?B'uCaj'a4a@!"]&@`=W7a!s8N'&B#1a&eY`X"1eKX(\ALH'a4a@!5T6M%g)n6!8/"L&crUH"1eKn
(Z#r2'a4a@!5T6M%g)n6!:LQL&crUH"1eL/(W[Bq'a4a@!5T6I&,ub3!5T9L&-E$V!:g-+(BbHV"TSPR
&aU)4%g)n6!5T9L&-E$l!8IRj(BbHV"TSPh&_7Ns%g)n6!5T9L&-E%-!6,#T(BYBU"TSN&_%?e\!s8N'
a:e=^!Y>G9\cC1qmhZ*A"U+l+_%?e\!s8N'h@el^!Y>G9\cCt2fbXc+"U+l+_%?e\!s8N'oFfF^!Y>G9
\cDaH_\WFj"U+l+`=`%\!Y5A8rrBkJ!Y>G9`rP`3_&!4h"U+l+e.M*\":kS:!!'hJ!Y>G9h#Q:3_&!4h
"U+l+l4MY\":kS:!!'hJ!Y>G9o)Qi3_&!7i"U+l+&],+_%g)n6!6,ZL&crUH"1eK[(\&:E'a4a@!5T6M
%g)n6!8J4L&crUH"1eKq(Y]`/'a4a@!5T6M%g)n6!:gcL&crUH"1eL2(W@0n'a4a@!5fBQ&J5NU!rr>;
&crUH"3^c6!5THS'a4a@!8.tK&HiUH!rr>;&crUH"6'=6!5THS'a4a@!:LNK&HiUH!rr>;&crUH"8Dl6
!5THO(&nI;!5T6M%g)n6!6Z#L&crUH"1eI4'\=/f(BkNW"TSN5_@Zq^!s8N'&)n5\&crUH"1eI4'($Ld
(BkQU!WW30_@Zq_!<E0#%ep[[&crXG!P8=4!"Qg]r;Zg)aV"=\r;Zg)_%P&ol2Uhl(;gpg'`A"4#8#f*
j:MA&r;Zj'&]54]&*3f@!!*-9_\W:[r;Zj!&,$U\&HE(7!!**3_\)qSqZ+;0!#3HirYGYO"TSQ%!!!PJ
&HNCEqu?^-b7aXa!>#@B!!!AW([i.?(&It2#K.2S&,Q>,#N6<V&c`KO!!**8m2+Im!>Z%=!!!PL&HNFJ
q>^L,p_(mc!>,RF!!3--(<73k'_q_0#8##irXf,@q#CF#&]YLa&'Ft;!!!bT(BG6Sp](:)i">2c!=o;-
!!!SO&ciOGi;h=,!<j4[(B=s>!!*04pCYjd!"/H#!<WnT&c`:4!5&:4#o1W"!>>J,!!*97b7O^ao`,!s
&C_?f&c`HG!!*NEi"tet!>GS,!!*B;bn0pdo)Jdt&aL(i&c`HE!!*NEpD;L!!>GV+!!*B;cOg0g!V-3j
#lkR`&ciLD[fH+%!='Cg(BP?a!Up'i"VB/q!tc+V%.=/s"VK/q!>,da!8dbX";DU$(BG6Xm/R1h%hJ"=
l4F%-#OMKm!Y5jm&ciOKhuLdt!XBGUfbX]*%KYhp!X0)Gfb"5r$L%Nl"V;:!&ciROoDl&p!sfJS(#Kf0
().)WrW)0_!sK)E&)Rs$&.]!Hjo>Je%1s03')`FF&J#*IScAit$47C8'(lk>%13CChuEi_#6t\!%0HnA
"p*W^!sJo7%K$_$%Kd"B"p(7pJcLB&q>c*IJcP*:J,~>

%%EndBinary
grestore
np
154.44 332.878 mo
134.6 332.878 li
130.787 332.877 127.338 331.335 124.839 328.839 cv
122.34 326.342 120.796 322.895 120.795 319.083 cv
120.795 306.273 li
120.796 302.461 122.34 299.012 124.839 296.512 cv
127.339 294.013 130.787 292.469 134.6 292.468 cv
152.25 292.468 li
152.25 294.863 li
161.25 294.863 li
161.25 294.264 li
162.331 294.88 163.322 295.638 164.196 296.512 cv
166.692 299.011 168.234 302.46 168.235 306.273 cv
168.235 319.083 li
168.234 322.896 166.692 326.342 164.196 328.839 cv
161.699 331.335 158.253 332.877 154.44 332.878 cv
154.44 332.878 li
level3{
gsave
clp
[1 0 0 -1 0 551.363 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [144.52 218.11 144.52 300.43 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$3pe9#mLS6#mLS6#R(A3#6b82#6b82"p>&/"Tni,
"Tni,"9JW)"9JW)!s/N(!W`<%!W`<%!<<*"zzzzzzzzzzzzzzzzzz!<<*"!W`<%!W`<%!s/N("9JW)"9
JW)"Tni,"Tni,"p>&/#6b82#6b82#R(A3#mLS6#mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O
@"<$O@"<~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~$47+I$47+I$47+I$47+I$4."F#mgnE#mgnE#mgnE#mgnE#m^eB#RC\A#R:S>#6kA:"pP89"pG/6"U"r2
"9\i1"9\f/!s8W-!s8T+!WiB'!<E3%!<E0#zzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE*!s8W-!s
8W."9\i1"9\i1"U,&5"pP89"pP89#6tJ=#RC\A#RC\A#mgnE#mgnE#mgnE#mgnE#mgnE$47+I$47+I$4
7+I$47+I~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pG/6"U,&5"U"r2"9\i1"9\i1"9S`.!s/N*
!WiE)!WiB'!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3&!WiE)!WiE)!s8
W-"9\i1"9\i1"9\i1"U,&5"U,&5"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=~>
<~#6tJ=#6tJ=#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP89"pG/6"U,&5"U"r2"9\i1"9\i1"9S`.!s/N*
!WiE)!WiB'!<E3%!<E3%!<E0#zzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3&!WiE)!WiE)!s8
W-"9\i1"9\i1"9\i1"U,&5"U,&5"pP89"pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#6tJ=~>
0 ]
>>
144.52 218.11 144.52 300.43 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
154.44 333.253 mo
154.44 332.878 li
158.253 332.877 161.699 331.335 164.196 328.839 cv
166.692 326.342 168.234 322.896 168.235 319.083 cv
168.235 306.273 li
168.234 302.46 166.692 299.011 164.196 296.512 cv
161.699 294.013 158.252 292.469 154.44 292.468 cv
134.6 292.468 li
130.787 292.469 127.339 294.013 124.839 296.512 cv
122.34 299.012 120.796 302.461 120.795 306.273 cv
120.795 319.083 li
120.796 322.895 122.34 326.342 124.839 328.839 cv
127.338 331.335 130.787 332.877 134.6 332.878 cv
154.44 332.878 li
154.44 333.253 li
154.44 333.628 li
134.6 333.628 li
126.563 333.628 120.045 327.121 120.045 319.083 cv
120.045 306.273 li
120.045 298.236 126.563 291.718 134.6 291.718 cv
154.44 291.718 li
162.478 291.718 168.985 298.236 168.985 306.273 cv
168.985 319.083 li
168.985 327.12 162.477 333.628 154.44 333.628 cv
154.44 333.253 li
1 /0 /CSD get_res sepcs
.749 sep
f
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
130.9 316.713 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
134.58 316.713 mo
( )sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
137.3 316.713 mo
(2 3 )
[6.00052 2.98218 6.00052 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
154.9 316.713 mo
(-)sh
99.162 361.103 mo
174.28 361.103 li
174.556 361.103 174.78 361.327 174.78 361.603 cv
174.78 361.879 174.556 362.103 174.28 362.103 cv
99.162 362.103 li
98.8859 362.103 98.662 361.879 98.662 361.603 cv
98.662 361.327 98.8859 361.103 99.162 361.103 cv
174.78 361.603 mo
174.78 389.453 li
212.55 389.453 li
212.826 389.453 213.05 389.677 213.05 389.953 cv
213.05 390.229 212.826 390.453 212.55 390.453 cv
174.28 390.453 li
174.148 390.453 174.02 390.4 173.926 390.307 cv
173.833 390.213 173.78 390.085 173.78 389.953 cv
173.78 361.603 li
173.78 361.327 174.004 361.103 174.28 361.103 cv
174.556 361.103 174.78 361.327 174.78 361.603 cv
173.78 361.603 mo
173.78 333.253 li
173.78 333.121 173.833 332.993 173.926 332.9 cv
174.02 332.806 174.148 332.753 174.28 332.753 cv
212.55 332.753 li
212.826 332.753 213.05 332.977 213.05 333.253 cv
213.05 333.529 212.826 333.753 212.55 333.753 cv
174.78 333.753 li
174.78 361.603 li
174.78 361.879 174.556 362.103 174.28 362.103 cv
174.004 362.103 173.78 361.879 173.78 361.603 cv
1 /0 /CSD get_res sepcs
.749 sep
f
124.73 366.403 mo
148.718 366.403 li
148.718 356.803 li
124.73 356.803 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
130.54 363.903 mo
130.52 363.953 li
130.47 363.993 li
130.38 364.013 li
130.22 364.023 li
130.06 364.013 li
129.96 363.993 li
129.91 363.953 li
129.89 363.903 li
129.89 361.763 li
129.89 361.623 129.88 361.483 129.85 361.363 cv
129.83 361.243 129.78 361.133 129.73 361.043 cv
129.67 360.953 129.6 360.893 129.51 360.843 cv
129.42 360.793 129.32 360.773 129.2 360.773 cv
129.05 360.773 128.9 360.833 128.75 360.943 cv
128.6 361.053 128.43 361.223 128.25 361.443 cv
128.25 363.903 li
128.24 363.953 li
128.19 363.993 li
128.09 364.013 li
127.93 364.023 li
127.78 364.013 li
127.67 363.993 li
127.62 363.953 li
127.61 363.903 li
127.61 361.763 li
127.61 361.623 127.6 361.483 127.57 361.363 cv
127.54 361.243 127.5 361.133 127.44 361.043 cv
127.22 360.843 li
127.13 360.793 127.03 360.773 126.91 360.773 cv
126.76 360.773 126.61 360.833 126.46 360.943 cv
126.31 361.053 126.15 361.223 125.97 361.443 cv
125.97 363.903 li
125.95 363.953 li
125.9 363.993 li
125.81 364.013 li
125.65 364.023 li
125.49 364.013 li
125.39 363.993 li
125.34 363.953 li
125.33 363.903 li
125.33 360.393 li
125.34 360.333 li
125.38 360.293 li
125.47 360.273 li
125.62 360.263 li
125.76 360.273 li
125.85 360.293 li
125.89 360.333 li
125.91 360.393 li
125.91 360.853 li
126.11 360.633 126.3 360.473 126.48 360.363 cv
126.67 360.263 126.86 360.213 127.05 360.213 cv
127.19 360.213 127.32 360.233 127.44 360.263 cv
127.56 360.293 127.66 360.343 127.75 360.403 cv
127.97 360.623 li
128.04 360.713 128.09 360.803 128.13 360.913 cv
128.25 360.783 128.36 360.673 128.46 360.583 cv
128.57 360.493 128.67 360.423 128.77 360.373 cv
128.87 360.313 128.96 360.273 129.05 360.253 cv
129.15 360.223 129.24 360.213 129.33 360.213 cv
129.56 360.213 129.75 360.253 129.9 360.333 cv
130.06 360.413 130.18 360.513 130.28 360.653 cv
130.37 360.783 130.44 360.943 130.48 361.113 cv
130.52 361.293 130.54 361.483 130.54 361.683 cv
cp
135.09 363.903 mo
135.07 363.953 li
135.02 363.993 li
134.93 364.013 li
134.79 364.023 li
134.65 364.013 li
134.56 363.993 li
134.51 363.953 li
134.5 363.903 li
134.5 363.443 li
134.3 363.663 134.1 363.823 133.91 363.923 cv
133.71 364.023 133.51 364.073 133.31 364.073 cv
133.08 364.073 132.88 364.033 132.72 363.963 cv
132.56 363.883 132.43 363.773 132.33 363.643 cv
132.23 363.503 132.16 363.353 132.12 363.173 cv
132.08 362.993 132.06 362.773 132.06 362.523 cv
132.06 360.393 li
132.07 360.333 li
132.12 360.293 li
132.22 360.273 li
132.38 360.263 li
132.54 360.273 li
132.64 360.293 li
132.69 360.333 li
132.7 360.393 li
132.7 362.433 li
132.7 362.643 132.72 362.803 132.75 362.933 cv
132.78 363.053 132.82 363.163 132.89 363.243 cv
132.95 363.333 133.02 363.403 133.12 363.453 cv
133.21 363.493 133.32 363.523 133.45 363.523 cv
133.61 363.523 133.77 363.463 133.93 363.353 cv
134.09 363.233 134.26 363.063 134.44 362.843 cv
134.44 360.393 li
134.45 360.333 li
134.5 360.293 li
134.6 360.273 li
134.76 360.263 li
134.92 360.273 li
135.02 360.293 li
135.07 360.333 li
135.09 360.393 li
cp
137.65 363.643 mo
137.64 363.823 li
137.59 363.923 li
137.5 363.983 li
137.35 364.023 li
137.18 364.053 li
137 364.073 li
136.82 364.073 136.67 364.043 136.54 363.993 cv
136.41 363.943 136.3 363.873 136.22 363.773 cv
136.13 363.683 136.07 363.553 136.03 363.403 cv
136 363.253 135.98 363.083 135.98 362.873 cv
135.98 360.823 li
135.49 360.823 li
135.39 360.763 li
135.37 360.713 135.36 360.653 135.36 360.553 cv
135.37 360.433 li
135.39 360.343 li
135.43 360.303 li
135.49 360.283 li
135.98 360.283 li
135.98 359.453 li
135.99 359.403 li
136.04 359.363 li
136.14 359.333 li
136.3 359.323 li
136.46 359.333 li
136.56 359.363 li
136.61 359.403 li
136.62 359.453 li
136.62 360.283 li
137.52 360.283 li
137.58 360.303 li
137.62 360.343 li
137.65 360.433 li
137.65 360.553 li
137.65 360.653 137.64 360.713 137.62 360.763 cv
137.52 360.823 li
136.62 360.823 li
136.62 362.783 li
136.62 363.023 136.66 363.213 136.73 363.333 cv
136.8 363.453 136.93 363.513 137.11 363.513 cv
137.27 363.503 li
137.4 363.463 li
137.49 363.423 li
137.56 363.413 li
137.6 363.413 li
137.63 363.453 li
137.65 363.533 li
137.65 363.643 li
cp
141.47 363.913 mo
141.44 363.983 li
141.36 364.013 li
141.2 364.023 li
141.03 364.013 li
140.95 363.983 li
140.92 363.913 li
140.92 363.553 li
140.77 363.723 140.59 363.853 140.41 363.943 cv
140.22 364.033 140.02 364.073 139.81 364.073 cv
139.62 364.073 139.45 364.053 139.3 364.003 cv
139.15 363.953 139.03 363.883 138.92 363.793 cv
138.82 363.703 138.73 363.593 138.67 363.463 cv
138.62 363.323 138.59 363.173 138.59 363.003 cv
138.59 362.803 138.63 362.633 138.71 362.493 cv
138.79 362.343 138.9 362.223 139.06 362.123 cv
139.21 362.033 139.39 361.963 139.61 361.913 cv
139.83 361.863 140.08 361.833 140.35 361.833 cv
140.83 361.833 li
140.83 361.563 li
140.83 361.433 140.82 361.313 140.79 361.203 cv
140.76 361.103 140.72 361.013 140.65 360.943 cv
140.59 360.873 140.5 360.823 140.4 360.793 cv
140.3 360.753 140.18 360.733 140.03 360.733 cv
139.87 360.733 139.73 360.753 139.6 360.793 cv
139.47 360.833 139.36 360.873 139.27 360.913 cv
139.17 360.963 139.09 361.003 139.03 361.043 cv
138.89 361.103 li
138.83 361.083 li
138.79 361.033 li
138.77 360.953 li
138.76 360.853 li
138.77 360.693 li
138.84 360.583 li
138.87 360.553 138.93 360.513 139.02 360.473 cv
139.11 360.423 139.21 360.383 139.32 360.343 cv
139.43 360.303 139.55 360.273 139.68 360.253 cv
139.82 360.223 139.95 360.213 140.09 360.213 cv
140.34 360.213 140.55 360.243 140.73 360.303 cv
140.91 360.353 141.05 360.443 141.16 360.553 cv
141.27 360.663 141.35 360.803 141.4 360.963 cv
141.45 361.123 141.47 361.323 141.47 361.533 cv
cp
140.83 362.303 mo
140.28 362.303 li
140.11 362.303 139.95 362.313 139.82 362.343 cv
139.69 362.373 139.58 362.423 139.5 362.483 cv
139.31 362.693 li
139.27 362.773 139.25 362.863 139.25 362.973 cv
139.25 363.153 139.31 363.303 139.42 363.413 cv
139.54 363.523 139.7 363.573 139.91 363.573 cv
140.08 363.573 140.23 363.533 140.38 363.443 cv
140.52 363.353 140.67 363.223 140.83 363.053 cv
cp
145.6 363.903 mo
145.59 363.953 li
145.54 363.993 li
145.44 364.013 li
145.28 364.023 li
145.12 364.013 li
145.02 363.993 li
144.97 363.953 li
144.96 363.903 li
144.96 361.843 li
144.96 361.643 144.94 361.483 144.91 361.363 cv
144.88 361.243 144.83 361.133 144.77 361.043 cv
144.71 360.953 144.64 360.893 144.54 360.843 cv
144.45 360.793 144.34 360.773 144.21 360.773 cv
144.05 360.773 143.89 360.833 143.73 360.943 cv
143.57 361.053 143.4 361.223 143.22 361.443 cv
143.22 363.903 li
143.2 363.953 li
143.15 363.993 li
143.06 364.013 li
142.9 364.023 li
142.74 364.013 li
142.64 363.993 li
142.59 363.953 li
142.58 363.903 li
142.58 360.393 li
142.59 360.333 li
142.63 360.293 li
142.72 360.273 li
142.87 360.263 li
143.01 360.273 li
143.1 360.293 li
143.14 360.333 li
143.16 360.393 li
143.16 360.853 li
143.36 360.633 143.55 360.473 143.75 360.363 cv
143.95 360.263 144.14 360.213 144.34 360.213 cv
144.58 360.213 144.78 360.253 144.94 360.333 cv
145.1 360.413 145.23 360.513 145.33 360.653 cv
145.42 360.783 145.5 360.943 145.54 361.113 cv
145.58 361.293 145.6 361.513 145.6 361.763 cv
cp
148.15 363.643 mo
148.14 363.823 li
148.09 363.923 li
148 363.983 li
147.85 364.023 li
147.68 364.053 li
147.5 364.073 li
147.32 364.073 147.17 364.043 147.04 363.993 cv
146.91 363.943 146.8 363.873 146.72 363.773 cv
146.63 363.683 146.57 363.553 146.53 363.403 cv
146.5 363.253 146.48 363.083 146.48 362.873 cv
146.48 360.823 li
145.99 360.823 li
145.89 360.763 li
145.87 360.713 145.86 360.653 145.86 360.553 cv
145.87 360.433 li
145.89 360.343 li
145.93 360.303 li
145.99 360.283 li
146.48 360.283 li
146.48 359.453 li
146.49 359.403 li
146.54 359.363 li
146.64 359.333 li
146.8 359.323 li
146.96 359.333 li
147.06 359.363 li
147.11 359.403 li
147.12 359.453 li
147.12 360.283 li
148.02 360.283 li
148.08 360.303 li
148.12 360.343 li
148.15 360.433 li
148.15 360.553 li
148.15 360.653 148.14 360.713 148.12 360.763 cv
148.02 360.823 li
147.12 360.823 li
147.12 362.783 li
147.12 363.023 147.16 363.213 147.23 363.333 cv
147.3 363.453 147.43 363.513 147.61 363.513 cv
147.77 363.503 li
147.9 363.463 li
147.99 363.423 li
148.06 363.413 li
148.1 363.413 li
148.13 363.453 li
148.15 363.533 li
148.15 363.643 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
99.162 474.488 mo
179.95 474.488 li
180.226 474.488 180.45 474.712 180.45 474.988 cv
180.45 475.264 180.226 475.488 179.95 475.488 cv
99.162 475.488 li
98.8859 475.488 98.662 475.264 98.662 474.988 cv
98.662 474.712 98.8859 474.488 99.162 474.488 cv
180.45 474.988 mo
180.45 502.834 li
212.55 502.834 li
212.826 502.834 213.05 503.058 213.05 503.334 cv
213.05 503.61 212.826 503.834 212.55 503.834 cv
179.95 503.834 li
179.818 503.834 179.689 503.781 179.596 503.688 cv
179.503 503.594 179.45 503.466 179.45 503.334 cv
179.45 474.988 li
179.45 474.712 179.674 474.488 179.95 474.488 cv
180.226 474.488 180.45 474.712 180.45 474.988 cv
179.45 474.988 mo
179.45 446.643 li
179.45 446.511 179.503 446.383 179.596 446.289 cv
179.689 446.196 179.818 446.143 179.95 446.143 cv
212.55 446.143 li
212.826 446.143 213.05 446.367 213.05 446.643 cv
213.05 446.919 212.826 447.143 212.55 447.143 cv
180.45 447.143 li
180.45 474.988 li
180.45 475.264 180.226 475.488 179.95 475.488 cv
179.674 475.488 179.45 475.264 179.45 474.988 cv
1 /0 /CSD get_res sepcs
.749 sep
f
127.56 479.788 mo
151.548 479.788 li
151.548 470.188 li
127.56 470.188 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
133.37 477.29 mo
133.36 477.343 li
133.31 477.38 li
133.21 477.403 li
133.05 477.411 li
132.89 477.403 li
132.79 477.38 li
132.74 477.343 li
132.73 477.29 li
132.73 475.153 li
132.73 475.005 132.71 474.869 132.69 474.747 cv
132.66 474.625 132.62 474.519 132.56 474.431 cv
132.34 474.227 li
132.26 474.181 132.15 474.157 132.03 474.157 cv
131.88 474.157 131.73 474.214 131.58 474.329 cv
131.43 474.444 131.27 474.612 131.09 474.833 cv
131.09 477.29 li
131.07 477.343 li
131.02 477.38 li
130.92 477.403 li
130.77 477.411 li
130.61 477.403 li
130.51 477.38 li
130.46 477.343 li
130.45 477.29 li
130.45 475.153 li
130.45 475.005 130.43 474.869 130.4 474.747 cv
130.37 474.625 130.33 474.519 130.27 474.431 cv
130.06 474.227 li
129.97 474.181 129.87 474.157 129.75 474.157 cv
129.6 474.157 129.45 474.214 129.3 474.329 cv
129.15 474.444 128.98 474.612 128.8 474.833 cv
128.8 477.29 li
128.79 477.343 li
128.74 477.38 li
128.64 477.403 li
128.48 477.411 li
128.32 477.403 li
128.22 477.38 li
128.17 477.343 li
128.16 477.29 li
128.16 473.774 li
128.17 473.722 li
128.22 473.683 li
128.31 473.659 li
128.45 473.653 li
128.6 473.659 li
128.68 473.683 li
128.73 473.722 li
128.74 473.774 li
128.74 474.239 li
128.94 474.018 129.13 473.856 129.32 473.753 cv
129.5 473.65 129.69 473.599 129.88 473.599 cv
130.03 473.599 130.16 473.615 130.28 473.649 cv
130.39 473.683 130.49 473.731 130.58 473.792 cv
130.81 474.011 li
130.87 474.095 130.92 474.19 130.96 474.294 cv
131.08 474.166 131.19 474.058 131.3 473.97 cv
131.4 473.881 131.51 473.809 131.6 473.755 cv
131.7 473.7 131.8 473.66 131.89 473.636 cv
131.98 473.611 132.07 473.599 132.17 473.599 cv
132.39 473.599 132.58 473.638 132.74 473.718 cv
132.89 473.797 133.02 473.903 133.11 474.036 cv
133.21 474.169 133.27 474.324 133.31 474.503 cv
133.35 474.681 133.37 474.869 133.37 475.067 cv
cp
137.92 477.29 mo
137.91 477.343 li
137.86 477.38 li
137.77 477.403 li
137.63 477.411 li
137.48 477.403 li
137.39 477.38 li
137.35 477.343 li
137.34 477.29 li
137.34 476.825 li
137.14 477.046 136.94 477.208 136.74 477.309 cv
136.55 477.411 136.35 477.462 136.15 477.462 cv
135.91 477.462 135.72 477.423 135.56 477.345 cv
135.4 477.266 135.27 477.16 135.17 477.026 cv
135.07 476.892 135 476.736 134.95 476.558 cv
134.91 476.379 134.89 476.162 134.89 475.907 cv
134.89 473.774 li
134.9 473.722 li
134.96 473.683 li
135.06 473.659 li
135.21 473.653 li
135.37 473.659 li
135.47 473.683 li
135.52 473.722 li
135.54 473.774 li
135.54 475.821 li
135.54 476.027 135.55 476.192 135.58 476.315 cv
135.61 476.439 135.66 476.544 135.72 476.632 cv
135.95 476.835 li
136.05 476.883 136.16 476.907 136.28 476.907 cv
136.44 476.907 136.6 476.85 136.76 476.735 cv
136.92 476.621 137.09 476.453 137.27 476.231 cv
137.27 473.774 li
137.29 473.722 li
137.34 473.683 li
137.44 473.659 li
137.6 473.653 li
137.75 473.659 li
137.85 473.683 li
137.9 473.722 li
137.92 473.774 li
cp
140.49 477.032 mo
140.47 477.212 li
140.43 477.309 li
140.33 477.368 li
140.19 477.413 li
140.02 477.442 li
139.84 477.454 li
139.66 477.454 139.5 477.43 139.37 477.382 cv
139.24 477.334 139.13 477.261 139.05 477.163 cv
138.97 477.065 138.91 476.942 138.87 476.792 cv
138.83 476.642 138.81 476.466 138.81 476.263 cv
138.81 474.208 li
138.32 474.208 li
138.23 474.145 li
138.2 474.104 138.19 474.036 138.19 473.942 cv
138.2 473.817 li
138.23 473.733 li
138.27 473.686 li
138.32 473.673 li
138.81 473.673 li
138.81 472.837 li
138.83 472.786 li
138.88 472.745 li
138.98 472.72 li
139.13 472.712 li
139.29 472.72 li
139.39 472.745 li
139.44 472.786 li
139.46 472.837 li
139.46 473.673 li
140.36 473.673 li
140.41 473.686 li
140.45 473.733 li
140.48 473.817 li
140.49 473.942 li
140.49 474.036 140.48 474.104 140.45 474.145 cv
140.36 474.208 li
139.46 474.208 li
139.46 476.169 li
139.46 476.411 139.49 476.594 139.56 476.718 cv
139.64 476.841 139.76 476.903 139.95 476.903 cv
140.11 476.886 li
140.23 476.849 li
140.33 476.811 li
140.4 476.794 li
140.44 476.804 li
140.46 476.841 li
140.48 476.915 li
140.49 477.032 li
cp
144.31 477.294 mo
144.28 477.364 li
144.19 477.399 li
144.03 477.411 li
143.87 477.399 li
143.78 477.364 li
143.75 477.294 li
143.75 476.942 li
143.6 477.106 143.43 477.234 143.24 477.325 cv
143.05 477.416 142.85 477.462 142.64 477.462 cv
142.46 477.462 142.29 477.438 142.14 477.39 cv
141.99 477.341 141.86 477.272 141.76 477.181 cv
141.65 477.089 141.57 476.977 141.51 476.845 cv
141.45 476.712 141.42 476.561 141.42 476.391 cv
141.42 476.194 141.46 476.022 141.54 475.876 cv
141.62 475.73 141.74 475.609 141.89 475.513 cv
142.04 475.416 142.23 475.344 142.45 475.296 cv
142.66 475.248 142.91 475.224 143.18 475.224 cv
143.67 475.224 li
143.67 474.95 li
143.67 474.815 143.65 474.695 143.62 474.591 cv
143.6 474.487 143.55 474.4 143.49 474.331 cv
143.42 474.262 143.34 474.21 143.24 474.175 cv
143.14 474.14 143.01 474.122 142.86 474.122 cv
142.7 474.122 142.56 474.141 142.44 474.179 cv
142.31 474.216 142.2 474.258 142.1 474.304 cv
142.01 474.349 141.93 474.391 141.87 474.429 cv
141.72 474.485 li
141.67 474.47 li
141.63 474.423 li
141.6 474.343 li
141.59 474.235 li
141.61 474.081 li
141.67 473.974 li
141.86 473.854 li
141.94 473.809 142.04 473.767 142.15 473.729 cv
142.26 473.692 142.39 473.66 142.52 473.636 cv
142.65 473.611 142.79 473.599 142.92 473.599 cv
143.17 473.599 143.39 473.627 143.57 473.684 cv
143.74 473.742 143.89 473.826 144 473.936 cv
144.11 474.047 144.18 474.184 144.23 474.349 cv
144.28 474.513 144.31 474.704 144.31 474.923 cv
cp
143.67 475.688 mo
143.12 475.688 li
142.94 475.688 142.79 475.703 142.66 475.733 cv
142.53 475.763 142.42 475.808 142.33 475.866 cv
142.14 476.077 li
142.1 476.159 142.08 476.253 142.08 476.36 cv
142.08 476.543 142.14 476.688 142.26 476.796 cv
142.37 476.904 142.53 476.958 142.74 476.958 cv
142.91 476.958 143.07 476.915 143.21 476.829 cv
143.36 476.743 143.51 476.612 143.67 476.434 cv
cp
148.44 477.29 mo
148.42 477.343 li
148.37 477.38 li
148.27 477.403 li
148.12 477.411 li
147.96 477.403 li
147.86 477.38 li
147.81 477.343 li
147.79 477.29 li
147.79 475.231 li
147.79 475.031 147.78 474.869 147.75 474.747 cv
147.71 474.625 147.67 474.519 147.61 474.431 cv
147.38 474.227 li
147.28 474.181 147.17 474.157 147.05 474.157 cv
146.89 474.157 146.72 474.214 146.56 474.329 cv
146.4 474.444 146.23 474.612 146.05 474.833 cv
146.05 477.29 li
146.04 477.343 li
145.99 477.38 li
145.89 477.403 li
145.73 477.411 li
145.57 477.403 li
145.47 477.38 li
145.42 477.343 li
145.41 477.29 li
145.41 473.774 li
145.42 473.722 li
145.47 473.683 li
145.56 473.659 li
145.7 473.653 li
145.85 473.659 li
145.93 473.683 li
145.98 473.722 li
145.99 473.774 li
145.99 474.239 li
146.19 474.018 146.39 473.856 146.58 473.753 cv
146.78 473.65 146.98 473.599 147.18 473.599 cv
147.41 473.599 147.61 473.638 147.77 473.718 cv
147.93 473.797 148.06 473.903 148.16 474.036 cv
148.26 474.169 148.33 474.324 148.37 474.503 cv
148.42 474.681 148.44 474.895 148.44 475.145 cv
cp
150.99 477.032 mo
150.97 477.212 li
150.93 477.309 li
150.83 477.368 li
150.69 477.413 li
150.52 477.442 li
150.34 477.454 li
150.16 477.454 150 477.43 149.87 477.382 cv
149.74 477.334 149.63 477.261 149.55 477.163 cv
149.47 477.065 149.41 476.942 149.37 476.792 cv
149.33 476.642 149.31 476.466 149.31 476.263 cv
149.31 474.208 li
148.82 474.208 li
148.73 474.145 li
148.7 474.104 148.69 474.036 148.69 473.942 cv
148.7 473.817 li
148.73 473.733 li
148.77 473.686 li
148.82 473.673 li
149.31 473.673 li
149.31 472.837 li
149.33 472.786 li
149.38 472.745 li
149.48 472.72 li
149.63 472.712 li
149.79 472.72 li
149.89 472.745 li
149.94 472.786 li
149.96 472.837 li
149.96 473.673 li
150.86 473.673 li
150.91 473.686 li
150.95 473.733 li
150.98 473.817 li
150.99 473.942 li
150.99 474.036 150.98 474.104 150.95 474.145 cv
150.86 474.208 li
149.96 474.208 li
149.96 476.169 li
149.96 476.411 149.99 476.594 150.06 476.718 cv
150.14 476.841 150.26 476.903 150.45 476.903 cv
150.61 476.886 li
150.73 476.849 li
150.83 476.811 li
150.9 476.794 li
150.94 476.804 li
150.96 476.841 li
150.98 476.915 li
150.99 477.032 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
1 lw
144.52 333.253 mo
161.3 357.233 li
1 /0 /CSD get_res sepcs
.749 sep
@
164.36 361.603 mo
157.44 357.853 li
159.89 357.493 162.03 355.993 163.21 353.813 cv
164.36 361.603 li
cp
ef
144.52 333.253 mo
124.05 469.718 li
@
123.26 474.988 mo
127.78 468.548 li
125.43 469.315 122.85 468.928 120.82 467.503 cv
123.26 474.988 li
cp
ef
369.87 418.293 mo
310.34 418.293 li
310.34 418.293 mo
310.34 333.253 li
260.74 333.253 li
310.34 418.293 mo
310.34 503.334 li
260.74 503.334 li
310.34 418.293 mo
310.34 389.953 li
260.74 389.953 li
310.34 418.293 mo
310.34 446.643 li
260.74 446.643 li
310.34 418.293 mo
324.52 418.293 li
310.34 418.293 mo
324.52 418.293 li
@
324.5 423.093 mo
355.722 423.093 li
355.722 413.493 li
324.5 413.493 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [8.25 0 0 -8.25 0 0 ]msf
325 421.283 mo
(compress)
[3.74554 3.75369 6.7402 3.75369 2.99475 3.75375 3.00305 0 ]xsh
362.78 417.793 mo
378.37 417.793 li
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.569 378.646 418.793 378.37 418.793 cv
362.78 418.793 li
362.504 418.793 362.28 418.569 362.28 418.293 cv
362.28 418.017 362.504 417.793 362.78 417.793 cv
378.87 418.293 mo
378.87 459.634 li
386.88 459.634 li
387.156 459.634 387.38 459.858 387.38 460.134 cv
387.38 460.41 387.156 460.634 386.88 460.634 cv
378.37 460.634 li
378.238 460.634 378.11 460.581 378.016 460.488 cv
377.923 460.395 377.87 460.266 377.87 460.134 cv
377.87 418.293 li
377.87 418.017 378.094 417.793 378.37 417.793 cv
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.293 li
377.87 418.293 mo
377.87 375.093 li
377.87 374.961 377.923 374.833 378.016 374.739 cv
378.11 374.646 378.238 374.593 378.37 374.593 cv
386.88 374.593 li
387.156 374.593 387.38 374.817 387.38 375.093 cv
387.38 375.369 387.156 375.593 386.88 375.593 cv
378.87 375.593 li
378.87 418.293 li
378.87 418.569 378.646 418.793 378.37 418.793 cv
378.094 418.793 377.87 418.569 377.87 418.293 cv
378.87 418.293 mo
378.87 459.634 li
386.88 459.634 li
387.156 459.634 387.38 459.858 387.38 460.134 cv
387.38 460.41 387.156 460.634 386.88 460.634 cv
378.37 460.634 li
378.238 460.634 378.11 460.581 378.016 460.488 cv
377.923 460.395 377.87 460.266 377.87 460.134 cv
377.87 418.293 li
377.87 418.017 378.094 417.793 378.37 417.793 cv
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.293 li
378.37 418.793 mo
369.87 418.793 li
369.594 418.793 369.37 418.569 369.37 418.293 cv
369.37 418.017 369.594 417.793 369.87 417.793 cv
378.37 417.793 li
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.569 378.646 418.793 378.37 418.793 cv
378.37 418.793 mo
364.2 418.793 li
363.924 418.793 363.7 418.569 363.7 418.293 cv
363.7 418.017 363.924 417.793 364.2 417.793 cv
378.37 417.793 li
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.569 378.646 418.793 378.37 418.793 cv
378.37 418.793 mo
364.2 418.793 li
363.924 418.793 363.7 418.569 363.7 418.293 cv
363.7 418.017 363.924 417.793 364.2 417.793 cv
378.37 417.793 li
378.646 417.793 378.87 418.017 378.87 418.293 cv
378.87 418.569 378.646 418.793 378.37 418.793 cv
1 /0 /CSD get_res sepcs
.749 sep
f
gsave
438 398.363 mo
387 398.363 li
387 375.579 li
387.218 375.525 387.38 375.328 387.38 375.093 cv
387.38 374.858 387.218 374.661 387 374.607 cv
387 354.863 li
438 354.863 li
438 398.363 li
clp
387 354.863 mo
438 354.863 li
438 398.363 li
387 398.363 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[52.5 0 0 45 372.82 136.68 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 70 
/H 60 
/M[70 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&]`83:#RV.V'^$88'+tla#O;B_!!EH1$k3a1&HiRQ$jQsn!!EH1%1Wp3&d/^T%0m(3!2TYt
#S@jgiYVS1!u2Ua#iu$g"UktSh[or$&I\j)!!<B6&eXRFnIbp8&e,#<!!3B?(ASd*(BP?d"mH!g"V20t
&HWLS"7#pi!!!06&_Rcu&J"uL!;$6m!YcC"(BP<a!UTjg!=o^n&cN@C%h7k*!W`fCeIhlo%a>".!!*9=
d2)fu"n)El":su6iXl2%"7H3j";&rn!>#@t!5\^:$5Ll'!>Pq8!;c`s#7o,m!=oD)!!*<9ck6Bm&-f39
!=9Os(\/@C('jF2!<s+[&HNFHo)Jdq&a9qi&ciRJXoJJ+(%iBp(BG6So`,!p&'GOc%g2J)!!<34b7Xge
"1nR,!!*-8aVOsl!quZq!>!]moaq38!VZQp!>!9b!=o4^!8IPS&]Y[f&bc8*%.4_]&HE76!!!JK&c`C1
!5ed;"Vo&o!>Pe;!;lft!tWEa!=o;.!!*05cP$$d!>#@>!!!_f([Dk;'_q_/&&f+\&,?2*&*OY_&c`HL
!!*6<obZ!l!>Pe8!!*04`=W+]"9&<"!!*05`=`1_"2t91!!!JG(B=pA!!!>Y&aL#/$2X]&$,[AU$/Ya7
!!!bO(B>3I!!!Q$&^_0j&,Q>,&Ao+\&GZ=?!!*3;`u"[j!>Pb9!!*-3_[un[!rW*"!YEion.Ga5!k/.1
#8Q26ith_2#Q4W'"V8K_!=oA4!!*67mLn(`!>#FD!!!?%(W[Bm$2ji(#/LlO#5nN%#/LoP#0?l6!!!AB
(B=g@!!!8Y&a'`+#Q4W&#Jh#Q#NGg7!!!MF(B=sD!!!B!&^:mf$N0r)$Gd>T$N0t:!!!MN(\njI%fHA-
$Gd;S$N0r)$J#jV&c`9J!!!Mh(Z-#/%fHA-$Gd;S$N0r)$Le\V&c`9J!!!N-(W@0j%fHA-$H*PU&HE1:
!!!AB&c`9_!:0[c%`&q]%fHA-$JlBU&HE1:!!!AB&c`:$!7CiI%`&q]%fHA-$MY4U&HE1:!!!AB&ci=>
\,ZL=bSTsh!"Sr-!"-OS!"/Z)!".Blkn3t'[f?C<jqleh!"Sr-!"-OS!"/Z)!"/<1cOp3b\Gu[2!"Qg]
!"Sr-!"-m]pCRB4r;Zg)_%H_TdfAJ0!"Qg]!"Sr-!".g"h%9Vor;Zg)_%H_Tm/Y<0!"Qg]!"Sr-!X]MO
_[ukUr;Zg)`Y/1^!"-18!"RHomhYs6r;Zg)_%?YSr;Zg)i"G#^!"-18!"SB4eJA2qr;Zg)_%?YSr;Zg)
q@^j^!"-@=qu?^,_&!(]r;Zg)c4T[\!"/Z)!"-OT!".9WiW&rg_&!(]r;Zg)kRlM\!"/Z)!"-OT!"/2q
a8c2M_&!(]r;Zg)_%?YSr;Zg)aV+C^!"-18!"RQrlk]X3r;Zg)_%?YSr;Zg)itC5^!"-18!"SK7dMDln
r;Zg)_%?YSr;Zg)r=['^!"-I@q#CC%_&!(Yr;Zg&d1Pm\!!iH&!!g=Q!!h0WhZ*W__&!(Xr;Zg%lOh_\
!!`B%!!^7P!!`#p`;foD'uLgh'aFa<!!*66_[un["oSE%"VAokpC[K<"h+I4";TW,l5'I9"T8<$!Y<0\
!=o81!!*-4k7ZS`!>#=@!!!c+(XNru(&It2&&StZ&,lS.!!!SJ&c`K^!:^$h%Drt^%Jp,*$/#pV&HE.7
!!!>C&c`6q!7q2O"Vnum!>Pe8!!*04oF]L`!=o;0!!*05`=`1_"8Mr0!!!_S(]G3N'_q_/&&f+\&,?2*
&(M<_&c`HK!!*6<itpen!>Pe6!!*04`t8=_"8Mot!tar7fFe2r"0qn,&cENh(B>'A!!!GJ&HW@@!;QTp
%EB(]%E8D7!!*-9aVOsm!quZq!>"'"lOa..!VZQp!>*?c!>#:i!7:cI"r5;t!>Pe2!!*35q@V-f!=o;*
!!*36b7Xge"8Mr*!!*EAcPH["(D[>K!!*<8bn0sf#4hfq#8#Z'ne(s8#-7e*%2S4Fjqe%5$Ln)s#nYDp
!=oG*!!*B<pCc-l!>#L;!!<3$#8PW&!>Yn.!!*66d1HBj"TADl!!*67d1QHl"N:B%!!3<=(=a3&()-o=
!!365&Ej_o&HWLS!posh!tZ'p&crXU!o<pu!!*EAfG=T)'aj1*!='.f&HWLS#O)3h#8#N#!YGtKp&M2p
!s&cE(#9Z-'bguT!Tj@`#S.I%&HWIR#NYpe#S7R1')*"?&.]#:!!E?1&eYrS([`(B'bV,c!oX+^!='&C
&*4B+%h/sP!T="Y!<WQ:%M7_7":u%Q"p(b)JcLB&JcLB&blE7~>

%%EndBinary
grestore
np
grestore
387 375.579 mo
387 374.607 li
387.218 374.661 387.38 374.858 387.38 375.093 cv
387.38 375.328 387.218 375.525 387 375.579 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[2.25 0 0 3 372.82 159.18 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~ZEfe%ZBhf%QEmf^~>
<~U8!45U4K&5JYJli~>
<~T:^Y+T7EQ+J=iHa~>
<~S!u+$RkU>$0UnOc~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
420.89 395.673 mo
428.72 395.673 435.07 389.333 435.07 381.503 cv
435.07 368.693 li
435.07 360.863 428.72 354.513 420.89 354.513 cv
401.05 354.513 li
393.22 354.513 386.88 360.863 386.88 368.693 cv
386.88 381.503 li
386.88 389.333 393.22 395.673 401.05 395.673 cv
420.89 395.673 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [410.97 114.53 410.97 196.85 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /11 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
410.97 114.53 410.97 196.85 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/11 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
.75075 lw
420.89 395.673 mo
428.72 395.673 435.07 389.333 435.07 381.503 cv
435.07 368.693 li
435.07 360.863 428.72 354.513 420.89 354.513 cv
401.05 354.513 li
393.22 354.513 386.88 360.863 386.88 368.693 cv
386.88 381.503 li
386.88 389.333 393.22 395.673 401.05 395.673 cv
420.89 395.673 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
397.78 379.213 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
401.45 379.213 mo
( )sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
404.15 379.213 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
407.85 379.213 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
410.55 379.213 mo
(3 1)
[6.02457 2.98218 0 ]xsh
438 483.113 mo
387 483.113 li
387 460.619 li
387.218 460.566 387.38 460.369 387.38 460.134 cv
387.38 460.134 li
387.38 460.134 li
387.38 459.899 387.218 459.702 387 459.649 cv
387 439.613 li
438 439.613 li
438 483.113 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[52.5 0 0 45 372.82 51.9297 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 70 
/H 60 
/M[70 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&])Vm9"UO2s!XJr5l2^GV!WrN.jTbhj!s@?Z!WrN.jTbhj!sA8tV#U]##S7ad'c,mI"Vqgf
(D$i3!!NN7&.]9_jUhY-%hB6\"lfRd"UktS&/"IGoF_<>&.fH_"eYht!=KYYqA8--!YlIYk5YPh&.mS.
!Y5hJl2^e`!XKAMgCaQ!&I>WAo)Jh!'c,C;!YuLVlMptk%hRD+";)4W%gD8!!XB8Kf+J,s&-^;YgAh9U
&Jih3!>Q15!!*K>nIadn!=oV+!!*N@dh2Zm%-R].!!*-8cPHTr!qu]l!!**2cOg0g!V$-j!>!Ni!YQ"E
X8i8&(#0Vr(BG3Oo)Jdl&'Y[e%fu8%!<Ebr''0`,%frg5!<Er.(Y9H('ERh+!"[6b!"\Z$!"d<d!"ZX@
o`,"*(<REn&bQ,)%1q)&oaq04o`,"&&]t^d%FkI6!!*EBaVOsn$MON$#8$>9gCXGt#PS3!#8,&j!>,S+
!5ed;!>WWk!>PY7!;c`r&'#7^&,-&(&C2!b&c`KK!!!J_([Dk;%J]u($,mJV$2FQ$$0W#Y&c`6F!!**8
obZ!l!>PY3!!!PK&HE@?!;ult&B,7^&B"S=!!!>C(B=d=!!!5V&aL#/#5\B##/_&R#2]F4!!!YL(B>*F
!!!K"&^_0j%Jp,*%`8nZ%f$+=!!**9`u"[j!>Y_6!!!SJ&HEC>!!!V\'(?M6&[hZ?"Vou4ith_2"oSE%
!tW9]!=o;2!!*05mLn(`!>#@B!!*?@q\R?j!>Yt>!!*67_[uk[!!W<$!<j(Q&ciRJaT1c0!"-OY!"/Z)
!!h6jk7I\!r;Zg&_%H_QirIU0!"Ha\!"Jl,!"&<1bn0p^r;Zg(_%H_Sr;aG0!"R*eq%j#@r;Zg)_%?YS
r;Zg)ee7<^!"-18!"S$*h\Q8&r;Zg)_%?YSr;Zg)n.O.^!"-18!"SrD`>8Lar;Zg)`"Dt\!"/Z)!"-OT
!"-pMli7"q_&!(]r;Zg)h@\f\!"/Z)!"-OT!".igdJs7W_&!(]r;Zg)p^tX\!"/Z)!"-OT!=Ah:!!!MQ
(\SXF%fHA-$Gd;S$N0r)$J?'V&c`9J!!!Mk(Yff,%fHA-$Gd;S$N0r)$M+nV&c`9L!!3-#%`&q]%fHA-
$Hj%U&HE1:!!!AB&c`9f!9F1\%`&q]%fHA-$KVlU&HE1:!!!AB&c`:+!6Y?B%`&q]%fHA/$5!lf&HE1:
!!!AG')W@B$F^!8%au6_(B=sD!!!AB&HE1:!!!Aa'&jN($F^!8%db(_(B=sD!!!AB&HE1:!!!B&'$([c
$G6B:!!!MF(B=sD!!!AO&bHY8$N0r)$Gd>T$J#4:!!!MF(B=sD!!!Ai&_[fs$N0r)$Gd>T$Le&:!!!MF
(B=sD!!!AB&HE1:!!!AJ')<.?$F^!8%b;H_(B=sD!!!AB&HE1:!!!Ad'&O<%$F^!8%e(:_(B=sD!!!AB
&HE1:!!!B)'#bI`$GQT:!!!JE(B=pC!!!>Q&b-G5$2ji($,I5S$/#=9!!!AB(B=g@!!!8i&_@Tp#Q4W&
#Jh#Q#P.r7!!*?@_\W@i#QXi(!<j%P&HNFHr;Zj%&^:s_&ciRJ[f?F4("sJh(BG6Sr;Zj#&&St[%g2b1
!<Wnr'&=0$&-KBA!<Eu.(XNs!('4=5!"d$[!"f,0rVup1_\)q]`;oE.!"m*b!"o).!"@NmlOa+*qZ$U*
_\)qYhZ27.!=0I[(BG9WqZ$X#&G-R_&HNFHqZ$X#&]G@`&I%t1]`8'6(!%3j(BG6Oq>^L+`=W(\q#CC+
eIqBb!"cI:!=]h)(ZcG6((L'>!=9=X&HNFLq#CF%&b$Fc&ciRNZ2ak>r>3Wn!#>5.!"[*^!Y582q#CC+
`tA@``W5?*!=0I_(BG9WpAb3t&Dn)c&HNFHpAb3t&]kXd&I%(md/X.WaVOpeo`+t"q%;!d!"/B!!"6m]
!"/N%[K$:@c56Hr!#"l'!"R0a!"JN"!"[fsnIbg3XT/A''^6Fq(BG0Mo)Jdl&'Y[d%e9T#!>"l:fFe/p
X8i;%!>Efr!Yu@Kn,NFuck-9i%/p7t!!!PV&ciRR`;ns!!=fjn(BG6Ym/R.o&*FPl&HNCJm/R.o&CV6m
&.%+maT)AG'Gf::!YlCQlMpne!=oan&HWIR"7#pg!tQ!q&crUT"8;et!!3E@(#'Q)'`\L%!!3<7&).Zt
%hAj,!!3<8&EXW!&crUU"ePbs"Uu1_p(cp/!uDXY"QKIa!soJMi=?#&%gN0r!!*0.!>#n&&-EOU#6Lt,
mJm4iiroDcgAh3Tir]8_qZ,RT!!;0_!!:";e,TIOiroDcgAh3Tp&j^b!!:mT!!;0_!!:pUblE7~>

%%EndBinary
grestore
np
387 460.619 mo
387 459.649 li
387.218 459.702 387.38 459.899 387.38 460.134 cv
387.38 460.134 li
387.38 460.134 li
387.38 460.369 387.218 460.566 387 460.619 cv
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[2.25 0 0 2.25 372.82 74.4297 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~ZEfe%ZBhf%Q2~>
<~U8!45U4K&5JH~>
<~T:^Y+T7EQ+J,~>
<~S!u+$RkU>$0E~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
420.89 480.714 mo
428.72 480.714 435.07 474.368 435.07 466.54 cv
435.07 453.728 li
435.07 445.903 428.72 439.553 420.89 439.553 cv
401.05 439.553 li
393.22 439.553 386.88 445.903 386.88 453.728 cv
386.88 466.54 li
386.88 474.368 393.22 480.714 401.05 480.714 cv
420.89 480.714 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [410.97 29.49 410.97 111.81 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /12 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
410.97 29.49 410.97 111.81 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/12 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
420.89 480.714 mo
428.72 480.714 435.07 474.368 435.07 466.54 cv
435.07 453.728 li
435.07 445.903 428.72 439.553 420.89 439.553 cv
401.05 439.553 li
393.22 439.553 386.88 445.903 386.88 453.728 cv
386.88 466.54 li
386.88 474.368 393.22 480.714 401.05 480.714 cv
420.89 480.714 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
396.55 464.388 mo
(2 2 )
[6.02405 2.98798 6.02405 0 ]xsh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
414.17 464.388 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
417.85 464.388 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
420.58 464.388 mo
(1)sh
102 384.863 mo
51 384.863 li
51 341.363 li
102 341.363 li
102 361.103 li
99.162 361.103 li
98.8859 361.103 98.662 361.327 98.662 361.603 cv
98.662 361.879 98.8859 362.103 99.162 362.103 cv
102 362.103 li
102 384.863 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[52.5 0 0 45 36.8198 150.18 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 70 
/H 60 
/M[70 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&]Dr'>$4mg`k8+:9&ePHV!UKgZ!!EH1$k3^0&HiUR$jQsn!!EH1$k<g2&d/^T%0m(3!2TYt
#S@geiYVS1!u;[c#iu$g"UkqQh[or%&Iep*!!<B6&J4CDnIbp9&e5)=!!3<<(ASd*(BP?e#jD<j!tPsr
&HWLS"mZ-k!!!*3&_Rcu&J,,O!;$6m!>6-t(BP?d!pfmf%1h)'rXf2C%fu"s!=f[k&crXU!R:]"!!*6<
d2)fu#4DNm!tXl5iXl2%"Rc<k!t`im!>#Cu!5\^:#o1c&!>Pt9!;c`s"qT#l!=oG*!!*98ck6Bm&-o9:
!<s:o(\/@C'ajO4!<`qX&HNCIo)Jdo&Eshh&ciOKXoJJ((%iBp(BG6To`,!n&'GOc%g;P*!!*'2b7Xge
"M4[-!!**7aVOsn"SMfq&(M9b&HNFEp&G('aV"Ud!nIA,!!!JK(B>0D!!!>n&_[fs&,-&($-*YY&+BS:
!!*-9`tnal#Q=`$!!**2`t8=`"o/-!!>*Qiq%<]?"g\1/&_e,f(B>3G!!!GH&HE@;!!!Jl'&F6$&@;E<
!Z(GFd2)g!#l=T&!>*3^!>#G6!<)s!!>39`!>,LS!:^$h$,[PZ&c2P.#2'US&HE7:!!!5@&c`Bu!7q2N
'#PLc(Ae(3%J(1Z&HEC>!!!MH&c`O>!58F5!QGrS(BG6SquFSG!=o;1!7MSM&ciOG[f?F4(#]tg(B=d?
!!*04_@ZbPr;Zj#&FL1]&c`-F!!*6<q\R<i!"Jl,!<WkL&HE.9!!*05_@chTaT1c0!=0IX(B>$F!!*67
g_&]]!"Af+!<j(P&c`@#!7_&L$GdMY')_e1#PA\R&HE:=!!!8?&c`F?!4r42$HX+[(B>*H!!!8?&HE:=
!!!8T''p52%^uE<$KDr[(B>*H!!!8?&HE:=!!!8n'%.Bm%^uE<$N1d[(B>*H!!!8B&cN@B%K-8,#Jh#Q
%a4q>!!!AB(B>*H!!!8\&`aN(%K-8,#Jh#Q%d!c>!!!AB(B>*H!!!9!&]t[c%K-8,#Jh#R%KO!=!"-pd
p(m]Ar;Zg&_%?YVr;Zg&fb3N^!"QI<!".j)g_Tr'r;Zg&_%?YVr;Zg&o+K@^!"QO>!WW3-_&!(ar;Zg&
b7XI\!"Jl,!!g=Q!"RHXjT#8f_&!(ar;Zg&jUp;\!"Jl,!!g=Q!"SArb5_ML_&!(ar;Zm(&J;nm!"Jl,
!!gLVr"8u>[f?C8dhhHh!##51!!g=P!"Jl,!!hEpiXu5$[f?C8m2+:h!##51!!g=P!"Jl,!!i?5a:\I_
]E%j0!"-OY!##51!!gd]oFV'4r;Zg&_%H_Xec=\0!"-OY!##51!!h^"g(=;or;Zg&_%H_Xn,UN0!"-OY
!##51!!g=P!"Jl,!!gUYq%<Z;[f?C8eedZh!##51!!g=P!"Jl,!!hNsh\#o![f?C8n/'Lh!##51!!g=P
!"Jl,!!iH8`=`.\^B"'0!=0IX(B>$F!!*67dLl!]!"Af+!<j(P&c`?n!8dbW"Vnlj!"Jl,!<Wl!&_@Tp
$2ji)!t`<^!"&5s`;foB'uCaf#lsr)!<WkL&HE%6!!*05bnB^_!!]n4!<Eti([;e;'aOX:!"d$[!=oA3
!!!Vo'&=0$&-]KB!#+u@ckc]u!W2ot%`8kY&H2\/!!!PI&c`N_!:^$i$5UPr!"o).!='1i&aL#/%/U#*
#8+le!"Ifcf)PgQ'u^si('sd;!<E`'&^h6l&-_q2!<EbN&ciRJq#J&-!"m9grYGPLq#CC'`=W(\q#CC(
eIqBb!"cI:!<a.t(ZcG6((0j;!<NeP&HNFJq#CEs&F^=b&ciRLZ2ak8r>3Wn!#5/-!"6gZ!Y582q#CC&
`tA@_`W5?*!<EqW(BG6Sp&G('h\#/d!=o;+!!!SP&ciOGhuM.)!<j4](BG6Wo`,!p&,Hmd&HNCHo`,!p
&Bb[e&-hq1[K$=7(!d]q(B=s:!!*97bRjg^o)Jdq&DRog&c`9?!!*EAl5/S!!>Q.8!!*<8cOg0g$h42t
#8$VBfb+;s$`j=1!!!3<d2)fu$1@ip":rll!=oD6!:g*j";&rn!>#IS!9=+]!YcF#(BP?e"ml9k!=ob*
&ag54&.\m1!!303&_.Kq&J,'$!6>-A#Se--(BP<Z!U9Xd"V20s&HNCJkl:bg&/!P-!>#P1!3?/%$5=93
(BP<d$NL4i!!3B9&D[p"%hAs-!!3B9&a'f$&crUU#b:qu!XTJP'_iL4(BbHc&ded#!!E<,%1Nj0&HiUR
%0lsn!!!$%"qD+RjUq\-%Lr^FWrR_OJcLB&JcO$qJ,~>

%%EndBinary
grestore
np
102 362.103 mo
99.162 362.103 li
98.8859 362.103 98.662 361.879 98.662 361.603 cv
98.662 361.327 98.8859 361.103 99.162 361.103 cv
102 361.103 li
102 362.103 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[4.5 0 0 3 84.8198 172.68 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 4 
/M[6 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~K7ef;ZEf+8K9*=DK7ef;ZEf+8K9*=D~>
<~DJj?;U7uOCDL%tNDJj?;U7uOCDL%tN~>
<~DJj?:T:^"=DKqeGDJj?:T:^"=DKqeG~>
<~',)$'S!t')'-`p8',)$'S!t')'-`p8~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
84.989 382.183 mo
92.817 382.183 99.162 375.833 99.162 368.013 cv
99.162 355.193 li
99.162 347.363 92.817 341.023 84.989 341.023 cv
65.147 341.023 li
57.319 341.023 50.973 347.363 50.973 355.193 cv
50.973 368.013 li
50.973 375.833 57.319 382.183 65.147 382.183 cv
84.989 382.183 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [75.068 128.02 75.068 210.34 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /13 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
75.068 128.02 75.068 210.34 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/13 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
84.989 382.183 mo
92.817 382.183 99.162 375.833 99.162 368.013 cv
99.162 355.193 li
99.162 347.363 92.817 341.023 84.989 341.023 cv
65.147 341.023 li
57.319 341.023 50.973 347.363 50.973 355.193 cv
50.973 368.013 li
50.973 375.833 57.319 382.183 65.147 382.183 cv
84.989 382.183 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
60.125 365.713 mo
(-)sh
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
63.8 365.713 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12.025 0 0 -12.025 0 0 ]msf
66.525 365.713 mo
(2 3 1)
[6.00052 2.98218 6.00052 2.24865 0 ]xsh
102 498.113 mo
51 498.113 li
51 454.613 li
102 454.613 li
102 474.488 li
99.162 474.488 li
98.8859 474.488 98.662 474.712 98.662 474.988 cv
98.662 475.264 98.8859 475.488 99.162 475.488 cv
102 475.488 li
102 498.113 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[52.5 0 0 45 36.8198 36.9297 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 70 
/H 60 
/M[70 0 0 -60 0 60 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 70 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&]Dr'9"UYSKjq7b'$4$e#!;-<p!<WQ3%-A!$#6tD6hZ*c[!s]&?jphIu#6b2(!2TYu!X]VW
(#p)7(Ddi%'b(?.!!E<-%hK91&HiXU%g`@"!!E<-%hTBB'(QY<&J,K["/,\r!>$"A(Z?/3'bUZ5!!*K=
fb"8r%0GhqrVus-&D7Zt&.ScI!:p0k%2ID0!Yl7Ili7%m&(hKn&HNCNlMpql&ChBo&.He`gAh9U',K"4
!>Pb*!!*Q@nIaam!=o8"!!*TBdLlQl!pK^%!!*6<cPHTt#PS5q!!*04cOg0h"n;Qn!t`fl!YQ(KX8i8(
(#0Vr(BG6Uo)Jdm&'Y[e%gDP)!<Nhs''0`,&-]3:!<Er.(Y9H(('O70!"[6b!>#>)!!!SR&ciRG])_L(
!#!Bi!>GS.!!!JY&bQ_9&+oo&%`o=`&(L[8!!*EBa;4ggpAb4!&FU4b&HE76!!*<:a:\I^n,U?+!<EqU
(BG6SrW)fq!"[*^!=o;-!!!SV')<.@&-K6=!"I[!lPBO8q#CC$`=W(\q#CC$kRu_b!"ZF:!<Eu/(XX$"
'a=F6!"d*]!=o;3!;ult&]G@`&-KlOnGiRq(;q!h%f65,"VBB"lOa+(qZ$X#&]>:^$Jtj8!!!VJ(]+14
%.b(X&c2P.%DibR!5/@4(<76i(BG6Squ?^._[un["8i-!&_%H_&ciOG[f?F3(#]tg(B=d?!!*-3_@ZbP
r;Zj"&FL1]&c`-F!!*6<q\R<i!"/Z)!<WkL&HE(7!!*05_@chRaT1c0!=0IX(B=sD!!*67g_&]]!"/Z)
!<j(P&c`:!!7_&L$GdMY')_e1#PA\R&HE:=!!!8?&c`F?!4r42$HX+[(B>*H!!!8?&HE:=!!!8T''p52
%^uE<$KDr[(B>*H!!!8?&HE:=!!!8n'%.Bm%^uE<$N1d[(B>*H!!!8B&cN@B%K-8,#Jh#Q%a4q>!!!AB
(B>*H!!!8\&`aN(%K-8,#Jh#Q%d!c>!!!AB(B>*H!!!9!&]t[c%K-8,#Jh#R%KO!=!"-pdp(m]Ar;Zg&
_%?YVr;Zg&fb3N^!"QI<!".j)g_Tr'r;Zg&_%?YVr;Zg&o+K@^!"QO>!WW3-_&!(ar;Zg&b7XI\!"Jl,
!!g=Q!"RHXjT#8f_&!(ar;Zg&jUp;\!"Jl,!!g=Q!"SArb5_ML_&!(ar;Zm(&J;nm!"Jl,!!gLVr"8u>
[f?C8dhhHh!##51!!g=P!"Jl,!!hEpiXu5$[f?C8m2+:h!##51!!g=P!"Jl,!!i?5a:\I_]E%j0!"-OY
!##51!!gd]oFV'4r;Zg&_%H_Xec=\0!"-OY!##51!!h^"g(=;or;Zg&_%H_Xn,UN0!"-OY!##51!!g=P
!"Jl,!!gUYq%<Z;[f?C8eedZh!##51!!g=P!"Jl,!!hNsh\#o![f?C8n/'Lh!##51!!g=P!"Jl,!!iH8
`=`.\^B"'0!"$IX!"o/0!!^g_nIYa0r;Zg%_%H_Wf`9n0!='@V(B=pC!!*66lk.h]!"&T(!<j%O&c`70
!6"p="Vnlj!=Ai+!!*04_@ZbQr;Zj#&Btj]&c`0G!!**9g)'#j!>Pk;!!!SJ&HNCGqu?^/k7ZS`!>#FC
!!!`*(XNs!('4=5!"ZsZ!"f,0rVup/_\)q]`;oE.!"6[\!#,50!!q6ilOa+,qZ$U%_\)q[hZ27.!<j4W
(BG9YqZ$X!&+gI^&HNFJqZ$X!&B,7_&I8+3]DqpGa;=gl!>PY3!!!PK&HE@;!!!P['(HS7&@2?;"Vp&6
j;.e*q#CEt&&o1]$2FQ%!tar7f+J&iZ2ak:r>3Wn!#>5.!"?m[!Y582q#CC(`tA@``W5?*!<O"X(BG6V
pAb3p&)Rub&HNCGpAb3p&BPOc&-^tld/X1P(<REn%J9]%"VCMBd1H?bo`,!r&]t^d$2FS0!!!JR(]G3N
'(Z)'$-Nn\%J'Q"$/6*_&c`EC!!*ZIl5/Ou!>GS*!!*K>c4L$enGiS!&bcpj&c`HD!!<3$$Ph&*!>Q17
!!*?9d1HBi%/p7t!!*?:d1QHk%)i5-!!*9>dh`$"$1.]n";'`.m1B@0#42Bk";0)q!>#Il!6G3B!=]dq
(BP<`!pTad#nPW"!Y5\?l2Uhk&D%Nr&.J[7!3H5'!Y?+^h%p,.(D-WNk5YSb$kNs*&H`RV$j5Ym!s&fB
&Ea]#&d&^Y%0N1%":#DN(Dli]mM,mA(DRMf!TF(^"UYbP&`jN+&J5N^"lTF]"To)B&ea:;";2=Y%0`d4
li7"gjos?:!!;9bq#K:P!!;9b^];d_!!MEff)PdPp]Ksef)PdPjoa<;blE7~>

%%EndBinary
grestore
np
102 475.488 mo
99.162 475.488 li
98.8859 475.488 98.662 475.264 98.662 474.988 cv
98.662 474.712 98.8859 474.488 99.162 474.488 cv
102 474.488 li
102 475.488 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[4.5 0 0 2.25 84.8198 59.4297 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 3 
/M[6 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~K7ef;ZEf+8K9*=DK7ef;ZEa~>
<~DJj?;U7uOCDL%tNDJj?;U7q~>
<~DJj?:T:^"=DKqeGDJj?:T:Z~>
<~',)$'S!t')'-`p8',)$'S!s~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
84.989 495.567 mo
92.817 495.567 99.162 489.222 99.162 481.394 cv
99.162 468.581 li
99.162 460.754 92.817 454.408 84.989 454.408 cv
65.147 454.408 li
57.319 454.408 50.973 460.754 50.973 468.581 cv
50.973 481.394 li
50.973 489.222 57.319 495.567 65.147 495.567 cv
84.989 495.567 li
cp
level3{
gsave
[1 0 0 -1 0 551.363 ]ct
<<
/PatternType 2
/Shading
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [75.068 14.637 75.068 96.955 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzz!<<*"!<<*"!W`<%!s&E&!s/N("9JW)"Tni,"Tni,"Tni,"p>&/#6b82#R(A3#R(A3#mLS6#
mLS6$3pe9$3pe9$3pe9$3pe9$3pe9$O@"<$O@"<$O@"<$O@"<$O@"<$O@"<$3pe9$3pe9$3pe9$3pe9$
3pe9#mLS6#mLS6#R(A3#R(A3#6b82"p>&/"Tni,"Tni,"Tni,"9JW)!s/N(!s&E&!W`<%!<<*"!<<*"z
zzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /14 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 0 551.363 ]ct
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzz!!**$!<N<(!WiE)!WrN,!sA`0"9\i1"9\i1"9\l3"U,)7"pP;;#6tJ=#6tM?#RC\A#RC_C
#mgnE#mgnE#mgnE#mgnE#mgqG$47+I$47+I$47+I$47+I$47+I$47+I$47+H#mgnE#mgnE#mgnE#mgnE
#mgnD#RC\A#RC\@#6tJ=#6tJ<"pP88"U,&4"9\i1"9\i1"9\i1!s8W-!WiE)!WiE)!<E3%zzzzzzzzz!
!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
<~zzzzzzzzzzzz!!**$!<E3%!<N<(!WiE)!WiE)!WiH+!s8Z/"9\i1"9\i1"9\l3"U,&5"U,)7"pP89"pP
89"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ=#6tJ<"pP89"pP89"pP89"pP89"pP88"U,
&5"U,&4"9\i1"9\i1"9\i0!s8W,!WiE)!WiE)!WiE)!<E3%!<E3%zzzzzzzzzzz!!!!!~>
0 ]
>>
75.068 14.637 75.068 96.955 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/14 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
84.989 495.567 mo
92.817 495.567 99.162 489.222 99.162 481.394 cv
99.162 468.581 li
99.162 460.754 92.817 454.408 84.989 454.408 cv
65.147 454.408 li
57.319 454.408 50.973 460.754 50.973 468.581 cv
50.973 481.394 li
50.973 489.222 57.319 495.567 65.147 495.567 cv
84.989 495.567 li
cp
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
60.125 479.263 mo
(2 2 )
[6.02405 2.98798 6.02404 0 ]xsh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
77.75 479.263 mo
(-)sh
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
81.425 479.263 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
AWLUJA+Calibri*1 [12 0 0 -12 0 0 ]msf
84.15 479.263 mo
(1)sh
161.25 292.613 mo
159.475 292.613 li
157.906 292.034 156.21 291.718 154.44 291.718 cv
152.25 291.718 li
152.25 274.613 li
161.25 274.613 li
161.25 292.613 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[10.5 0 0 19.5 138.07 242.43 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 26 
/M[14 0 0 -26 0 26 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!"!!!!!!!!!!!!!!!!!*'"!!!!!!!!!!!!!?4!!!!!!!!!!!!!!!'*8.6!!!!!!!!!!
!!Nr7!!!!!!!!!!!!!!,#ljr*!!!!!!!!!!!#5M7!!!!!!!!!!!!!06!!!!!!!!!!!!!!!%0uq6!!!!!
!!!!!!!!`6!!!!!!!!!!!!!!(%KHJ/!!!!!!!!!!!"T55!!!!!!!!!!!!!$7!!!!!!!!!!!!!!!#Rpb6
!!!!!!!!!!!!!T7!!!!!!!!!!!!!!#'EA+5!!!!!!!!!!!!ru4!!!!!!!!!!!!!!4!WW3#!!!!!!!!!!
";1\7!!!!!!!!!!!!!?4!!!!!!!!!!!!!!!'`e:7!!!!!!!!!!!!Nr7!!!!!!!!!!!!!!.#QOi)!!!!!
!!!!!!#5M7!!!!!!!!!!!!!66!!!!!!!!!!!!!!!%g;q5!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!6.!!!!!!!!!!!!!!!%KQP0!!!!!!!!!!
!!<W0!!!!!!!!!!!!!!)"onW'!!!!!!!!!!!"T&0!!!!!!!!!!!!!*0!!!!!!!!!!!!!!!#mC;/!!!!!
!!!!!!!!N0!!!!!!!!!!!!!!&$31&+!!!!!!!!!!!"/l/!!!!!!!!!!!!!!0!!!!!!!!!!!!!!!"UP//
!!!!!!!!!!!!!E0!!!!!!!!!!!!!!"%fcS0!!!!!!!!!!!!WZ.!!!!!!!!!!!!!!/!<<*"!!!!!!!!!!
!Y#,0!!!!!!!!!!!!!6.!!!!!!!!!!!!!!!%fcS0!!!!!!!!!!!!<W0!!!!!!!!!!!!!!*"TSN&!!!!!
!!!!!!"T&0!!!!!!!!!!!!!00!!!!!!!!!!!!!!!$NgA/!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!6.!!!!!!!!!!!!!!!%flY1!!!!!!!!!!
!!<Z1!!!!!!!!!!!!!!)"onW'!!!!!!!!!!!"],1!!!!!!!!!!!!!*0!!!!!!!!!!!!!!!#mC;/!!!!!
!!!!!!!!Q1!!!!!!!!!!!!!!&$31&+!!!!!!!!!!!"/l/!!!!!!!!!!!!!!1!!!!!!!!!!!!!!!"UP//
!!!!!!!!!!!!!H1!!!!!!!!!!!!!!"%fcS0!!!!!!!!!!!!WZ.!!!!!!!!!!!!!!0!<<*"!!!!!!!!!!
!Y,21!!!!!!!!!!!!!6.!!!!!!!!!!!!!!!&-)\1!!!!!!!!!!!!<Z1!!!!!!!!!!!!!!*"TSN&!!!!!
!!!!!!"],1!!!!!!!!!!!!!00!!!!!!!!!!!!!!!$NgA/!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
161.25 293.408 mo
160.68 293.105 160.087 292.839 159.475 292.613 cv
161.25 292.613 li
161.25 293.408 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[2.13158 0 0 1.20536 145.925 242.135 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 5 
/M[9 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$46n="98E%!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#6t;3!WW3#!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#6t;3!WW3#!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
161.25 294.863 mo
152.25 294.863 li
152.25 292.468 li
154.44 292.468 li
156.918 292.469 159.241 293.121 161.25 294.264 cv
161.25 294.863 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[9.47368 0 0 2.89286 138.583 240.689 ]ct
snap_to_device
<<
/T 1
/W 40 
/H 12 
/M[40 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!#6tJD%LrI=!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#6tJD%LrI=!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!%hB0S"U+l+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!%hB0S
"U+l+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!%hB0S"U+l+!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!%1NaH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!%1NaH!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!%1NaH!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!"U,&:$46b5!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"U,&:$46b5!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E
!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!"U,&:$46b5!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"U,&:$46b5!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E
!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=E!s8N'!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#mgn<!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
161.25 294.264 mo
159.241 293.121 156.918 292.469 154.44 292.468 cv
152.25 292.468 li
152.25 291.718 li
154.44 291.718 li
156.21 291.718 157.906 292.034 159.475 292.613 cv
160.087 292.839 160.68 293.105 161.25 293.408 cv
161.25 294.264 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 13.4302 535.793 ]ct
[10.5 0 0 3.75 138.07 240.93 ]ct
snap_to_device
<<
/T 1
/W 14 
/H 5 
/M[14 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~ZEg`mZ*L[@ZEgdAZEgdAVjOcqZEgdAZEgdAZEfdoZEgdAZEgdAZEgdAS?]B*ZEgdAZEgdAZEgdAZEgdA
ZEgdAZEa~>
<~U8"B(TVA0TU8"BVU8"BVP_,X(U8"BVU8"BVU8!4'U8"BVU8"BVU8"BVL8(E:U8"BVU8"BVU8"BVU8"BV
U8"BVU7q~>
<~T:_`sStDXIT:_aJT:_aJOb'-sT:_aJT:_aJT:^XrT:_aJT:_aJT:_aJKqG!0T:_aJT:_aJT:_aJT:_aJ
T:_aJT:Z~>
<~S"#`_Odhi0S"#n:S"#n:>r.t>S"#n:S"#n:S!u*=S"#n:S"#n:S"#n:4-uG+S"#n:S"#n:S"#n:S"#n:
S"#n:S!s~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
158.34 273.953 mo
151.87 292.093 li
1 /0 /CSD get_res sepcs
.749 sep
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 6262 282 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
3100>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/d 282 def
end
PBAAAA+Calibri /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/AWLUJA+Calibri*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 3{/.notdef}rp /one /two /three 
15{/.notdef}rp /C 2{/.notdef}rp /F 2{/.notdef}rp /I 3{/.notdef}rp /M 
/N 4{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /d 
/e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
AWLUJA+Calibri nf
AWLUJA+Calibri*1 [9.775 0 0 -9.775 0 0 ]msf
130.65 265.983 mo
(Second CMINFS)
[4.48672 5.24918 3.75365 5.23933 5.23933 5.23933 2.23846 5.99211 8.27939 2.24825 6.74471 4.48672 
0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 ]]
] del_res
/AWLUJA+Calibri*1 uf
/AWLUJA+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
